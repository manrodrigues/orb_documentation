{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Login Scenarios: Request registration of a registered account using registered password username and company Request registration of a registered account using registered password and username Request registration of a registered account using registered password and company Request registration of a registered account using registered password Request registration of a registered account using unregistered password username and company Request registration of a registered account using unregistered password and username Request registration of a registered account using unregistered password and company Request registration of a registered account using unregistered password Request registration of an unregistered account with valid password and invalid email Request registration of an unregistered account with valid password and valid email Request registration of an unregistered account with invalid password and valid email Request registration of an unregistered account with invalid password and invalid email Check if email and password are required fields Login with valid credentials Login with invalid credentials Request password with registered email address Request password with unregistered email address Agents Scenarios: Check if total agent on agents' page is correct Create agent without tags Create agent with one tag Create agent with multiple tags Create agent with invalid name (regex) Create agent with duplicate name Test agent filters Check agent details Edit an agent through the details modal Edit agent name Edit agent tag Save agent without tag Insert tags in agents created without tags Check if is possible cancel operations with no change Remove agent using correct name Remove agent using incorrect name Edit agent name and tag Agent Groups Scenarios: Check if total agent groups on agent groups' page is correct Create agent group with invalid name (regex) Create agent group with duplicate name Create agent group with description Create agent group without description Create agent group without tag Create agent group with one tag Create agent group with multiple tags Test agent groups filters Visualize matching agents Check agent groups details Edit an agent group through the details modal Check if is possible cancel operations with no change Remove agent group using correct name Remove agent group using incorrect name Run two orb agents on the same port Run two orb agents on different ports Edit Agent Group name removing name Edit agent group name Edit agent group description Edit Agent Group description removing description Edit agent group tag Edit Agent Group tags to subscribe agent Edit Agent Group tags to unsubscribe agent Edit Agent Group removing tags Edit Agent Group name, description and tags Sink Scenarios: Check if total sinks on sinks' page is correct Create sink with invalid name (regex) Create sink with duplicate name Create sink with description Create sink without description Create sink without tags Create sink with tags Create sink with multiple tags Check if remote host, username and password are required to create a sink Test sink filters Check sink details Edit a sink through the details modal Edit sink name Edit sink description Edit sink remote host Edit sink username Edit sink password Edit sink tags Check if is possible cancel operations with no change Remove sink using correct name Remove sink using incorrect name Policies Scenarios: Check if total policies on policies' page is correct Create policy with invalid name (regex) Create policy with no agent provisioned Create policy with duplicate name Create policy with description Create policy without description Create policy with dhcp handler Create policy with dns handler Create policy with net handler Create policy with multiple handlers Test policy filters Check policies details Edit a policy through the details modal Edit policy name Edit policy host_specification Edit policy bpf_filter_expression Edit policy pcap_source Edit policy only_qname_suffix Edit policy only_rcode Edit policy description Edit policy handler Check if is possible cancel operations with no change Remove policy using correct name Remove policy using incorrect name Create duplicated net policy without insert new name Create duplicated dhcp policy without insert new name Create duplicated dns policy without insert new name Create 4 duplicated policy with new name Create 3 duplicated dns policy without insert new name and 1 with new name Datasets Scenarios: Check if total datasets on datasets' page is correct Create dataset with invalid name (regex) Create dataset Check datasets details Check if is possible cancel operations with no change Test datasets filter Edit a dataset through the details modal Edit dataset name Edit dataset sink Remove dataset using correct name Remove dataset using incorrect name Integration Scenarios: Check if sink is active while scraping metrics Check if sink with invalid credentials becomes active Check if after 30 minutes without data sink becomes idle Provision agent before group (check if agent subscribes to the group) Provision agent after group (check if agent subscribes to the group) Provision agent with tag matching existing group linked to a valid dataset Apply multiple policies to a group Apply multiple policies to a group and remove one policy Apply multiple policies to a group and remove all of them Apply multiple policies to a group and remove one dataset Apply multiple policies to a group and remove all datasets Apply the same policy twice to the agent Delete sink linked to a dataset, create another one and edit dataset using new sink Remove one of multiples datasets that apply the same policy to the agent Remove group (invalid dataset, agent logs) Remove sink (invalid dataset, agent logs) Remove policy (invalid dataset, agent logs, heartbeat) Remove dataset (check agent logs, heartbeat) Remove agent container (logs, agent groups matches) Remove agent container force (logs, agent groups matches) Remove agent (logs, agent groups matches) Subscribe an agent to multiple groups created before agent provisioning Subscribe an agent to multiple groups created after agent provisioning Agent subscription to group after editing orb agent's tags Agent subscription to group with policies after editing orb agent's tags Edit agent name and apply policies to then Insert tags in agents created without tags and apply policies to group matching new tags.md Agent unsubscription to group with policies after editing agent group's tags (editing tags after agent provision) Agent subscription to group with policies after editing agent group's tags (editing tags after agent provision) Agent unsubscription to group with policies after editing agent group's tags (editing tags before agent provision) Agent subscription to group with policies after editing agent group's tags (editing tags before agent provision) Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision) Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision) Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision) Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision) Remotely reset an agent with policies Remotely reset an agent without policies Pktvisor Agent Providing Orb-agent with sample commands Providing Orb-agent with configuration files Providing Orb-agent with advanced auto-provisioning setup Providing more than one Orb-agent with different ports Providing Orb-agent using mocking interface Providing a Orb-agent with a wrong interface Pull the latest orb-agent image, build and run the agent","title":"Scenarios list"},{"location":"index.html#login-scenarios","text":"Request registration of a registered account using registered password username and company Request registration of a registered account using registered password and username Request registration of a registered account using registered password and company Request registration of a registered account using registered password Request registration of a registered account using unregistered password username and company Request registration of a registered account using unregistered password and username Request registration of a registered account using unregistered password and company Request registration of a registered account using unregistered password Request registration of an unregistered account with valid password and invalid email Request registration of an unregistered account with valid password and valid email Request registration of an unregistered account with invalid password and valid email Request registration of an unregistered account with invalid password and invalid email Check if email and password are required fields Login with valid credentials Login with invalid credentials Request password with registered email address Request password with unregistered email address","title":"Login Scenarios:"},{"location":"index.html#agents-scenarios","text":"Check if total agent on agents' page is correct Create agent without tags Create agent with one tag Create agent with multiple tags Create agent with invalid name (regex) Create agent with duplicate name Test agent filters Check agent details Edit an agent through the details modal Edit agent name Edit agent tag Save agent without tag Insert tags in agents created without tags Check if is possible cancel operations with no change Remove agent using correct name Remove agent using incorrect name Edit agent name and tag","title":"Agents Scenarios:"},{"location":"index.html#agent-groups-scenarios","text":"Check if total agent groups on agent groups' page is correct Create agent group with invalid name (regex) Create agent group with duplicate name Create agent group with description Create agent group without description Create agent group without tag Create agent group with one tag Create agent group with multiple tags Test agent groups filters Visualize matching agents Check agent groups details Edit an agent group through the details modal Check if is possible cancel operations with no change Remove agent group using correct name Remove agent group using incorrect name Run two orb agents on the same port Run two orb agents on different ports Edit Agent Group name removing name Edit agent group name Edit agent group description Edit Agent Group description removing description Edit agent group tag Edit Agent Group tags to subscribe agent Edit Agent Group tags to unsubscribe agent Edit Agent Group removing tags Edit Agent Group name, description and tags","title":"Agent Groups Scenarios:"},{"location":"index.html#sink-scenarios","text":"Check if total sinks on sinks' page is correct Create sink with invalid name (regex) Create sink with duplicate name Create sink with description Create sink without description Create sink without tags Create sink with tags Create sink with multiple tags Check if remote host, username and password are required to create a sink Test sink filters Check sink details Edit a sink through the details modal Edit sink name Edit sink description Edit sink remote host Edit sink username Edit sink password Edit sink tags Check if is possible cancel operations with no change Remove sink using correct name Remove sink using incorrect name","title":"Sink Scenarios:"},{"location":"index.html#policies-scenarios","text":"Check if total policies on policies' page is correct Create policy with invalid name (regex) Create policy with no agent provisioned Create policy with duplicate name Create policy with description Create policy without description Create policy with dhcp handler Create policy with dns handler Create policy with net handler Create policy with multiple handlers Test policy filters Check policies details Edit a policy through the details modal Edit policy name Edit policy host_specification Edit policy bpf_filter_expression Edit policy pcap_source Edit policy only_qname_suffix Edit policy only_rcode Edit policy description Edit policy handler Check if is possible cancel operations with no change Remove policy using correct name Remove policy using incorrect name Create duplicated net policy without insert new name Create duplicated dhcp policy without insert new name Create duplicated dns policy without insert new name Create 4 duplicated policy with new name Create 3 duplicated dns policy without insert new name and 1 with new name","title":"Policies Scenarios:"},{"location":"index.html#datasets-scenarios","text":"Check if total datasets on datasets' page is correct Create dataset with invalid name (regex) Create dataset Check datasets details Check if is possible cancel operations with no change Test datasets filter Edit a dataset through the details modal Edit dataset name Edit dataset sink Remove dataset using correct name Remove dataset using incorrect name","title":"Datasets Scenarios:"},{"location":"index.html#integration-scenarios","text":"Check if sink is active while scraping metrics Check if sink with invalid credentials becomes active Check if after 30 minutes without data sink becomes idle Provision agent before group (check if agent subscribes to the group) Provision agent after group (check if agent subscribes to the group) Provision agent with tag matching existing group linked to a valid dataset Apply multiple policies to a group Apply multiple policies to a group and remove one policy Apply multiple policies to a group and remove all of them Apply multiple policies to a group and remove one dataset Apply multiple policies to a group and remove all datasets Apply the same policy twice to the agent Delete sink linked to a dataset, create another one and edit dataset using new sink Remove one of multiples datasets that apply the same policy to the agent Remove group (invalid dataset, agent logs) Remove sink (invalid dataset, agent logs) Remove policy (invalid dataset, agent logs, heartbeat) Remove dataset (check agent logs, heartbeat) Remove agent container (logs, agent groups matches) Remove agent container force (logs, agent groups matches) Remove agent (logs, agent groups matches) Subscribe an agent to multiple groups created before agent provisioning Subscribe an agent to multiple groups created after agent provisioning Agent subscription to group after editing orb agent's tags Agent subscription to group with policies after editing orb agent's tags Edit agent name and apply policies to then Insert tags in agents created without tags and apply policies to group matching new tags.md Agent unsubscription to group with policies after editing agent group's tags (editing tags after agent provision) Agent subscription to group with policies after editing agent group's tags (editing tags after agent provision) Agent unsubscription to group with policies after editing agent group's tags (editing tags before agent provision) Agent subscription to group with policies after editing agent group's tags (editing tags before agent provision) Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision) Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision) Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision) Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision) Remotely reset an agent with policies Remotely reset an agent without policies","title":"Integration Scenarios:"},{"location":"index.html#pktvisor-agent","text":"Providing Orb-agent with sample commands Providing Orb-agent with configuration files Providing Orb-agent with advanced auto-provisioning setup Providing more than one Orb-agent with different ports Providing Orb-agent using mocking interface Providing a Orb-agent with a wrong interface Pull the latest orb-agent image, build and run the agent","title":"Pktvisor Agent"},{"location":"development_guide.html","text":"INTEGRATION Integration Scenario Automated via API Automated via UI Smoke Sanity Check if sink is active while scraping metrics \u2705 \ud83d\udc4d \ud83d\udc4d Check if sink with invalid credentials becomes active \u2705 \ud83d\udc4d \ud83d\udc4d Check if after 30 minutes without data sink becomes idle Provision agent before group (check if agent subscribes to the group) \u2705 \ud83d\udc4d \ud83d\udc4d Provision agent after group (check if agent subscribes to the group) \u2705 \ud83d\udc4d \ud83d\udc4d Provision agent with tag matching existing group linked to a valid dataset \u2705 \ud83d\udc4d \ud83d\udc4d Apply multiple simple policies to a group \u2705 \ud83d\udc4d \ud83d\udc4d Apply multiple advanced policies to a group \u2705 \ud83d\udc4d \ud83d\udc4d Apply multiple policies to a group and remove one policy \u2705 \ud83d\udc4d \ud83d\udc4d Apply multiple policies to a group and remove all of them Apply multiple policies to a group and remove one dataset \u2705 \ud83d\udc4d \ud83d\udc4d Apply multiple policies to a group and remove all datasets Apply the same policy twice to the agent \u2705 \ud83d\udc4d \ud83d\udc4d Delete sink linked to a dataset, create another one and edit dataset using new sink \u2705 \ud83d\udc4d \ud83d\udc4d Remove one of multiples datasets that apply the same policy to the agent Remove group (invalid dataset, agent logs) \u2705 \ud83d\udc4d \ud83d\udc4d Remove sink (invalid dataset, agent logs) \u2705 \ud83d\udc4d \ud83d\udc4d Remove policy (invalid dataset, agent logs, heartbeat) \u2705 \ud83d\udc4d \ud83d\udc4d Remove dataset (check agent logs, heartbeat) \u2705 \ud83d\udc4d \ud83d\udc4d Remove agent container (logs, agent groups matches) \ud83d\udc4d \ud83d\udc4d Remove agent container force (logs, agent groups matches) \ud83d\udc4d \ud83d\udc4d Remove agent (logs, agent groups matches) \ud83d\udc4d \ud83d\udc4d Subscribe an agent to multiple groups created before agent provisioning \u2705 \ud83d\udc4d \ud83d\udc4d Subscribe an agent to multiple groups created after agent provisioning \u2705 \ud83d\udc4d \ud83d\udc4d Agent subscription to group after editing orb agent's tags (editing before agent provision) \u2705 \ud83d\udc4d \ud83d\udc4d Agent subscription to group after editing orb agent's tags (editing after agent provision and after groups creation) \u2705 \ud83d\udc4d \ud83d\udc4d Agent subscription to group after editing orb agent's tags (editing after agent provision and before second group creation) \u2705 \ud83d\udc4d \ud83d\udc4d Agent subscription to group with policies after editing orb agent's tags \u2705 \ud83d\udc4d \ud83d\udc4d Agent subscription to multiple groups with policies after editing orb agent's tags \u2705 \ud83d\udc4d \ud83d\udc4d Edit agent name and apply policies to then \u2705 \ud83d\udc4d \ud83d\udc4d Insert tags in agents created without tags and apply policies to group matching new tags.md \u2705 \ud83d\udc4d \ud83d\udc4d Agent unsubscription to group with policies after editing agent group's tags (editing tags after agent provision) \u2705 \ud83d\udc4d \ud83d\udc4d Agent subscription to group with policies after editing agent group's tags (editing tags after agent provision) \u2705 \ud83d\udc4d \ud83d\udc4d Agent unsubscription to group with policies after editing agent group's tags (editing tags before agent provision) \u2705 \ud83d\udc4d \ud83d\udc4d Agent subscription to group with policies after editing agent group's tags (editing tags before agent provision) \u2705 \ud83d\udc4d \ud83d\udc4d Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision) \u2705 \ud83d\udc4d \ud83d\udc4d Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision) \u2705 \ud83d\udc4d \ud83d\udc4d Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision) \u2705 \ud83d\udc4d \ud83d\udc4d Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision) \u2705 \ud83d\udc4d \ud83d\udc4d Remotely reset an agent with policies \u2705 \u2705 \ud83d\udc4d \ud83d\udc4d Remotely reset an agent without policies \u2705 \u2705 \ud83d\udc4d \ud83d\udc4d --------------------------------- ## LOGIN Login Scenario Automated via API Automated via UI Smoke Sanity Request registration of a registered account using registered password username and company \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of a registered account using registered password and username \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of a registered account using registered password and company \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of a registered account using registered password \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of a registered account using unregistered password username and company \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of a registered account using unregistered password and username \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of a registered account using unregistered password and company \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of a registered account using unregistered password \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of an unregistered account with valid password and invalid email \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of an unregistered account with valid password and valid email \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of an unregistered account with invalid password and valid email \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of an unregistered account with invalid password and invalid email \u2705 \ud83d\udc4d \ud83d\udc4d Check if email and password are required fields \u2705 \ud83d\udc4d \ud83d\udc4d Login with valid credentials \u2705 \u2705 \ud83d\udc4d \ud83d\udc4d Login with invalid credentials \u2705 \ud83d\udc4d \ud83d\udc4d Request password with registered email address \ud83d\udc4d \ud83d\udc4d Request password with unregistered email address \ud83d\udc4d AGENTS Agents Scenario Automated via API Automated via UI Smoke Sanity Check if total agent on agents' page is correct Create agent without tags \u2705 \ud83d\udc4d Create agent with one tag \u2705 \u2705 \ud83d\udc4d \ud83d\udc4d Create agent with multiple tags \u2705 \ud83d\udc4d Create agent with invalid name (regex) \ud83d\udc4d Create agent with duplicate name \ud83d\udc4d Test agent filters Check agent details \ud83d\udc4d Edit an agent through the details modal \ud83d\udc4d Edit agent name \u2705 \ud83d\udc4d \ud83d\udc4d Edit agent tag \u2705 \ud83d\udc4d \ud83d\udc4d Edit agent name and tag \u2705 \ud83d\udc4d Save agent without tag \u2705 \ud83d\udc4d Insert tags in agents created without tags \u2705 \ud83d\udc4d \ud83d\udc4d Check if is possible cancel operations with no change Remove agent using correct name \u2705 \ud83d\udc4d \ud83d\udc4d Remove agent using incorrect name \ud83d\udc4d Run two orb agents on the same port \u2705 \u2705 \ud83d\udc4d \ud83d\udc4d Run two orb agents on different ports \u2705 \u2705 \ud83d\udc4d \ud83d\udc4d AGENT GROUP Agent Group Scenario Automated via API Automated via UI Smoke Sanity Check if total agent groups on agent groups' page is correct Create agent group with invalid name (regex) \ud83d\udc4d Create agent group with duplicate name \ud83d\udc4d Create agent group with description \u2705 \ud83d\udc4d \ud83d\udc4d Create agent group without description \u2705 \ud83d\udc4d Create agent group without tag \u2705 \ud83d\udc4d Create agent group with one tag \u2705 \ud83d\udc4d \ud83d\udc4d Create agent group with multiple tags \u2705 \ud83d\udc4d Test agent groups filters Visualize matching agents \u2705 \ud83d\udc4d Check agent groups details \ud83d\udc4d Edit an agent group through the details modal \ud83d\udc4d Check if is possible cancel operations with no change Edit agent group name \u2705 \ud83d\udc4d \ud83d\udc4d Edit agent group description \u2705 \ud83d\udc4d Edit agent group tag \u2705 \ud83d\udc4d \ud83d\udc4d Remove agent group using correct name \u2705 \ud83d\udc4d \ud83d\udc4d Remove agent group using incorrect name \ud83d\udc4d Edit Agent Group name removing name \u2705 \ud83d\udc4d \ud83d\udc4d Edit Agent Group description removing description \u2705 \ud83d\udc4d \ud83d\udc4d Edit Agent Group description \u2705 \ud83d\udc4d \ud83d\udc4d Edit Agent Group tags to unsubscribe agent \u2705 \ud83d\udc4d \ud83d\udc4d Edit Agent Group tags to unsubscribe agent \u2705 \ud83d\udc4d \ud83d\udc4d Edit Agent Group removing tags \u2705 \ud83d\udc4d \ud83d\udc4d Edit Agent Group name, description and tags \u2705 \ud83d\udc4d \ud83d\udc4d SINK Sink Scenario Automated via API Automated via UI Smoke Sanity Check if total sinks on sinks' page is correct Create sink with invalid name (regex) \ud83d\udc4d Create sink with duplicate name \ud83d\udc4d Create sink with description \u2705 \ud83d\udc4d \ud83d\udc4d Create sink without description \ud83d\udc4d Create sink without tags \u2705 \ud83d\udc4d \ud83d\udc4d Create sink with tags Create sink with multiple tags Check if remote host, username and password are required to create a sink \ud83d\udc4d Test sink filters Check sink details \ud83d\udc4d Edit a sink through the details modal \ud83d\udc4d Edit sink name \ud83d\udc4d Edit sink description \ud83d\udc4d Edit sink remote host \ud83d\udc4d Edit sink username \ud83d\udc4d Edit sink password \ud83d\udc4d Edit sink tags \ud83d\udc4d Check if is possible cancel operations with no change Remove sink using correct name \u2705 \ud83d\udc4d \ud83d\udc4d Remove sink using incorrect name \ud83d\udc4d POLICIES Policies Scenario Automated via API Automated via UI Smoke Sanity Check if total policies on policies' page is correct Create policy with invalid name (regex) \ud83d\udc4d Create policy with no agent provisioned \ud83d\udc4d Create policy with duplicate name \ud83d\udc4d Create policy with description \u2705 \ud83d\udc4d \ud83d\udc4d Create policy without description \u2705 \ud83d\udc4d Create a policy with dns handler, description, host specification, bpf filter, pcap source, only qname suffix and only rcode \u2705 \ud83d\udc4d \ud83d\udc4d Create a policy with dns handler, host specification, bpf filter, pcap source, only qname suffix and only rcode \u2705 \ud83d\udc4d \ud83d\udc4d Create a policy with dns handler, bpf filter, pcap source, only qname suffix and only rcode \u2705 \ud83d\udc4d \ud83d\udc4d Create a policy with dns handler, pcap source, only qname suffix and only rcode \u2705 \ud83d\udc4d \ud83d\udc4d Create a policy with dns handler, only qname suffix \u2705 \ud83d\udc4d \ud83d\udc4d Create a policy with net handler, description, host specification, bpf filter and pcap source \u2705 \ud83d\udc4d \ud83d\udc4d Create a policy with dhcp handler, description, host specification, bpf filter and pcap source \u2705 \ud83d\udc4d \ud83d\udc4d Create policy with multiple handlers \ud83d\udc4d Test policy filters Check policies details \ud83d\udc4d Edit a policy through the details modal \ud83d\udc4d Edit policy name \u2705 \ud83d\udc4d \ud83d\udc4d Edit policy host_specification \u2705 \ud83d\udc4d \ud83d\udc4d Edit policy bpf_filter_expression \u2705 \ud83d\udc4d \ud83d\udc4d Edit policy pcap_source \u2705 \ud83d\udc4d \ud83d\udc4d Edit policy only_qname_suffix \u2705 \ud83d\udc4d \ud83d\udc4d Edit policy only_rcode \u2705 \ud83d\udc4d \ud83d\udc4d Edit policy description \u2705 \ud83d\udc4d Edit policy handler \u2705 \ud83d\udc4d \ud83d\udc4d Check if is possible cancel operations with no change Remove policy using correct name \u2705 \ud83d\udc4d \ud83d\udc4d Remove policy using incorrect name \ud83d\udc4d Create duplicated net policy without insert new name \u2705 \ud83d\udc4d \ud83d\udc4d Create duplicated dhcp policy without insert new name \u2705 \ud83d\udc4d \ud83d\udc4d Create duplicated dns policy without insert new name \u2705 \ud83d\udc4d \ud83d\udc4d Create 4 duplicated policy with new name \u2705 \ud83d\udc4d \ud83d\udc4d Create 3 duplicated dns policy without insert new name and 1 with new name \u2705 \ud83d\udc4d \ud83d\udc4d DATASETS Datasets Scenario Automated via API Automated via UI Smoke Sanity Check if total datasets on datasets' page is correct Create dataset with invalid name (regex) \ud83d\udc4d Create dataset \u2705 \ud83d\udc4d \ud83d\udc4d Check datasets details \ud83d\udc4d Check if is possible cancel operations with no change Test datasets filter Edit a dataset through the details modal Edit dataset name \ud83d\udc4d Edit dataset sink \ud83d\udc4d Remove dataset using correct name \u2705 \ud83d\udc4d \ud83d\udc4d Remove dataset using incorrect name \ud83d\udc4d","title":"Development guide"},{"location":"development_guide.html#integration","text":"Integration Scenario Automated via API Automated via UI Smoke Sanity Check if sink is active while scraping metrics \u2705 \ud83d\udc4d \ud83d\udc4d Check if sink with invalid credentials becomes active \u2705 \ud83d\udc4d \ud83d\udc4d Check if after 30 minutes without data sink becomes idle Provision agent before group (check if agent subscribes to the group) \u2705 \ud83d\udc4d \ud83d\udc4d Provision agent after group (check if agent subscribes to the group) \u2705 \ud83d\udc4d \ud83d\udc4d Provision agent with tag matching existing group linked to a valid dataset \u2705 \ud83d\udc4d \ud83d\udc4d Apply multiple simple policies to a group \u2705 \ud83d\udc4d \ud83d\udc4d Apply multiple advanced policies to a group \u2705 \ud83d\udc4d \ud83d\udc4d Apply multiple policies to a group and remove one policy \u2705 \ud83d\udc4d \ud83d\udc4d Apply multiple policies to a group and remove all of them Apply multiple policies to a group and remove one dataset \u2705 \ud83d\udc4d \ud83d\udc4d Apply multiple policies to a group and remove all datasets Apply the same policy twice to the agent \u2705 \ud83d\udc4d \ud83d\udc4d Delete sink linked to a dataset, create another one and edit dataset using new sink \u2705 \ud83d\udc4d \ud83d\udc4d Remove one of multiples datasets that apply the same policy to the agent Remove group (invalid dataset, agent logs) \u2705 \ud83d\udc4d \ud83d\udc4d Remove sink (invalid dataset, agent logs) \u2705 \ud83d\udc4d \ud83d\udc4d Remove policy (invalid dataset, agent logs, heartbeat) \u2705 \ud83d\udc4d \ud83d\udc4d Remove dataset (check agent logs, heartbeat) \u2705 \ud83d\udc4d \ud83d\udc4d Remove agent container (logs, agent groups matches) \ud83d\udc4d \ud83d\udc4d Remove agent container force (logs, agent groups matches) \ud83d\udc4d \ud83d\udc4d Remove agent (logs, agent groups matches) \ud83d\udc4d \ud83d\udc4d Subscribe an agent to multiple groups created before agent provisioning \u2705 \ud83d\udc4d \ud83d\udc4d Subscribe an agent to multiple groups created after agent provisioning \u2705 \ud83d\udc4d \ud83d\udc4d Agent subscription to group after editing orb agent's tags (editing before agent provision) \u2705 \ud83d\udc4d \ud83d\udc4d Agent subscription to group after editing orb agent's tags (editing after agent provision and after groups creation) \u2705 \ud83d\udc4d \ud83d\udc4d Agent subscription to group after editing orb agent's tags (editing after agent provision and before second group creation) \u2705 \ud83d\udc4d \ud83d\udc4d Agent subscription to group with policies after editing orb agent's tags \u2705 \ud83d\udc4d \ud83d\udc4d Agent subscription to multiple groups with policies after editing orb agent's tags \u2705 \ud83d\udc4d \ud83d\udc4d Edit agent name and apply policies to then \u2705 \ud83d\udc4d \ud83d\udc4d Insert tags in agents created without tags and apply policies to group matching new tags.md \u2705 \ud83d\udc4d \ud83d\udc4d Agent unsubscription to group with policies after editing agent group's tags (editing tags after agent provision) \u2705 \ud83d\udc4d \ud83d\udc4d Agent subscription to group with policies after editing agent group's tags (editing tags after agent provision) \u2705 \ud83d\udc4d \ud83d\udc4d Agent unsubscription to group with policies after editing agent group's tags (editing tags before agent provision) \u2705 \ud83d\udc4d \ud83d\udc4d Agent subscription to group with policies after editing agent group's tags (editing tags before agent provision) \u2705 \ud83d\udc4d \ud83d\udc4d Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision) \u2705 \ud83d\udc4d \ud83d\udc4d Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision) \u2705 \ud83d\udc4d \ud83d\udc4d Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision) \u2705 \ud83d\udc4d \ud83d\udc4d Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision) \u2705 \ud83d\udc4d \ud83d\udc4d Remotely reset an agent with policies \u2705 \u2705 \ud83d\udc4d \ud83d\udc4d Remotely reset an agent without policies \u2705 \u2705 \ud83d\udc4d \ud83d\udc4d --------------------------------- ## LOGIN Login Scenario Automated via API Automated via UI Smoke Sanity Request registration of a registered account using registered password username and company \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of a registered account using registered password and username \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of a registered account using registered password and company \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of a registered account using registered password \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of a registered account using unregistered password username and company \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of a registered account using unregistered password and username \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of a registered account using unregistered password and company \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of a registered account using unregistered password \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of an unregistered account with valid password and invalid email \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of an unregistered account with valid password and valid email \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of an unregistered account with invalid password and valid email \u2705 \ud83d\udc4d \ud83d\udc4d Request registration of an unregistered account with invalid password and invalid email \u2705 \ud83d\udc4d \ud83d\udc4d Check if email and password are required fields \u2705 \ud83d\udc4d \ud83d\udc4d Login with valid credentials \u2705 \u2705 \ud83d\udc4d \ud83d\udc4d Login with invalid credentials \u2705 \ud83d\udc4d \ud83d\udc4d Request password with registered email address \ud83d\udc4d \ud83d\udc4d Request password with unregistered email address \ud83d\udc4d","title":"INTEGRATION"},{"location":"development_guide.html#agents","text":"Agents Scenario Automated via API Automated via UI Smoke Sanity Check if total agent on agents' page is correct Create agent without tags \u2705 \ud83d\udc4d Create agent with one tag \u2705 \u2705 \ud83d\udc4d \ud83d\udc4d Create agent with multiple tags \u2705 \ud83d\udc4d Create agent with invalid name (regex) \ud83d\udc4d Create agent with duplicate name \ud83d\udc4d Test agent filters Check agent details \ud83d\udc4d Edit an agent through the details modal \ud83d\udc4d Edit agent name \u2705 \ud83d\udc4d \ud83d\udc4d Edit agent tag \u2705 \ud83d\udc4d \ud83d\udc4d Edit agent name and tag \u2705 \ud83d\udc4d Save agent without tag \u2705 \ud83d\udc4d Insert tags in agents created without tags \u2705 \ud83d\udc4d \ud83d\udc4d Check if is possible cancel operations with no change Remove agent using correct name \u2705 \ud83d\udc4d \ud83d\udc4d Remove agent using incorrect name \ud83d\udc4d Run two orb agents on the same port \u2705 \u2705 \ud83d\udc4d \ud83d\udc4d Run two orb agents on different ports \u2705 \u2705 \ud83d\udc4d \ud83d\udc4d","title":"AGENTS"},{"location":"development_guide.html#agent-group","text":"Agent Group Scenario Automated via API Automated via UI Smoke Sanity Check if total agent groups on agent groups' page is correct Create agent group with invalid name (regex) \ud83d\udc4d Create agent group with duplicate name \ud83d\udc4d Create agent group with description \u2705 \ud83d\udc4d \ud83d\udc4d Create agent group without description \u2705 \ud83d\udc4d Create agent group without tag \u2705 \ud83d\udc4d Create agent group with one tag \u2705 \ud83d\udc4d \ud83d\udc4d Create agent group with multiple tags \u2705 \ud83d\udc4d Test agent groups filters Visualize matching agents \u2705 \ud83d\udc4d Check agent groups details \ud83d\udc4d Edit an agent group through the details modal \ud83d\udc4d Check if is possible cancel operations with no change Edit agent group name \u2705 \ud83d\udc4d \ud83d\udc4d Edit agent group description \u2705 \ud83d\udc4d Edit agent group tag \u2705 \ud83d\udc4d \ud83d\udc4d Remove agent group using correct name \u2705 \ud83d\udc4d \ud83d\udc4d Remove agent group using incorrect name \ud83d\udc4d Edit Agent Group name removing name \u2705 \ud83d\udc4d \ud83d\udc4d Edit Agent Group description removing description \u2705 \ud83d\udc4d \ud83d\udc4d Edit Agent Group description \u2705 \ud83d\udc4d \ud83d\udc4d Edit Agent Group tags to unsubscribe agent \u2705 \ud83d\udc4d \ud83d\udc4d Edit Agent Group tags to unsubscribe agent \u2705 \ud83d\udc4d \ud83d\udc4d Edit Agent Group removing tags \u2705 \ud83d\udc4d \ud83d\udc4d Edit Agent Group name, description and tags \u2705 \ud83d\udc4d \ud83d\udc4d","title":"AGENT GROUP"},{"location":"development_guide.html#sink","text":"Sink Scenario Automated via API Automated via UI Smoke Sanity Check if total sinks on sinks' page is correct Create sink with invalid name (regex) \ud83d\udc4d Create sink with duplicate name \ud83d\udc4d Create sink with description \u2705 \ud83d\udc4d \ud83d\udc4d Create sink without description \ud83d\udc4d Create sink without tags \u2705 \ud83d\udc4d \ud83d\udc4d Create sink with tags Create sink with multiple tags Check if remote host, username and password are required to create a sink \ud83d\udc4d Test sink filters Check sink details \ud83d\udc4d Edit a sink through the details modal \ud83d\udc4d Edit sink name \ud83d\udc4d Edit sink description \ud83d\udc4d Edit sink remote host \ud83d\udc4d Edit sink username \ud83d\udc4d Edit sink password \ud83d\udc4d Edit sink tags \ud83d\udc4d Check if is possible cancel operations with no change Remove sink using correct name \u2705 \ud83d\udc4d \ud83d\udc4d Remove sink using incorrect name \ud83d\udc4d","title":"SINK"},{"location":"development_guide.html#policies","text":"Policies Scenario Automated via API Automated via UI Smoke Sanity Check if total policies on policies' page is correct Create policy with invalid name (regex) \ud83d\udc4d Create policy with no agent provisioned \ud83d\udc4d Create policy with duplicate name \ud83d\udc4d Create policy with description \u2705 \ud83d\udc4d \ud83d\udc4d Create policy without description \u2705 \ud83d\udc4d Create a policy with dns handler, description, host specification, bpf filter, pcap source, only qname suffix and only rcode \u2705 \ud83d\udc4d \ud83d\udc4d Create a policy with dns handler, host specification, bpf filter, pcap source, only qname suffix and only rcode \u2705 \ud83d\udc4d \ud83d\udc4d Create a policy with dns handler, bpf filter, pcap source, only qname suffix and only rcode \u2705 \ud83d\udc4d \ud83d\udc4d Create a policy with dns handler, pcap source, only qname suffix and only rcode \u2705 \ud83d\udc4d \ud83d\udc4d Create a policy with dns handler, only qname suffix \u2705 \ud83d\udc4d \ud83d\udc4d Create a policy with net handler, description, host specification, bpf filter and pcap source \u2705 \ud83d\udc4d \ud83d\udc4d Create a policy with dhcp handler, description, host specification, bpf filter and pcap source \u2705 \ud83d\udc4d \ud83d\udc4d Create policy with multiple handlers \ud83d\udc4d Test policy filters Check policies details \ud83d\udc4d Edit a policy through the details modal \ud83d\udc4d Edit policy name \u2705 \ud83d\udc4d \ud83d\udc4d Edit policy host_specification \u2705 \ud83d\udc4d \ud83d\udc4d Edit policy bpf_filter_expression \u2705 \ud83d\udc4d \ud83d\udc4d Edit policy pcap_source \u2705 \ud83d\udc4d \ud83d\udc4d Edit policy only_qname_suffix \u2705 \ud83d\udc4d \ud83d\udc4d Edit policy only_rcode \u2705 \ud83d\udc4d \ud83d\udc4d Edit policy description \u2705 \ud83d\udc4d Edit policy handler \u2705 \ud83d\udc4d \ud83d\udc4d Check if is possible cancel operations with no change Remove policy using correct name \u2705 \ud83d\udc4d \ud83d\udc4d Remove policy using incorrect name \ud83d\udc4d Create duplicated net policy without insert new name \u2705 \ud83d\udc4d \ud83d\udc4d Create duplicated dhcp policy without insert new name \u2705 \ud83d\udc4d \ud83d\udc4d Create duplicated dns policy without insert new name \u2705 \ud83d\udc4d \ud83d\udc4d Create 4 duplicated policy with new name \u2705 \ud83d\udc4d \ud83d\udc4d Create 3 duplicated dns policy without insert new name and 1 with new name \u2705 \ud83d\udc4d \ud83d\udc4d","title":"POLICIES"},{"location":"development_guide.html#datasets","text":"Datasets Scenario Automated via API Automated via UI Smoke Sanity Check if total datasets on datasets' page is correct Create dataset with invalid name (regex) \ud83d\udc4d Create dataset \u2705 \ud83d\udc4d \ud83d\udc4d Check datasets details \ud83d\udc4d Check if is possible cancel operations with no change Test datasets filter Edit a dataset through the details modal Edit dataset name \ud83d\udc4d Edit dataset sink \ud83d\udc4d Remove dataset using correct name \u2705 \ud83d\udc4d \ud83d\udc4d Remove dataset using incorrect name \ud83d\udc4d","title":"DATASETS"},{"location":"sanity.html","text":"Sanity tests Login Request registration of a registered account using registered password username and company Request registration of a registered account using registered password and username Request registration of a registered account using registered password and company Request registration of a registered account using registered password Request registration of a registered account using unregistered password username and company Request registration of a registered account using unregistered password and username Request registration of a registered account using unregistered password and company Request registration of a registered account using unregistered password Request registration of an unregistered account with valid password and invalid email Request registration of an unregistered account with valid password and valid email Request registration of an unregistered account with invalid password and valid email Request registration of an unregistered account with invalid password and invalid email Check if email and password are required fields Login with valid credentials Login with invalid credentials Request password with registered email address Request password with unregistered email address Agents Create agent without tags Create agent with one tag Create agent with multiple tags Create agent with invalid name (regex) Create agent with duplicate name Check agent details Edit an agent through the details modal Edit agent name Edit agent tag Save agent without tag Insert tags in agents created without tags Remove agent using correct name Remove agent using incorrect name Run two orb agents on the same port Run two orb agents on different ports Edit agent name and tag Agent Groups Create agent group with invalid name (regex) Create agent group with duplicate name Create agent group with description Create agent group without description Create agent group without tag Create agent group with one tag Create agent group with multiple tags Visualize matching agents Check agent groups details Edit an agent group through the details modal Edit agent group name Edit agent group description Edit agent group tag Remove agent group using correct name Remove agent group using incorrect name Run two orb agents on the same port Run two orb agents on different ports Edit Agent Group name removing name Edit agent group name Edit agent group description Edit Agent Group description removing description Edit Agent Group tags to subscribe agent Edit Agent Group tags to unsubscribe agent Edit Agent Group removing tags Edit Agent Group name, description and tags Sinks Create sink with invalid name (regex) Create sink with duplicate name Create sink with description Create sink without description Create sink without tags Check if remote host, username and password are required to create a sink Check sink details Edit a sink through the details modal Edit sink name Edit sink description Edit sink remote host Edit sink username Edit sink password Edit sink tags Remove sink using correct name Remove sink using incorrect name Policies Create policy with invalid name (regex) Create policy with no agent provisioned Create policy with duplicate name Create policy with description Create policy without description Create policy with dhcp handler Create policy with dns handler Create policy with net handler Create policy with multiple handlers Check policies details Edit a policy through the details modal Edit policy name Edit policy host_specification Edit policy bpf_filter_expression Edit policy pcap_source Edit policy only_qname_suffix Edit policy only_rcode Edit policy description Edit policy handler Remove policy using correct name Remove policy using incorrect name Create duplicated net policy without insert new name Create duplicated dhcp policy without insert new name Create duplicated dns policy without insert new name Create 4 duplicated policy with new name Create 3 duplicated dns policy without insert new name and 1 with new name Datasets Create dataset with invalid name (regex) Create dataset Check datasets details Edit dataset name Edit dataset sink Remove dataset using correct name Remove dataset using incorrect name Integration tests Check if sink is active while scraping metrics Check if sink with invalid credentials becomes active Provision agent before group (check if agent subscribes to the group) Provision agent after group (check if agent subscribes to the group) Provision agent with tag matching existing group linked to a valid dataset Apply multiple policies to a group Apply multiple policies to a group and remove one policy Apply multiple policies to a group and remove one dataset Apply the same policy twice to the agent Remove group (invalid dataset, agent logs) Remove sink (invalid dataset, agent logs) Remove policy (invalid dataset, agent logs, heartbeat) Remove dataset (check agent logs, heartbeat) Remove agent container (logs, agent groups matches) Remove agent container force (logs, agent groups matches) Remove agent (logs, agent groups matches) Subscribe an agent to multiple groups created before agent provisioning Subscribe an agent to multiple groups created after agent provisioning Agent subscription to group after editing orb agent's tags Agent subscription to group with policies after editing orb agent's tags Edit agent name and apply policies to then Insert tags in agents created without tags and apply policies to group matching new tags.md Agent unsubscription to group with policies after editing agent group's tags (editing tags after agent provision) Agent subscription to group with policies after editing agent group's tags (editing tags after agent provision) Agent unsubscription to group with policies after editing agent group's tags (editing tags before agent provision) Agent subscription to group with policies after editing agent group's tags (editing tags before agent provision) Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision) Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision) Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision) Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision) Remotely reset an agent with policies Remotely reset an agent without policies","title":"Sanity list"},{"location":"sanity.html#sanity-tests","text":"","title":"Sanity tests"},{"location":"sanity.html#login","text":"Request registration of a registered account using registered password username and company Request registration of a registered account using registered password and username Request registration of a registered account using registered password and company Request registration of a registered account using registered password Request registration of a registered account using unregistered password username and company Request registration of a registered account using unregistered password and username Request registration of a registered account using unregistered password and company Request registration of a registered account using unregistered password Request registration of an unregistered account with valid password and invalid email Request registration of an unregistered account with valid password and valid email Request registration of an unregistered account with invalid password and valid email Request registration of an unregistered account with invalid password and invalid email Check if email and password are required fields Login with valid credentials Login with invalid credentials Request password with registered email address Request password with unregistered email address","title":"Login"},{"location":"sanity.html#agents","text":"Create agent without tags Create agent with one tag Create agent with multiple tags Create agent with invalid name (regex) Create agent with duplicate name Check agent details Edit an agent through the details modal Edit agent name Edit agent tag Save agent without tag Insert tags in agents created without tags Remove agent using correct name Remove agent using incorrect name Run two orb agents on the same port Run two orb agents on different ports Edit agent name and tag","title":"Agents"},{"location":"sanity.html#agent-groups","text":"Create agent group with invalid name (regex) Create agent group with duplicate name Create agent group with description Create agent group without description Create agent group without tag Create agent group with one tag Create agent group with multiple tags Visualize matching agents Check agent groups details Edit an agent group through the details modal Edit agent group name Edit agent group description Edit agent group tag Remove agent group using correct name Remove agent group using incorrect name Run two orb agents on the same port Run two orb agents on different ports Edit Agent Group name removing name Edit agent group name Edit agent group description Edit Agent Group description removing description Edit Agent Group tags to subscribe agent Edit Agent Group tags to unsubscribe agent Edit Agent Group removing tags Edit Agent Group name, description and tags","title":"Agent Groups"},{"location":"sanity.html#sinks","text":"Create sink with invalid name (regex) Create sink with duplicate name Create sink with description Create sink without description Create sink without tags Check if remote host, username and password are required to create a sink Check sink details Edit a sink through the details modal Edit sink name Edit sink description Edit sink remote host Edit sink username Edit sink password Edit sink tags Remove sink using correct name Remove sink using incorrect name","title":"Sinks"},{"location":"sanity.html#policies","text":"Create policy with invalid name (regex) Create policy with no agent provisioned Create policy with duplicate name Create policy with description Create policy without description Create policy with dhcp handler Create policy with dns handler Create policy with net handler Create policy with multiple handlers Check policies details Edit a policy through the details modal Edit policy name Edit policy host_specification Edit policy bpf_filter_expression Edit policy pcap_source Edit policy only_qname_suffix Edit policy only_rcode Edit policy description Edit policy handler Remove policy using correct name Remove policy using incorrect name Create duplicated net policy without insert new name Create duplicated dhcp policy without insert new name Create duplicated dns policy without insert new name Create 4 duplicated policy with new name Create 3 duplicated dns policy without insert new name and 1 with new name","title":"Policies"},{"location":"sanity.html#datasets","text":"Create dataset with invalid name (regex) Create dataset Check datasets details Edit dataset name Edit dataset sink Remove dataset using correct name Remove dataset using incorrect name","title":"Datasets"},{"location":"sanity.html#integration-tests","text":"Check if sink is active while scraping metrics Check if sink with invalid credentials becomes active Provision agent before group (check if agent subscribes to the group) Provision agent after group (check if agent subscribes to the group) Provision agent with tag matching existing group linked to a valid dataset Apply multiple policies to a group Apply multiple policies to a group and remove one policy Apply multiple policies to a group and remove one dataset Apply the same policy twice to the agent Remove group (invalid dataset, agent logs) Remove sink (invalid dataset, agent logs) Remove policy (invalid dataset, agent logs, heartbeat) Remove dataset (check agent logs, heartbeat) Remove agent container (logs, agent groups matches) Remove agent container force (logs, agent groups matches) Remove agent (logs, agent groups matches) Subscribe an agent to multiple groups created before agent provisioning Subscribe an agent to multiple groups created after agent provisioning Agent subscription to group after editing orb agent's tags Agent subscription to group with policies after editing orb agent's tags Edit agent name and apply policies to then Insert tags in agents created without tags and apply policies to group matching new tags.md Agent unsubscription to group with policies after editing agent group's tags (editing tags after agent provision) Agent subscription to group with policies after editing agent group's tags (editing tags after agent provision) Agent unsubscription to group with policies after editing agent group's tags (editing tags before agent provision) Agent subscription to group with policies after editing agent group's tags (editing tags before agent provision) Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision) Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision) Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision) Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision) Remotely reset an agent with policies Remotely reset an agent without policies","title":"Integration tests"},{"location":"smoke.html","text":"Smoke tests Login Request registration of a registered account using registered password username and company Request registration of a registered account using registered password and username Request registration of a registered account using registered password and company Request registration of a registered account using registered password Request registration of a registered account using unregistered password username and company Request registration of a registered account using unregistered password and username Request registration of a registered account using unregistered password and company Request registration of a registered account using unregistered password Request registration of an unregistered account with valid password and invalid email Request registration of an unregistered account with valid password and valid email Request registration of an unregistered account with invalid password and valid email Request registration of an unregistered account with invalid password and invalid email Check if email and password are required fields Login with valid credentials Login with invalid credentials Request password with registered email address Agents Create agent with one tag Edit agent name Edit agent tag Save agent without tag Insert tags in agents created without tags Remove agent using correct name Run two orb agents on the same port Run two orb agents on different ports Agent Groups Create agent group with description Create agent group with one tag Edit agent group name Edit agent group tag Remove agent group using correct name Run two orb agents on the same port Run two orb agents on different ports Edit Agent Group name removing name Edit agent group name Edit agent group description Edit Agent Group description removing description Edit Agent Group tags to subscribe agent Edit Agent Group tags to unsubscribe agent Edit Agent Group removing tags Edit Agent Group name, description and tags Sinks Create sink with description Create sink without tags Remove sink using correct name Policies Create policy with description Create policy with dhcp handler Create policy with dns handler Create policy with net handler Edit policy handler Remove policy using correct name Create duplicated net policy without insert new name Create duplicated dhcp policy without insert new name Create duplicated dns policy without insert new name Create 4 duplicated policy with new name Create 3 duplicated dns policy without insert new name and 1 with new name Datasets Create dataset Remove dataset using correct name Integration tests Check if sink is active while scraping metrics Check if sink with invalid credentials becomes active Provision agent before group (check if agent subscribes to the group) Provision agent after group (check if agent subscribes to the group) Provision agent with tag matching existing group linked to a valid dataset Apply multiple policies to a group Apply multiple policies to a group and remove one policy Apply multiple policies to a group and remove one dataset Apply the same policy twice to the agent Remove group (invalid dataset, agent logs) Remove sink (invalid dataset, agent logs) Remove policy (invalid dataset, agent logs, heartbeat) Remove dataset (check agent logs, heartbeat) Remove agent container (logs, agent groups matches) Remove agent container force (logs, agent groups matches) Remove agent (logs, agent groups matches) Subscribe an agent to multiple groups created before agent provisioning Subscribe an agent to multiple groups created after agent provisioning Agent subscription to group after editing orb agent's tags Agent subscription to group with policies after editing orb agent's tags Edit agent name and apply policies to then Insert tags in agents created without tags and apply policies to group matching new tags.md Agent unsubscription to group with policies after editing agent group's tags (editing tags after agent provision) Agent subscription to group with policies after editing agent group's tags (editing tags after agent provision) Agent unsubscription to group with policies after editing agent group's tags (editing tags before agent provision) Agent subscription to group with policies after editing agent group's tags (editing tags before agent provision) Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision) Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision) Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision) Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision) Remotely reset an agent with policies Remotely reset an agent without policies","title":"Smoke list"},{"location":"smoke.html#smoke-tests","text":"","title":"Smoke tests"},{"location":"smoke.html#login","text":"Request registration of a registered account using registered password username and company Request registration of a registered account using registered password and username Request registration of a registered account using registered password and company Request registration of a registered account using registered password Request registration of a registered account using unregistered password username and company Request registration of a registered account using unregistered password and username Request registration of a registered account using unregistered password and company Request registration of a registered account using unregistered password Request registration of an unregistered account with valid password and invalid email Request registration of an unregistered account with valid password and valid email Request registration of an unregistered account with invalid password and valid email Request registration of an unregistered account with invalid password and invalid email Check if email and password are required fields Login with valid credentials Login with invalid credentials Request password with registered email address","title":"Login"},{"location":"smoke.html#agents","text":"Create agent with one tag Edit agent name Edit agent tag Save agent without tag Insert tags in agents created without tags Remove agent using correct name Run two orb agents on the same port Run two orb agents on different ports","title":"Agents"},{"location":"smoke.html#agent-groups","text":"Create agent group with description Create agent group with one tag Edit agent group name Edit agent group tag Remove agent group using correct name Run two orb agents on the same port Run two orb agents on different ports Edit Agent Group name removing name Edit agent group name Edit agent group description Edit Agent Group description removing description Edit Agent Group tags to subscribe agent Edit Agent Group tags to unsubscribe agent Edit Agent Group removing tags Edit Agent Group name, description and tags","title":"Agent Groups"},{"location":"smoke.html#sinks","text":"Create sink with description Create sink without tags Remove sink using correct name","title":"Sinks"},{"location":"smoke.html#policies","text":"Create policy with description Create policy with dhcp handler Create policy with dns handler Create policy with net handler Edit policy handler Remove policy using correct name Create duplicated net policy without insert new name Create duplicated dhcp policy without insert new name Create duplicated dns policy without insert new name Create 4 duplicated policy with new name Create 3 duplicated dns policy without insert new name and 1 with new name","title":"Policies"},{"location":"smoke.html#datasets","text":"Create dataset Remove dataset using correct name","title":"Datasets"},{"location":"smoke.html#integration-tests","text":"Check if sink is active while scraping metrics Check if sink with invalid credentials becomes active Provision agent before group (check if agent subscribes to the group) Provision agent after group (check if agent subscribes to the group) Provision agent with tag matching existing group linked to a valid dataset Apply multiple policies to a group Apply multiple policies to a group and remove one policy Apply multiple policies to a group and remove one dataset Apply the same policy twice to the agent Remove group (invalid dataset, agent logs) Remove sink (invalid dataset, agent logs) Remove policy (invalid dataset, agent logs, heartbeat) Remove dataset (check agent logs, heartbeat) Remove agent container (logs, agent groups matches) Remove agent container force (logs, agent groups matches) Remove agent (logs, agent groups matches) Subscribe an agent to multiple groups created before agent provisioning Subscribe an agent to multiple groups created after agent provisioning Agent subscription to group after editing orb agent's tags Agent subscription to group with policies after editing orb agent's tags Edit agent name and apply policies to then Insert tags in agents created without tags and apply policies to group matching new tags.md Agent unsubscription to group with policies after editing agent group's tags (editing tags after agent provision) Agent subscription to group with policies after editing agent group's tags (editing tags after agent provision) Agent unsubscription to group with policies after editing agent group's tags (editing tags before agent provision) Agent subscription to group with policies after editing agent group's tags (editing tags before agent provision) Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision) Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision) Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision) Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision) Remotely reset an agent with policies Remotely reset an agent without policies","title":"Integration tests"},{"location":"agent_groups/check_agent_groups_details.html","text":"Scenario: Check agent groups details Steps: 1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2 - Get an agent group REST API Method: GET endpoint: /agent_groups/agent_group_id Expected Result: Status code must be 200 and the group name, description, matches against and tags must be returned on response","title":"Check agent groups details"},{"location":"agent_groups/check_agent_groups_details.html#scenario-check-agent-groups-details","text":"","title":"Scenario: Check agent groups details"},{"location":"agent_groups/check_agent_groups_details.html#steps","text":"1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2 - Get an agent group REST API Method: GET endpoint: /agent_groups/agent_group_id","title":"Steps:"},{"location":"agent_groups/check_agent_groups_details.html#expected-result","text":"Status code must be 200 and the group name, description, matches against and tags must be returned on response","title":"Expected Result:"},{"location":"agent_groups/check_if_is_possible_cancel_operations_with_no_change.html","text":"Scenario: Check if is possible cancel operations with no change Steps: 1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2 - On agent groups' page ( orb.live/pages/fleet/groups ) click on edit button 3 - Change groups' name and click \"next\" 4 - Change groups' description and click \"next\" 4 - Change groups' tag and click \"next\" 5 - Click \"back\" until return to agent groups' page Expected Result: No changes must have been applied to the agent group","title":"Check if is possible cancel operations with no change"},{"location":"agent_groups/check_if_is_possible_cancel_operations_with_no_change.html#scenario-check-if-is-possible-cancel-operations-with-no-change","text":"","title":"Scenario: Check if is possible cancel operations with no change"},{"location":"agent_groups/check_if_is_possible_cancel_operations_with_no_change.html#steps","text":"1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2 - On agent groups' page ( orb.live/pages/fleet/groups ) click on edit button 3 - Change groups' name and click \"next\" 4 - Change groups' description and click \"next\" 4 - Change groups' tag and click \"next\" 5 - Click \"back\" until return to agent groups' page","title":"Steps:"},{"location":"agent_groups/check_if_is_possible_cancel_operations_with_no_change.html#expected-result","text":"No changes must have been applied to the agent group","title":"Expected Result:"},{"location":"agent_groups/check_if_total_agent_groups_on_agent_groups%27_page_is_correct.html","text":"Scenario: Check if total agent groups on agent groups' page is correct Steps: 1 - Create multiple agent groups REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2 - Get all existing agent groups REST API Method: GET endpoint: /agent_groups 3 - On agent groups' page ( orb.live/pages/fleet/groups ) check the total number of agent groups at the end of the agent groups table 4 - Count the number of existing agent groups Expected Result: Total agent groups on API response, agent groups page and the real number must be the same","title":"Check if total agent groups on agent groups' page is correct"},{"location":"agent_groups/check_if_total_agent_groups_on_agent_groups%27_page_is_correct.html#scenario-check-if-total-agent-groups-on-agent-groups-page-is-correct","text":"","title":"Scenario: Check if total agent groups on agent groups' page is correct"},{"location":"agent_groups/check_if_total_agent_groups_on_agent_groups%27_page_is_correct.html#steps","text":"1 - Create multiple agent groups REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2 - Get all existing agent groups REST API Method: GET endpoint: /agent_groups 3 - On agent groups' page ( orb.live/pages/fleet/groups ) check the total number of agent groups at the end of the agent groups table 4 - Count the number of existing agent groups","title":"Steps:"},{"location":"agent_groups/check_if_total_agent_groups_on_agent_groups%27_page_is_correct.html#expected-result","text":"Total agent groups on API response, agent groups page and the real number must be the same","title":"Expected Result:"},{"location":"agent_groups/create_agent_group_with_description.html","text":"Scenario: Create agent group with description Steps: 1 - Create an agent groups with description REST API Method: POST endpoint: /agent_groups header: {authorization:token} Expected Result: Request must have status code 201 (created) and the agent group must be created","title":"Create agent group with description"},{"location":"agent_groups/create_agent_group_with_description.html#scenario-create-agent-group-with-description","text":"","title":"Scenario: Create agent group with description"},{"location":"agent_groups/create_agent_group_with_description.html#steps","text":"1 - Create an agent groups with description REST API Method: POST endpoint: /agent_groups header: {authorization:token}","title":"Steps:"},{"location":"agent_groups/create_agent_group_with_description.html#expected-result","text":"Request must have status code 201 (created) and the agent group must be created","title":"Expected Result:"},{"location":"agent_groups/create_agent_group_with_duplicate_name.html","text":"Scenario: Create agent group with duplicate name Steps: 1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2 - Create another agent group using the same agent group name Expected Result: First request must have status code 201 (created) and one group must be created on orb Second request must fail with status code 409 (conflict) and no other group must be created (make sure that first group has not been modified)","title":"Create agent group with duplicate name"},{"location":"agent_groups/create_agent_group_with_duplicate_name.html#scenario-create-agent-group-with-duplicate-name","text":"","title":"Scenario: Create agent group with duplicate name"},{"location":"agent_groups/create_agent_group_with_duplicate_name.html#steps","text":"1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2 - Create another agent group using the same agent group name","title":"Steps:"},{"location":"agent_groups/create_agent_group_with_duplicate_name.html#expected-result","text":"First request must have status code 201 (created) and one group must be created on orb Second request must fail with status code 409 (conflict) and no other group must be created (make sure that first group has not been modified)","title":"Expected Result:"},{"location":"agent_groups/create_agent_group_with_invalid_name_%28regex%29.html","text":"Scenario: Create agent group with invalid name (regex) Steps: 1 - Create an agent group using an invalid regex to agent group name REST API Method: POST endpoint: /agent_groups header: {authorization:token} example of invalid regex: name starting with non-alphabetic characters name with just 1 letter space-separated composite name Expected Result: Request must fail with status code 400 (bad request) and no group must be created","title":"Create agent group with invalid name (regex)"},{"location":"agent_groups/create_agent_group_with_invalid_name_%28regex%29.html#scenario-create-agent-group-with-invalid-name-regex","text":"","title":"Scenario: Create agent group with invalid name (regex)"},{"location":"agent_groups/create_agent_group_with_invalid_name_%28regex%29.html#steps","text":"1 - Create an agent group using an invalid regex to agent group name REST API Method: POST endpoint: /agent_groups header: {authorization:token} example of invalid regex: name starting with non-alphabetic characters name with just 1 letter space-separated composite name","title":"Steps:"},{"location":"agent_groups/create_agent_group_with_invalid_name_%28regex%29.html#expected-result","text":"Request must fail with status code 400 (bad request) and no group must be created","title":"Expected Result:"},{"location":"agent_groups/create_agent_group_with_multiple_tags.html","text":"Scenario: Create agent group with multiple tags Steps: 1 - Create an agent group with more than one pair (key:value) of tags REST API Method: POST endpoint: /agent_groups header: {authorization:token} Expected Result: Request must have status code 201 (created) and the agent group must be created Groups with multiple tags will only match with agents with the same multiple tags","title":"Create agent group with multiple tags"},{"location":"agent_groups/create_agent_group_with_multiple_tags.html#scenario-create-agent-group-with-multiple-tags","text":"","title":"Scenario: Create agent group with multiple tags"},{"location":"agent_groups/create_agent_group_with_multiple_tags.html#steps","text":"1 - Create an agent group with more than one pair (key:value) of tags REST API Method: POST endpoint: /agent_groups header: {authorization:token}","title":"Steps:"},{"location":"agent_groups/create_agent_group_with_multiple_tags.html#expected-result","text":"Request must have status code 201 (created) and the agent group must be created Groups with multiple tags will only match with agents with the same multiple tags","title":"Expected Result:"},{"location":"agent_groups/create_agent_group_with_one_tag.html","text":"Scenario: Create agent group with one tag Steps: 1 - Create an agent groups with one pair (key:value) of tags REST API Method: POST endpoint: /agent_groups header: {authorization:token} Expected Result: Request must have status code 201 (created) and the agent group must be created","title":"Create agent group with one tag"},{"location":"agent_groups/create_agent_group_with_one_tag.html#scenario-create-agent-group-with-one-tag","text":"","title":"Scenario: Create agent group with one tag"},{"location":"agent_groups/create_agent_group_with_one_tag.html#steps","text":"1 - Create an agent groups with one pair (key:value) of tags REST API Method: POST endpoint: /agent_groups header: {authorization:token}","title":"Steps:"},{"location":"agent_groups/create_agent_group_with_one_tag.html#expected-result","text":"Request must have status code 201 (created) and the agent group must be created","title":"Expected Result:"},{"location":"agent_groups/create_agent_group_without_description.html","text":"Scenario: Create agent group without description Steps: 1 - Create an agent groups with no description REST API Method: POST endpoint: /agent_groups header: {authorization:token} Expected Result: Request must have status code 201 (created) and the agent group must be created","title":"Create agent group without description"},{"location":"agent_groups/create_agent_group_without_description.html#scenario-create-agent-group-without-description","text":"","title":"Scenario: Create agent group without description"},{"location":"agent_groups/create_agent_group_without_description.html#steps","text":"1 - Create an agent groups with no description REST API Method: POST endpoint: /agent_groups header: {authorization:token}","title":"Steps:"},{"location":"agent_groups/create_agent_group_without_description.html#expected-result","text":"Request must have status code 201 (created) and the agent group must be created","title":"Expected Result:"},{"location":"agent_groups/create_agent_group_without_tag.html","text":"Scenario: Create agent group without tag Steps: 1 - Create an agent with no pair (key:value) of tags REST API Method: POST endpoint: /agent_groups header: {authorization:token} Expected Result: Request must fail with status code 400 (bad request) and the agent group must not be created","title":"Create agent group without tag"},{"location":"agent_groups/create_agent_group_without_tag.html#scenario-create-agent-group-without-tag","text":"","title":"Scenario: Create agent group without tag"},{"location":"agent_groups/create_agent_group_without_tag.html#steps","text":"1 - Create an agent with no pair (key:value) of tags REST API Method: POST endpoint: /agent_groups header: {authorization:token}","title":"Steps:"},{"location":"agent_groups/create_agent_group_without_tag.html#expected-result","text":"Request must fail with status code 400 (bad request) and the agent group must not be created","title":"Expected Result:"},{"location":"agent_groups/edit_agent_group_description.html","text":"Scenario: Edit agent group description Steps: 1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2- Edit this group description REST API Method: PUT endpoint: /agent_groups/group_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit agent group description"},{"location":"agent_groups/edit_agent_group_description.html#scenario-edit-agent-group-description","text":"","title":"Scenario: Edit agent group description"},{"location":"agent_groups/edit_agent_group_description.html#steps","text":"1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2- Edit this group description REST API Method: PUT endpoint: /agent_groups/group_id header: {authorization:token}","title":"Steps:"},{"location":"agent_groups/edit_agent_group_description.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"agent_groups/edit_agent_group_description_removing_description.html","text":"Scenario: Edit Agent Group description removing description Steps: 1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2- Edit this group description using None REST API Method: PUT endpoint: /agent_groups/group_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit Agent Group description removing description"},{"location":"agent_groups/edit_agent_group_description_removing_description.html#scenario-edit-agent-group-description-removing-description","text":"","title":"Scenario: Edit Agent Group description removing description"},{"location":"agent_groups/edit_agent_group_description_removing_description.html#steps","text":"1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2- Edit this group description using None REST API Method: PUT endpoint: /agent_groups/group_id header: {authorization:token}","title":"Steps:"},{"location":"agent_groups/edit_agent_group_description_removing_description.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"agent_groups/edit_agent_group_name%2C_description_and_tags.html","text":"Scenario: Edit Agent Group name, description and tags Steps: 1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2- Edit this group name, description and tags REST API Method: PUT endpoint: /agent_groups/group_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit Agent Group name, description and tags"},{"location":"agent_groups/edit_agent_group_name%2C_description_and_tags.html#scenario-edit-agent-group-name-description-and-tags","text":"","title":"Scenario: Edit Agent Group name, description and tags"},{"location":"agent_groups/edit_agent_group_name%2C_description_and_tags.html#steps","text":"1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2- Edit this group name, description and tags REST API Method: PUT endpoint: /agent_groups/group_id header: {authorization:token}","title":"Steps:"},{"location":"agent_groups/edit_agent_group_name%2C_description_and_tags.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"agent_groups/edit_agent_group_name.html","text":"Scenario: Edit agent group name Steps: 1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2- Edit this group name REST API Method: PUT endpoint: /agent_groups/group_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit agent group name"},{"location":"agent_groups/edit_agent_group_name.html#scenario-edit-agent-group-name","text":"","title":"Scenario: Edit agent group name"},{"location":"agent_groups/edit_agent_group_name.html#steps","text":"1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2- Edit this group name REST API Method: PUT endpoint: /agent_groups/group_id header: {authorization:token}","title":"Steps:"},{"location":"agent_groups/edit_agent_group_name.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"agent_groups/edit_agent_group_name_removing_name.html","text":"Scenario: Edit Agent Group name removing name Steps: 1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2- Edit this group name using None REST API Method: PUT endpoint: /agent_groups/group_id header: {authorization:token} Expected Result: Request must have status code 400 (error) and changes must not be applied","title":"Edit Agent Group name removing name"},{"location":"agent_groups/edit_agent_group_name_removing_name.html#scenario-edit-agent-group-name-removing-name","text":"","title":"Scenario: Edit Agent Group name removing name"},{"location":"agent_groups/edit_agent_group_name_removing_name.html#steps","text":"1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2- Edit this group name using None REST API Method: PUT endpoint: /agent_groups/group_id header: {authorization:token}","title":"Steps:"},{"location":"agent_groups/edit_agent_group_name_removing_name.html#expected-result","text":"Request must have status code 400 (error) and changes must not be applied","title":"Expected Result:"},{"location":"agent_groups/edit_agent_group_removing_tags.html","text":"Scenario: Edit Agent Group removing tags Steps: 1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2- Edit this group tags using None REST API Method: PUT endpoint: /agent_groups/group_id header: {authorization:token} Expected Result: Request must have status code 400 (error) and changes must not be applied","title":"Edit Agent Group removing tags"},{"location":"agent_groups/edit_agent_group_removing_tags.html#scenario-edit-agent-group-removing-tags","text":"","title":"Scenario: Edit Agent Group removing tags"},{"location":"agent_groups/edit_agent_group_removing_tags.html#steps","text":"1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2- Edit this group tags using None REST API Method: PUT endpoint: /agent_groups/group_id header: {authorization:token}","title":"Steps:"},{"location":"agent_groups/edit_agent_group_removing_tags.html#expected-result","text":"Request must have status code 400 (error) and changes must not be applied","title":"Expected Result:"},{"location":"agent_groups/edit_agent_group_tag.html","text":"Scenario: Edit agent group tag Steps: 1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2- Edit this group tag REST API Method: PUT endpoint: /agent_groups/group_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit agent group tag"},{"location":"agent_groups/edit_agent_group_tag.html#scenario-edit-agent-group-tag","text":"","title":"Scenario: Edit agent group tag"},{"location":"agent_groups/edit_agent_group_tag.html#steps","text":"1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2- Edit this group tag REST API Method: PUT endpoint: /agent_groups/group_id header: {authorization:token}","title":"Steps:"},{"location":"agent_groups/edit_agent_group_tag.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"agent_groups/edit_agent_group_tags_to_subscribe_agent.html","text":"Scenario: Edit Agent Group tags to subscribe agent Steps: Provision an agent with tags Create a group with different tags Edit groups' tags changing the value to match with agent Expected result: Agent heartbeat must show just one group matching Agent logs must show that agent is subscribed to the group","title":"Edit Agent Group tags to subscribe agent"},{"location":"agent_groups/edit_agent_group_tags_to_subscribe_agent.html#scenario-edit-agent-group-tags-to-subscribe-agent","text":"","title":"Scenario: Edit Agent Group tags to subscribe agent"},{"location":"agent_groups/edit_agent_group_tags_to_subscribe_agent.html#steps","text":"Provision an agent with tags Create a group with different tags Edit groups' tags changing the value to match with agent","title":"Steps:"},{"location":"agent_groups/edit_agent_group_tags_to_subscribe_agent.html#expected-result","text":"Agent heartbeat must show just one group matching Agent logs must show that agent is subscribed to the group","title":"Expected result:"},{"location":"agent_groups/edit_agent_group_tags_to_unsubscribe_agent.html","text":"Scenario: Edit Agent Group tags to unsubscribe agent Steps: Provision an agent with tags Create a group with same tags Edit groups' tags changing the value Expected result: Agent heartbeat must show 0 group matching Agent logs must show that agent is unsubscribed to the group","title":"Edit Agent Group tags to unsubscribe agent"},{"location":"agent_groups/edit_agent_group_tags_to_unsubscribe_agent.html#scenario-edit-agent-group-tags-to-unsubscribe-agent","text":"","title":"Scenario: Edit Agent Group tags to unsubscribe agent"},{"location":"agent_groups/edit_agent_group_tags_to_unsubscribe_agent.html#steps","text":"Provision an agent with tags Create a group with same tags Edit groups' tags changing the value","title":"Steps:"},{"location":"agent_groups/edit_agent_group_tags_to_unsubscribe_agent.html#expected-result","text":"Agent heartbeat must show 0 group matching Agent logs must show that agent is unsubscribed to the group","title":"Expected result:"},{"location":"agent_groups/edit_an_agent_group_through_the_details_modal.html","text":"Scenario: Edit an agent group through the details modal Steps: 1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2 - On agent groups' page ( orb.live/pages/fleet/groups ) click on details button 3 - Click on \"edit\" button Expected Result: User should be redirected to this agent group's edit page and should be able to make changes","title":"Edit an agent group through the details modal"},{"location":"agent_groups/edit_an_agent_group_through_the_details_modal.html#scenario-edit-an-agent-group-through-the-details-modal","text":"","title":"Scenario: Edit an agent group through the details modal"},{"location":"agent_groups/edit_an_agent_group_through_the_details_modal.html#steps","text":"1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2 - On agent groups' page ( orb.live/pages/fleet/groups ) click on details button 3 - Click on \"edit\" button","title":"Steps:"},{"location":"agent_groups/edit_an_agent_group_through_the_details_modal.html#expected-result","text":"User should be redirected to this agent group's edit page and should be able to make changes","title":"Expected Result:"},{"location":"agent_groups/remove_agent_group_using_correct_name.html","text":"Scenario: Remove agent group using correct name Steps: 1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2 - On agent groups' page ( orb.live/pages/fleet/groups ) click on remove button 3 - Insert the name of the group correctly on delete modal 4 - Confirm the operation by clicking on \"I UNDERSTAND, DELETE THIS AGENT GROUP\" button Expected Result: Agent group must be deleted","title":"Remove agent group using correct name"},{"location":"agent_groups/remove_agent_group_using_correct_name.html#scenario-remove-agent-group-using-correct-name","text":"","title":"Scenario: Remove agent group using correct name"},{"location":"agent_groups/remove_agent_group_using_correct_name.html#steps","text":"1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2 - On agent groups' page ( orb.live/pages/fleet/groups ) click on remove button 3 - Insert the name of the group correctly on delete modal 4 - Confirm the operation by clicking on \"I UNDERSTAND, DELETE THIS AGENT GROUP\" button","title":"Steps:"},{"location":"agent_groups/remove_agent_group_using_correct_name.html#expected-result","text":"Agent group must be deleted","title":"Expected Result:"},{"location":"agent_groups/remove_agent_group_using_incorrect_name.html","text":"Scenario: Remove agent group using incorrect name Steps: 1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2 - On agent groups' page ( orb.live/pages/fleet/groups ) click on remove button 3 - Insert the name of the group incorrectly on delete modal Expected Result: \"I UNDERSTAND, DELETE THIS AGENT GROUP\" button must not be enabled After user close the deletion modal, agent group must not be deleted","title":"Remove agent group using incorrect name"},{"location":"agent_groups/remove_agent_group_using_incorrect_name.html#scenario-remove-agent-group-using-incorrect-name","text":"","title":"Scenario: Remove agent group using incorrect name"},{"location":"agent_groups/remove_agent_group_using_incorrect_name.html#steps","text":"1 - Create an agent group REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2 - On agent groups' page ( orb.live/pages/fleet/groups ) click on remove button 3 - Insert the name of the group incorrectly on delete modal","title":"Steps:"},{"location":"agent_groups/remove_agent_group_using_incorrect_name.html#expected-result","text":"\"I UNDERSTAND, DELETE THIS AGENT GROUP\" button must not be enabled After user close the deletion modal, agent group must not be deleted","title":"Expected Result:"},{"location":"agent_groups/test_agent_groups_filters.html","text":"Scenario: Test agent groups filters Steps: 1 - Create multiple agent groups REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2 - On agent groups' page ( orb.live/pages/fleet/groups ) use the filter: Name Description Agents Tags Search by Expected Result: All filters must be working properly","title":"Test agent groups filters"},{"location":"agent_groups/test_agent_groups_filters.html#scenario-test-agent-groups-filters","text":"","title":"Scenario: Test agent groups filters"},{"location":"agent_groups/test_agent_groups_filters.html#steps","text":"1 - Create multiple agent groups REST API Method: POST endpoint: /agent_groups header: {authorization:token} 2 - On agent groups' page ( orb.live/pages/fleet/groups ) use the filter: Name Description Agents Tags Search by","title":"Steps:"},{"location":"agent_groups/test_agent_groups_filters.html#expected-result","text":"All filters must be working properly","title":"Expected Result:"},{"location":"agent_groups/visualize_matching_agents.html","text":"Scenario: Visualize matching agents Steps: 1 - On agent groups' page ( orb.live/pages/fleet/groups ) click on the number with link o \"agents\" column Expected Result: Matching Agents modal must be displayed If 0 agents matches: No data to display and 0 total If one or more agents matches: all matching agents and total number of matches ust be displayed","title":"Visualize matching agents"},{"location":"agent_groups/visualize_matching_agents.html#scenario-visualize-matching-agents","text":"","title":"Scenario: Visualize matching agents"},{"location":"agent_groups/visualize_matching_agents.html#steps","text":"1 - On agent groups' page ( orb.live/pages/fleet/groups ) click on the number with link o \"agents\" column","title":"Steps:"},{"location":"agent_groups/visualize_matching_agents.html#expected-result","text":"Matching Agents modal must be displayed If 0 agents matches: No data to display and 0 total If one or more agents matches: all matching agents and total number of matches ust be displayed","title":"Expected Result:"},{"location":"agents/check_agent_details.html","text":"Scenario: Check agent details Steps: 1 - Create an agent REST API Method: POST endpoint: /agents header: {authorization:token} 2 - Get an agent REST API Method: GET endpoint: /agents/agent_id Expected Result: Status code must be 200 and an agent name, channel id, ts_created, status and tags must be returned on response If an agent container was never provisioned, status must be new If an agent container is running, status must be online If an agent container is stopped/removed, status must be offline","title":"Check agent details"},{"location":"agents/check_agent_details.html#scenario-check-agent-details","text":"","title":"Scenario: Check agent details"},{"location":"agents/check_agent_details.html#steps","text":"1 - Create an agent REST API Method: POST endpoint: /agents header: {authorization:token} 2 - Get an agent REST API Method: GET endpoint: /agents/agent_id","title":"Steps:"},{"location":"agents/check_agent_details.html#expected-result","text":"Status code must be 200 and an agent name, channel id, ts_created, status and tags must be returned on response If an agent container was never provisioned, status must be new If an agent container is running, status must be online If an agent container is stopped/removed, status must be offline","title":"Expected Result:"},{"location":"agents/check_if_is_possible_cancel_operations_with_no_change.html","text":"Scenario: Check if is possible cancel operations with no change Steps: 1 - Create an agent REST API Method: POST endpoint: /agents header: {authorization:token} 2 - On agents' page ( orb.live/pages/fleet/agents ) click on edit button 3 - Change agents' name and click \"next\" 4 - Change agent's tag and click \"next\" 5 - Click \"back\" until return to agents' page Expected Result: No changes must have been applied to the agent","title":"Check if is possible cancel operations with no change"},{"location":"agents/check_if_is_possible_cancel_operations_with_no_change.html#scenario-check-if-is-possible-cancel-operations-with-no-change","text":"","title":"Scenario: Check if is possible cancel operations with no change"},{"location":"agents/check_if_is_possible_cancel_operations_with_no_change.html#steps","text":"1 - Create an agent REST API Method: POST endpoint: /agents header: {authorization:token} 2 - On agents' page ( orb.live/pages/fleet/agents ) click on edit button 3 - Change agents' name and click \"next\" 4 - Change agent's tag and click \"next\" 5 - Click \"back\" until return to agents' page","title":"Steps:"},{"location":"agents/check_if_is_possible_cancel_operations_with_no_change.html#expected-result","text":"No changes must have been applied to the agent","title":"Expected Result:"},{"location":"agents/check_if_total_agent_on_agents%27_page_is_correct.html","text":"Scenario: Check if total agent on agents' page is correct Steps: 1 - Create multiple agents REST API Method: POST endpoint: /agents header: {authorization:token} 2 - Get all existing agents REST API Method: GET endpoint: /agents 3 - On agents' page ( orb.live/pages/fleet/agents ) check the total number of agents at the end of the agents table 4 - Count the number of existing agents Expected Result: Total agents on API response, agents page and the real number must be the same","title":"Check if total agent on agents' page is correct"},{"location":"agents/check_if_total_agent_on_agents%27_page_is_correct.html#scenario-check-if-total-agent-on-agents-page-is-correct","text":"","title":"Scenario: Check if total agent on agents' page is correct"},{"location":"agents/check_if_total_agent_on_agents%27_page_is_correct.html#steps","text":"1 - Create multiple agents REST API Method: POST endpoint: /agents header: {authorization:token} 2 - Get all existing agents REST API Method: GET endpoint: /agents 3 - On agents' page ( orb.live/pages/fleet/agents ) check the total number of agents at the end of the agents table 4 - Count the number of existing agents","title":"Steps:"},{"location":"agents/check_if_total_agent_on_agents%27_page_is_correct.html#expected-result","text":"Total agents on API response, agents page and the real number must be the same","title":"Expected Result:"},{"location":"agents/create_agent_with_duplicate_name.html","text":"Scenario: Create agent with duplicate name Steps: 1 - Create an agent REST API Method: POST endpoint: /agents header: {authorization:token} 2 - Create another agent using the same agent name Expected Result: First request must have status code 201 (created) and one agent must be created on orb Second request must fail with status code 409 (conflict) and no other agent must be created (make sure that first agent has not been modified)","title":"Create agent with duplicate name"},{"location":"agents/create_agent_with_duplicate_name.html#scenario-create-agent-with-duplicate-name","text":"","title":"Scenario: Create agent with duplicate name"},{"location":"agents/create_agent_with_duplicate_name.html#steps","text":"1 - Create an agent REST API Method: POST endpoint: /agents header: {authorization:token} 2 - Create another agent using the same agent name","title":"Steps:"},{"location":"agents/create_agent_with_duplicate_name.html#expected-result","text":"First request must have status code 201 (created) and one agent must be created on orb Second request must fail with status code 409 (conflict) and no other agent must be created (make sure that first agent has not been modified)","title":"Expected Result:"},{"location":"agents/create_agent_with_invalid_name_%28regex%29.html","text":"Scenario: Create agent with invalid name (regex) Steps: 1 - Create an agent using an invalid regex to agent name REST API Method: POST endpoint: /agents header: {authorization:token} example of invalid regex: name starting with non-alphabetic characters name with just 1 letter space-separated composite name Expected Result: Request must fail with status code 400 (bad request) and no agent must be created","title":"Create agent with invalid name (regex)"},{"location":"agents/create_agent_with_invalid_name_%28regex%29.html#scenario-create-agent-with-invalid-name-regex","text":"","title":"Scenario: Create agent with invalid name (regex)"},{"location":"agents/create_agent_with_invalid_name_%28regex%29.html#steps","text":"1 - Create an agent using an invalid regex to agent name REST API Method: POST endpoint: /agents header: {authorization:token} example of invalid regex: name starting with non-alphabetic characters name with just 1 letter space-separated composite name","title":"Steps:"},{"location":"agents/create_agent_with_invalid_name_%28regex%29.html#expected-result","text":"Request must fail with status code 400 (bad request) and no agent must be created","title":"Expected Result:"},{"location":"agents/create_agent_with_multiple_tags.html","text":"Scenario: Create agent with multiple tags Steps: 1 - Create an agent with more than one pair (key:value) of tags REST API Method: POST endpoint: /agents header: {authorization:token} Expected Result: Request must have status code 201 (created) and the agent must be created Agent with multiple tags will match each tag individually","title":"Create agent with multiple tags"},{"location":"agents/create_agent_with_multiple_tags.html#scenario-create-agent-with-multiple-tags","text":"","title":"Scenario: Create agent with multiple tags"},{"location":"agents/create_agent_with_multiple_tags.html#steps","text":"1 - Create an agent with more than one pair (key:value) of tags REST API Method: POST endpoint: /agents header: {authorization:token}","title":"Steps:"},{"location":"agents/create_agent_with_multiple_tags.html#expected-result","text":"Request must have status code 201 (created) and the agent must be created Agent with multiple tags will match each tag individually","title":"Expected Result:"},{"location":"agents/create_agent_with_one_tag.html","text":"Scenario: Create agent with one tag Steps: 1 - Create an agent with one pair (key:value) of tags REST API Method: POST endpoint: /agents header: {authorization:token} Expected Result: Request must have status code 201 (created) and the agent must be created","title":"Create agent with one tag"},{"location":"agents/create_agent_with_one_tag.html#scenario-create-agent-with-one-tag","text":"","title":"Scenario: Create agent with one tag"},{"location":"agents/create_agent_with_one_tag.html#steps","text":"1 - Create an agent with one pair (key:value) of tags REST API Method: POST endpoint: /agents header: {authorization:token}","title":"Steps:"},{"location":"agents/create_agent_with_one_tag.html#expected-result","text":"Request must have status code 201 (created) and the agent must be created","title":"Expected Result:"},{"location":"agents/create_agent_without_tags.html","text":"Scenario: Create agent without tags Steps: 1 - Create an agent with no pair (key:value) of tags REST API Method: POST endpoint: /agents header: {authorization:token} Expected Result: Request must have status code 201 (created) and the agent must be created","title":"Create agent without tags"},{"location":"agents/create_agent_without_tags.html#scenario-create-agent-without-tags","text":"","title":"Scenario: Create agent without tags"},{"location":"agents/create_agent_without_tags.html#steps","text":"1 - Create an agent with no pair (key:value) of tags REST API Method: POST endpoint: /agents header: {authorization:token}","title":"Steps:"},{"location":"agents/create_agent_without_tags.html#expected-result","text":"Request must have status code 201 (created) and the agent must be created","title":"Expected Result:"},{"location":"agents/edit_agent_name.html","text":"Scenario: Edit agent name Steps: 1 - Create an agent REST API Method: POST endpoint: /agents header: {authorization:token} 2- Edit this agent name REST API Method: PUT endpoint: /agents/agent_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit agent name"},{"location":"agents/edit_agent_name.html#scenario-edit-agent-name","text":"","title":"Scenario: Edit agent name"},{"location":"agents/edit_agent_name.html#steps","text":"1 - Create an agent REST API Method: POST endpoint: /agents header: {authorization:token} 2- Edit this agent name REST API Method: PUT endpoint: /agents/agent_id header: {authorization:token}","title":"Steps:"},{"location":"agents/edit_agent_name.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"agents/edit_agent_name_and_tags.html","text":"Scenario: Edit agent name and tags Steps: 1 - Create an agent REST API Method: POST endpoint: /agents header: {authorization:token} 2- Edit this agent and tags REST API Method: PUT endpoint: /agents/agent_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit agent name and tag"},{"location":"agents/edit_agent_name_and_tags.html#scenario-edit-agent-name-and-tags","text":"","title":"Scenario: Edit agent name and tags"},{"location":"agents/edit_agent_name_and_tags.html#steps","text":"1 - Create an agent REST API Method: POST endpoint: /agents header: {authorization:token} 2- Edit this agent and tags REST API Method: PUT endpoint: /agents/agent_id header: {authorization:token}","title":"Steps:"},{"location":"agents/edit_agent_name_and_tags.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"agents/edit_agent_tag.html","text":"Scenario: Edit agent tag Steps: 1 - Create an agent REST API Method: POST endpoint: /agents header: {authorization:token} 2- Edit this agent tag REST API Method: PUT endpoint: /agents/agent_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit agent tag"},{"location":"agents/edit_agent_tag.html#scenario-edit-agent-tag","text":"","title":"Scenario: Edit agent tag"},{"location":"agents/edit_agent_tag.html#steps","text":"1 - Create an agent REST API Method: POST endpoint: /agents header: {authorization:token} 2- Edit this agent tag REST API Method: PUT endpoint: /agents/agent_id header: {authorization:token}","title":"Steps:"},{"location":"agents/edit_agent_tag.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"agents/edit_an_agent_through_the_details_modal.html","text":"Scenario: Edit an agent through the details modal Steps: 1 - Create an agent REST API Method: POST endpoint: /agents header: {authorization:token} 2 - On agents' page ( orb.live/pages/fleet/agents ) click on details button 3 - Click on \"edit\" button Expected Result: User should be redirected to this agent's edit page and should be able to make changes","title":"Edit an agent through the details modal"},{"location":"agents/edit_an_agent_through_the_details_modal.html#scenario-edit-an-agent-through-the-details-modal","text":"","title":"Scenario: Edit an agent through the details modal"},{"location":"agents/edit_an_agent_through_the_details_modal.html#steps","text":"1 - Create an agent REST API Method: POST endpoint: /agents header: {authorization:token} 2 - On agents' page ( orb.live/pages/fleet/agents ) click on details button 3 - Click on \"edit\" button","title":"Steps:"},{"location":"agents/edit_an_agent_through_the_details_modal.html#expected-result","text":"User should be redirected to this agent's edit page and should be able to make changes","title":"Expected Result:"},{"location":"agents/insert_tags_in_agents_created_without_tags.html","text":"Scenario: Insert tags in agents created without tags Steps: 1 - Create an agent with no pair (key:value) of tags REST API Method: POST endpoint: /agents header: {authorization:token} 2- Edit this agent and insert at least one pair of tag REST API Method: PUT endpoint: /agents/agent_id header: {authorization:token} Expected Result: Request must have status code 200 and tags must be added to the agent","title":"Insert tags in agents created without tags"},{"location":"agents/insert_tags_in_agents_created_without_tags.html#scenario-insert-tags-in-agents-created-without-tags","text":"","title":"Scenario: Insert tags in agents created without tags"},{"location":"agents/insert_tags_in_agents_created_without_tags.html#steps","text":"1 - Create an agent with no pair (key:value) of tags REST API Method: POST endpoint: /agents header: {authorization:token} 2- Edit this agent and insert at least one pair of tag REST API Method: PUT endpoint: /agents/agent_id header: {authorization:token}","title":"Steps:"},{"location":"agents/insert_tags_in_agents_created_without_tags.html#expected-result","text":"Request must have status code 200 and tags must be added to the agent","title":"Expected Result:"},{"location":"agents/remove_agent_using_correct_name.html","text":"Scenario: Remove agent using correct name Steps: 1 - Create an agent REST API Method: POST endpoint: /agents header: {authorization:token} 2 - On agents' page ( orb.live/pages/fleet/agents ) click on remove button 3 - Insert the name of the agent correctly on delete modal 4 - Confirm the operation by clicking on \"I UNDERSTAND, DELETE THIS AGENT\" button Expected Result: Agent must be deleted","title":"Remove agent using correct name"},{"location":"agents/remove_agent_using_correct_name.html#scenario-remove-agent-using-correct-name","text":"","title":"Scenario: Remove agent using correct name"},{"location":"agents/remove_agent_using_correct_name.html#steps","text":"1 - Create an agent REST API Method: POST endpoint: /agents header: {authorization:token} 2 - On agents' page ( orb.live/pages/fleet/agents ) click on remove button 3 - Insert the name of the agent correctly on delete modal 4 - Confirm the operation by clicking on \"I UNDERSTAND, DELETE THIS AGENT\" button","title":"Steps:"},{"location":"agents/remove_agent_using_correct_name.html#expected-result","text":"Agent must be deleted","title":"Expected Result:"},{"location":"agents/remove_agent_using_incorrect_name.html","text":"Scenario: Remove agent using incorrect name Steps: 1 - Create an agent REST API Method: POST endpoint: /agents header: {authorization:token} 2 - On agents' page ( orb.live/pages/fleet/agents ) click on remove button 3 - Insert the name of the agent incorrectly on delete modal Expected Result: \"I UNDERSTAND, DELETE THIS AGENT\" button must not be enabled After user close the deletion modal, agent must not be deleted","title":"Remove agent using incorrect name"},{"location":"agents/remove_agent_using_incorrect_name.html#scenario-remove-agent-using-incorrect-name","text":"","title":"Scenario: Remove agent using incorrect name"},{"location":"agents/remove_agent_using_incorrect_name.html#steps","text":"1 - Create an agent REST API Method: POST endpoint: /agents header: {authorization:token} 2 - On agents' page ( orb.live/pages/fleet/agents ) click on remove button 3 - Insert the name of the agent incorrectly on delete modal","title":"Steps:"},{"location":"agents/remove_agent_using_incorrect_name.html#expected-result","text":"\"I UNDERSTAND, DELETE THIS AGENT\" button must not be enabled After user close the deletion modal, agent must not be deleted","title":"Expected Result:"},{"location":"agents/run_two_orb_agents_on_different_ports.html","text":"Scenario: Run two orb agents on different ports Steps: 1 - Provision an agent 2 - Provision another agent on a different port - Use environmental variable: PKTVISOR_PCAP_IFACE_DEFAULT to set the port Expected Result: Both containers must be running","title":"Run two orb agents on different ports"},{"location":"agents/run_two_orb_agents_on_different_ports.html#scenario-run-two-orb-agents-on-different-ports","text":"","title":"Scenario: Run two orb agents on different ports"},{"location":"agents/run_two_orb_agents_on_different_ports.html#steps","text":"1 - Provision an agent 2 - Provision another agent on a different port - Use environmental variable: PKTVISOR_PCAP_IFACE_DEFAULT to set the port","title":"Steps:"},{"location":"agents/run_two_orb_agents_on_different_ports.html#expected-result","text":"Both containers must be running","title":"Expected Result:"},{"location":"agents/run_two_orb_agents_on_the_same_port.html","text":"Scenario: Run two orb agents on the same port Steps: 1 - Provision an agent 2 - Provision another agent on same port Expected Result: Second container must be exited the container logs should contain the message \"agent startup error\"","title":"Run two orb agents on the same port"},{"location":"agents/run_two_orb_agents_on_the_same_port.html#scenario-run-two-orb-agents-on-the-same-port","text":"","title":"Scenario: Run two orb agents on the same port"},{"location":"agents/run_two_orb_agents_on_the_same_port.html#steps","text":"1 - Provision an agent 2 - Provision another agent on same port","title":"Steps:"},{"location":"agents/run_two_orb_agents_on_the_same_port.html#expected-result","text":"Second container must be exited the container logs should contain the message \"agent startup error\"","title":"Expected Result:"},{"location":"agents/save_agent_without_tag.html","text":"Scenario: Save agent without tag Steps: 1 - Create an agent with at least one pair (key:value) of tags REST API Method: POST endpoint: /agents header: {authorization:token} 2- Edit this agent tag and remove all pairs REST API Method: PUT endpoint: /agents/agent_id header: {authorization:token} Expected Result: Request must have status code 200 and all tags must be removed from the agent","title":"Save agent without tag"},{"location":"agents/save_agent_without_tag.html#scenario-save-agent-without-tag","text":"","title":"Scenario: Save agent without tag"},{"location":"agents/save_agent_without_tag.html#steps","text":"1 - Create an agent with at least one pair (key:value) of tags REST API Method: POST endpoint: /agents header: {authorization:token} 2- Edit this agent tag and remove all pairs REST API Method: PUT endpoint: /agents/agent_id header: {authorization:token}","title":"Steps:"},{"location":"agents/save_agent_without_tag.html#expected-result","text":"Request must have status code 200 and all tags must be removed from the agent","title":"Expected Result:"},{"location":"agents/test_agent_filters.html","text":"Scenario: Test agent filters Steps: 1 - Create multiple agents REST API Method: POST endpoint: /agents header: {authorization:token} 2 - On agents' page ( orb.live/pages/fleet/agents ) use the filter: Name Status Tags Search by Expected Result: All filters must be working properly","title":"Test agent filters"},{"location":"agents/test_agent_filters.html#scenario-test-agent-filters","text":"","title":"Scenario: Test agent filters"},{"location":"agents/test_agent_filters.html#steps","text":"1 - Create multiple agents REST API Method: POST endpoint: /agents header: {authorization:token} 2 - On agents' page ( orb.live/pages/fleet/agents ) use the filter: Name Status Tags Search by","title":"Steps:"},{"location":"agents/test_agent_filters.html#expected-result","text":"All filters must be working properly","title":"Expected Result:"},{"location":"datasets/check_datasets_details.html","text":"Scenario: Check datasets details Steps: 1 - Create a dataset REST API Method: POST endpoint: /policies/dataset header: {authorization:token} 2 - Get a dataset REST API Method: GET endpoint: /policies/dataset/dataset_id Expected Result: Status code must be 200 and the dataset name, validity, agent group linked, agent policy linked and sink linked must be returned on response","title":"Check datasets details"},{"location":"datasets/check_datasets_details.html#scenario-check-datasets-details","text":"","title":"Scenario: Check datasets details"},{"location":"datasets/check_datasets_details.html#steps","text":"1 - Create a dataset REST API Method: POST endpoint: /policies/dataset header: {authorization:token} 2 - Get a dataset REST API Method: GET endpoint: /policies/dataset/dataset_id","title":"Steps:"},{"location":"datasets/check_datasets_details.html#expected-result","text":"Status code must be 200 and the dataset name, validity, agent group linked, agent policy linked and sink linked must be returned on response","title":"Expected Result:"},{"location":"datasets/check_if_is_possible_cancel_operations_with_no_change.html","text":"Scenario: Check if is possible cancel operations with no change Steps: 1 - Create a dataset REST API Method: POST endpoint: /policies/dataset header: {authorization:token} 2 - On datasets' page ( orb.live/pages/datasets/list ) click on edit button 3 - Change groups' name and click \"next\" 4 - Change sink linked and click \"next\" Expected Result: No changes must have been applied to the dataset","title":"Check if is possible cancel operations with no change"},{"location":"datasets/check_if_is_possible_cancel_operations_with_no_change.html#scenario-check-if-is-possible-cancel-operations-with-no-change","text":"","title":"Scenario: Check if is possible cancel operations with no change"},{"location":"datasets/check_if_is_possible_cancel_operations_with_no_change.html#steps","text":"1 - Create a dataset REST API Method: POST endpoint: /policies/dataset header: {authorization:token} 2 - On datasets' page ( orb.live/pages/datasets/list ) click on edit button 3 - Change groups' name and click \"next\" 4 - Change sink linked and click \"next\"","title":"Steps:"},{"location":"datasets/check_if_is_possible_cancel_operations_with_no_change.html#expected-result","text":"No changes must have been applied to the dataset","title":"Expected Result:"},{"location":"datasets/check_if_total_datasets_on_datasets%27_page_is_correct.html","text":"Scenario: Check if total datasets on datasets' page is correct Steps: 1 - Create multiple datasets REST API Method: POST endpoint: /policies/dataset header: {authorization:token} 2 - Get all existing datasets REST API Method: GET endpoint: /policies/dataset 3 - On datasets' page ( orb.live/pages/datasets/list ) check the total number of datasets at the end of the dataset table 4 - Count the number of existing datasets Expected Result: Total datasets on API response, datasets page and the real number must be the same","title":"Check if total datasets on datasets' page is correct"},{"location":"datasets/check_if_total_datasets_on_datasets%27_page_is_correct.html#scenario-check-if-total-datasets-on-datasets-page-is-correct","text":"","title":"Scenario: Check if total datasets on datasets' page is correct"},{"location":"datasets/check_if_total_datasets_on_datasets%27_page_is_correct.html#steps","text":"1 - Create multiple datasets REST API Method: POST endpoint: /policies/dataset header: {authorization:token} 2 - Get all existing datasets REST API Method: GET endpoint: /policies/dataset 3 - On datasets' page ( orb.live/pages/datasets/list ) check the total number of datasets at the end of the dataset table 4 - Count the number of existing datasets","title":"Steps:"},{"location":"datasets/check_if_total_datasets_on_datasets%27_page_is_correct.html#expected-result","text":"Total datasets on API response, datasets page and the real number must be the same","title":"Expected Result:"},{"location":"datasets/create_dataset.html","text":"Scenario: Create dataset Steps: 1 - Create a dataset with no description REST API Method: POST endpoint: /policies/dataset header: {authorization:token} Expected Result: Request must have status code 201 (created) and the agent group must be created","title":"Create dataset"},{"location":"datasets/create_dataset.html#scenario-create-dataset","text":"","title":"Scenario: Create dataset"},{"location":"datasets/create_dataset.html#steps","text":"1 - Create a dataset with no description REST API Method: POST endpoint: /policies/dataset header: {authorization:token}","title":"Steps:"},{"location":"datasets/create_dataset.html#expected-result","text":"Request must have status code 201 (created) and the agent group must be created","title":"Expected Result:"},{"location":"datasets/create_dataset_with_invalid_name_%28regex%29.html","text":"Scenario: Create dataset with invalid name (regex) Steps: 1 - Create a dataset using an invalid regex to dataset name REST API Method: POST endpoint: /policies/dataset header: {authorization:token} example of invalid regex: name starting with non-alphabetic characters name with just 1 letter space-separated composite name Expected Result: Request must fail with status code 400 (bad request) and no dataset must be created","title":"Create dataset with invalid name (regex)"},{"location":"datasets/create_dataset_with_invalid_name_%28regex%29.html#scenario-create-dataset-with-invalid-name-regex","text":"","title":"Scenario: Create dataset with invalid name (regex)"},{"location":"datasets/create_dataset_with_invalid_name_%28regex%29.html#steps","text":"1 - Create a dataset using an invalid regex to dataset name REST API Method: POST endpoint: /policies/dataset header: {authorization:token} example of invalid regex: name starting with non-alphabetic characters name with just 1 letter space-separated composite name","title":"Steps:"},{"location":"datasets/create_dataset_with_invalid_name_%28regex%29.html#expected-result","text":"Request must fail with status code 400 (bad request) and no dataset must be created","title":"Expected Result:"},{"location":"datasets/edit_a_dataset_through_the_details_modal.html","text":"Scenario: Edit a dataset through the details modal Steps: 1 - Create a dataset REST API Method: POST endpoint: /policies/dataset header: {authorization:token} 2 - On datasets' page ( orb.live/pages/datasets/list ) click on details button 3 - Click on \"edit\" button Expected Result: User should be redirected to this dataset's edit page and should be able to make changes","title":"Edit a dataset through the details modal"},{"location":"datasets/edit_a_dataset_through_the_details_modal.html#scenario-edit-a-dataset-through-the-details-modal","text":"","title":"Scenario: Edit a dataset through the details modal"},{"location":"datasets/edit_a_dataset_through_the_details_modal.html#steps","text":"1 - Create a dataset REST API Method: POST endpoint: /policies/dataset header: {authorization:token} 2 - On datasets' page ( orb.live/pages/datasets/list ) click on details button 3 - Click on \"edit\" button","title":"Steps:"},{"location":"datasets/edit_a_dataset_through_the_details_modal.html#expected-result","text":"User should be redirected to this dataset's edit page and should be able to make changes","title":"Expected Result:"},{"location":"datasets/edit_dataset_name.html","text":"Scenario: Edit dataset name Steps: 1 - Create a dataset REST API Method: POST endpoint: /policies/dataset header: {authorization:token} 2- Edit this dataset name REST API Method: PUT endpoint: /policies/dataset/dataset_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit dataset name"},{"location":"datasets/edit_dataset_name.html#scenario-edit-dataset-name","text":"","title":"Scenario: Edit dataset name"},{"location":"datasets/edit_dataset_name.html#steps","text":"1 - Create a dataset REST API Method: POST endpoint: /policies/dataset header: {authorization:token} 2- Edit this dataset name REST API Method: PUT endpoint: /policies/dataset/dataset_id header: {authorization:token}","title":"Steps:"},{"location":"datasets/edit_dataset_name.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"datasets/edit_dataset_sink.html","text":"Scenario: Edit dataset sink Steps: 1 - Create a dataset REST API Method: POST endpoint: /policies/dataset header: {authorization:token} 2- Edit this dataset sink REST API Method: PUT endpoint: /policies/dataset/dataset_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit dataset sink"},{"location":"datasets/edit_dataset_sink.html#scenario-edit-dataset-sink","text":"","title":"Scenario: Edit dataset sink"},{"location":"datasets/edit_dataset_sink.html#steps","text":"1 - Create a dataset REST API Method: POST endpoint: /policies/dataset header: {authorization:token} 2- Edit this dataset sink REST API Method: PUT endpoint: /policies/dataset/dataset_id header: {authorization:token}","title":"Steps:"},{"location":"datasets/edit_dataset_sink.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"datasets/remove_dataset_using_correct_name.html","text":"Scenario: Remove dataset using correct name Steps: 1 - Create a dataset REST API Method: POST endpoint: /policies/dataset header: {authorization:token} 2 - On datasets' page ( orb.live/pages/datasets/list ) click on remove button 3 - Insert the name of the dataset correctly on delete modal 4 - Confirm the operation by clicking on \"I UNDERSTAND, DELETE THIS DATASET\" button Expected Result: Dataset must be deleted","title":"Remove dataset using correct name"},{"location":"datasets/remove_dataset_using_correct_name.html#scenario-remove-dataset-using-correct-name","text":"","title":"Scenario: Remove dataset using correct name"},{"location":"datasets/remove_dataset_using_correct_name.html#steps","text":"1 - Create a dataset REST API Method: POST endpoint: /policies/dataset header: {authorization:token} 2 - On datasets' page ( orb.live/pages/datasets/list ) click on remove button 3 - Insert the name of the dataset correctly on delete modal 4 - Confirm the operation by clicking on \"I UNDERSTAND, DELETE THIS DATASET\" button","title":"Steps:"},{"location":"datasets/remove_dataset_using_correct_name.html#expected-result","text":"Dataset must be deleted","title":"Expected Result:"},{"location":"datasets/remove_dataset_using_incorrect_name.html","text":"Scenario: Remove dataset using incorrect name Steps: 1 - Create a dataset REST API Method: POST endpoint: /policies/dataset header: {authorization:token} 2 - On datasets' page ( orb.live/pages/datasets/list ) click on remove button 3 - Insert the name of the dataset correctly on delete modal Expected Result: \"I UNDERSTAND, DELETE THIS DATASET\" button must not be enabled After user close the deletion modal, dataset must not be deleted","title":"Remove dataset using incorrect name"},{"location":"datasets/remove_dataset_using_incorrect_name.html#scenario-remove-dataset-using-incorrect-name","text":"","title":"Scenario: Remove dataset using incorrect name"},{"location":"datasets/remove_dataset_using_incorrect_name.html#steps","text":"1 - Create a dataset REST API Method: POST endpoint: /policies/dataset header: {authorization:token} 2 - On datasets' page ( orb.live/pages/datasets/list ) click on remove button 3 - Insert the name of the dataset correctly on delete modal","title":"Steps:"},{"location":"datasets/remove_dataset_using_incorrect_name.html#expected-result","text":"\"I UNDERSTAND, DELETE THIS DATASET\" button must not be enabled After user close the deletion modal, dataset must not be deleted","title":"Expected Result:"},{"location":"datasets/test_datasets_filter.html","text":"Scenario: Test datasets filter Steps: 1 - Create multiple datasets REST API Method: POST endpoint: /policies/dataset header: {authorization:token} 2 - On datasets' page ( orb.live/pages/datasets/list ) use the filter: Name Search by Expected Result: All filters must be working properly","title":"Test datasets filter"},{"location":"datasets/test_datasets_filter.html#scenario-test-datasets-filter","text":"","title":"Scenario: Test datasets filter"},{"location":"datasets/test_datasets_filter.html#steps","text":"1 - Create multiple datasets REST API Method: POST endpoint: /policies/dataset header: {authorization:token} 2 - On datasets' page ( orb.live/pages/datasets/list ) use the filter: Name Search by","title":"Steps:"},{"location":"datasets/test_datasets_filter.html#expected-result","text":"All filters must be working properly","title":"Expected Result:"},{"location":"integration/agent_subscription_to_group_after_editing_agent%27s_tags.html","text":"Scenario: Agent subscription to group after editing orb agent's tags (agent provisioned before group) Steps: Provision an agent with tags Create a group with same tags as agent Create another group with different tags Edit agent orb tags to match with second group Expected result: Agent heartbeat must show just one group matching Agent logs must show that agent is unsubscribed from the first group Agent logs must show that agent is subscribed to the second group Scenario: Agent subscription to group after editing orb agent's tags (agent provisioned after group) Steps: Create a group with tags Provision an agent with same tags Create another group with different tags Edit agent orb tags to match with second group Expected result: Agent heartbeat must show just one group matching Agent logs must show that agent is unsubscribed from the first group Agent logs must show that agent is subscribed to the second group Scenario: Agent subscription to group after editing orb agent's tags (agent provisioned after groups) Steps: Create a group with tags Create another group with different tags Provision an agent with same tags as first group Edit agent orb tags to match with second group Expected result: Agent heartbeat must show just one group matching Agent logs must show that agent is unsubscribed from the first group Agent logs must show that agent is subscribed to the second group","title":"Agent subscription to group after editing orb agent's tags"},{"location":"integration/agent_subscription_to_group_after_editing_agent%27s_tags.html#scenario-agent-subscription-to-group-after-editing-orb-agents-tags-agent-provisioned-before-group","text":"","title":"Scenario: Agent subscription to group after editing orb agent's tags (agent provisioned before group)"},{"location":"integration/agent_subscription_to_group_after_editing_agent%27s_tags.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create another group with different tags Edit agent orb tags to match with second group","title":"Steps:"},{"location":"integration/agent_subscription_to_group_after_editing_agent%27s_tags.html#expected-result","text":"Agent heartbeat must show just one group matching Agent logs must show that agent is unsubscribed from the first group Agent logs must show that agent is subscribed to the second group","title":"Expected result:"},{"location":"integration/agent_subscription_to_group_after_editing_agent%27s_tags.html#scenario-agent-subscription-to-group-after-editing-orb-agents-tags-agent-provisioned-after-group","text":"","title":"Scenario: Agent subscription to group after editing orb agent's tags (agent provisioned after group)"},{"location":"integration/agent_subscription_to_group_after_editing_agent%27s_tags.html#steps_1","text":"Create a group with tags Provision an agent with same tags Create another group with different tags Edit agent orb tags to match with second group","title":"Steps:"},{"location":"integration/agent_subscription_to_group_after_editing_agent%27s_tags.html#expected-result_1","text":"Agent heartbeat must show just one group matching Agent logs must show that agent is unsubscribed from the first group Agent logs must show that agent is subscribed to the second group","title":"Expected result:"},{"location":"integration/agent_subscription_to_group_after_editing_agent%27s_tags.html#scenario-agent-subscription-to-group-after-editing-orb-agents-tags-agent-provisioned-after-groups","text":"","title":"Scenario: Agent subscription to group after editing orb agent's tags (agent provisioned after groups)"},{"location":"integration/agent_subscription_to_group_after_editing_agent%27s_tags.html#steps_2","text":"Create a group with tags Create another group with different tags Provision an agent with same tags as first group Edit agent orb tags to match with second group","title":"Steps:"},{"location":"integration/agent_subscription_to_group_after_editing_agent%27s_tags.html#expected-result_2","text":"Agent heartbeat must show just one group matching Agent logs must show that agent is unsubscribed from the first group Agent logs must show that agent is subscribed to the second group","title":"Expected result:"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent%27s_tags.html","text":"Scenario: Agent subscription to group with policies after editing orb agent's tags Steps: Provision an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Create another group with different tags Create another policy and apply to the group Edit agent orb tags to match with second group Expected result: Agent heartbeat must show just one group matching Agent logs must show that agent is unsubscribed from the first group Agent logs must show that agent is subscribed to the second group The container logs contain the message \"policy applied successfully\" referred to the policy applied to the second group The container logs that were output after all policies have been applied contains the message \"scraped metrics for policy\" referred to each applied policy Scenario: Agent subscription to multiple groups with policies after editing orb agent's tags Steps: Provision an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Create another group with different tags Create another policy and apply to the group Edit agent orb tags to match with both groups Expected result: Agent heartbeat must show 2 group matching Agent logs must show that agent is unsubscribed from the first group Agent logs must show that agent is subscribed to the second group The container logs contain the message \"policy applied successfully\" referred to the policy applied to both groups The container logs that were output after all policies have been applied contains the message \"scraped metrics for policy\" referred to each applied policy","title":"Agent subscription to group with policies after editing orb agent's tags"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent%27s_tags.html#scenario-agent-subscription-to-group-with-policies-after-editing-orb-agents-tags","text":"","title":"Scenario: Agent subscription to group with policies after editing orb agent's tags"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent%27s_tags.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Create another group with different tags Create another policy and apply to the group Edit agent orb tags to match with second group","title":"Steps:"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent%27s_tags.html#expected-result","text":"Agent heartbeat must show just one group matching Agent logs must show that agent is unsubscribed from the first group Agent logs must show that agent is subscribed to the second group The container logs contain the message \"policy applied successfully\" referred to the policy applied to the second group The container logs that were output after all policies have been applied contains the message \"scraped metrics for policy\" referred to each applied policy","title":"Expected result:"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent%27s_tags.html#scenario-agent-subscription-to-multiple-groups-with-policies-after-editing-orb-agents-tags","text":"","title":"Scenario: Agent subscription to multiple groups with policies after editing orb agent's tags"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent%27s_tags.html#steps_1","text":"Provision an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Create another group with different tags Create another policy and apply to the group Edit agent orb tags to match with both groups","title":"Steps:"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent%27s_tags.html#expected-result_1","text":"Agent heartbeat must show 2 group matching Agent logs must show that agent is unsubscribed from the first group Agent logs must show that agent is subscribed to the second group The container logs contain the message \"policy applied successfully\" referred to the policy applied to both groups The container logs that were output after all policies have been applied contains the message \"scraped metrics for policy\" referred to each applied policy","title":"Expected result:"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent%27s_tags_and_agent_group%27s_tags_editing_tags_after_agent_provision.html","text":"Scenario: Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision) Steps: Provision an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit groups' tags changing the value Edit agent orb tags to match with new groups tags Expected result: Agent heartbeat must show just one group matching Agent logs must show that agent is unsubscribed from the group Agent logs must show that agent is resubscribed to the group","title":"Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision)"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent%27s_tags_and_agent_group%27s_tags_editing_tags_after_agent_provision.html#scenario-agent-subscription-to-group-with-policies-after-editing-orb-agents-tags-and-agent-groups-tags-editing-tags-after-agent-provision","text":"","title":"Scenario: Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision)"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent%27s_tags_and_agent_group%27s_tags_editing_tags_after_agent_provision.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit groups' tags changing the value Edit agent orb tags to match with new groups tags","title":"Steps:"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent%27s_tags_and_agent_group%27s_tags_editing_tags_after_agent_provision.html#expected-result","text":"Agent heartbeat must show just one group matching Agent logs must show that agent is unsubscribed from the group Agent logs must show that agent is resubscribed to the group","title":"Expected result:"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent%27s_tags_and_agent_group%27s_tags_editing_tags_before_agent_provision.html","text":"Scenario: Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision) Steps: Create an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit groups' tags changing the value Edit agent orb tags to match with new groups tags Provision the agent Expected result: Agent heartbeat must show just one group matching Agent logs must show that agent is subscribed to the group","title":"Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision)"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent%27s_tags_and_agent_group%27s_tags_editing_tags_before_agent_provision.html#scenario-agent-subscription-to-group-with-policies-after-editing-orb-agents-tags-and-agent-groups-tags-editing-tags-before-agent-provision","text":"","title":"Scenario: Agent subscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision)"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent%27s_tags_and_agent_group%27s_tags_editing_tags_before_agent_provision.html#steps","text":"Create an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit groups' tags changing the value Edit agent orb tags to match with new groups tags Provision the agent","title":"Steps:"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent%27s_tags_and_agent_group%27s_tags_editing_tags_before_agent_provision.html#expected-result","text":"Agent heartbeat must show just one group matching Agent logs must show that agent is subscribed to the group","title":"Expected result:"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent_group%27s_tags_editing_tags_after_agent_provision.html","text":"Scenario: Agent subscription to group with policies after editing agent group's tags (editing tags after agent provision) Steps: Provision an agent with tags Create a group with different tags Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit groups' tags changing the value to match with agent Expected result: Agent heartbeat must show just one group matching Agent logs must show that agent is subscribed to the group","title":"Agent subscription to group with policies after editing agent group's tags (editing tags after agent provision)"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent_group%27s_tags_editing_tags_after_agent_provision.html#scenario-agent-subscription-to-group-with-policies-after-editing-agent-groups-tags-editing-tags-after-agent-provision","text":"","title":"Scenario: Agent subscription to group with policies after editing agent group's tags (editing tags after agent provision)"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent_group%27s_tags_editing_tags_after_agent_provision.html#steps","text":"Provision an agent with tags Create a group with different tags Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit groups' tags changing the value to match with agent","title":"Steps:"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent_group%27s_tags_editing_tags_after_agent_provision.html#expected-result","text":"Agent heartbeat must show just one group matching Agent logs must show that agent is subscribed to the group","title":"Expected result:"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent_group%27s_tags_editing_tags_before_agent_provision.html","text":"Scenario: Agent subscription to group with policies after editing agent group's tags (editing tags before agent provision) Steps: Create an agent with tags Create a group with different tags Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit groups' tags changing the value to match with agent Provision the agent Expected result: Agent heartbeat must show just one group matching Agent logs must show that agent is subscribed to the group","title":"Agent subscription to group with policies after editing agent group's tags (editing tags before agent provision)"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent_group%27s_tags_editing_tags_before_agent_provision.html#scenario-agent-subscription-to-group-with-policies-after-editing-agent-groups-tags-editing-tags-before-agent-provision","text":"","title":"Scenario: Agent subscription to group with policies after editing agent group's tags (editing tags before agent provision)"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent_group%27s_tags_editing_tags_before_agent_provision.html#steps","text":"Create an agent with tags Create a group with different tags Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit groups' tags changing the value to match with agent Provision the agent","title":"Steps:"},{"location":"integration/agent_subscription_to_group_with_policies_after_editing_agent_group%27s_tags_editing_tags_before_agent_provision.html#expected-result","text":"Agent heartbeat must show just one group matching Agent logs must show that agent is subscribed to the group","title":"Expected result:"},{"location":"integration/agent_unsubscription_to_group_with_policies_after_editing_agent%27s_tags_and_agent_group%27s_tags_editing_tags_after_agent_provision.html","text":"Scenario: Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision) Steps: Provision an agent with tags Create a group with another tag Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit orb tags on agent using the same tag as the group Edit groups' tags using a different one Expected result: Agent heartbeat must show just one group matching Agent logs must show that agent is unsubscribed to the group","title":"Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision)"},{"location":"integration/agent_unsubscription_to_group_with_policies_after_editing_agent%27s_tags_and_agent_group%27s_tags_editing_tags_after_agent_provision.html#scenario-agent-unsubscription-to-group-with-policies-after-editing-orb-agents-tags-and-agent-groups-tags-editing-tags-after-agent-provision","text":"","title":"Scenario: Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags after agent provision)"},{"location":"integration/agent_unsubscription_to_group_with_policies_after_editing_agent%27s_tags_and_agent_group%27s_tags_editing_tags_after_agent_provision.html#steps","text":"Provision an agent with tags Create a group with another tag Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit orb tags on agent using the same tag as the group Edit groups' tags using a different one","title":"Steps:"},{"location":"integration/agent_unsubscription_to_group_with_policies_after_editing_agent%27s_tags_and_agent_group%27s_tags_editing_tags_after_agent_provision.html#expected-result","text":"Agent heartbeat must show just one group matching Agent logs must show that agent is unsubscribed to the group","title":"Expected result:"},{"location":"integration/agent_unsubscription_to_group_with_policies_after_editing_agent%27s_tags_and_agent_group%27s_tags_editing_tags_before_agent_provision.html","text":"Scenario: Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision) Steps: Create an agent with tags Create a group with another tag Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit orb tags on agent using the same tag as the group Edit groups' tags using a different one Provision the agent Expected result: Agent heartbeat must show just one group matching Agent logs must show that agent is unsubscribed to the group","title":"Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision)"},{"location":"integration/agent_unsubscription_to_group_with_policies_after_editing_agent%27s_tags_and_agent_group%27s_tags_editing_tags_before_agent_provision.html#scenario-agent-unsubscription-to-group-with-policies-after-editing-orb-agents-tags-and-agent-groups-tags-editing-tags-before-agent-provision","text":"","title":"Scenario: Agent unsubscription to group with policies after editing orb agent's tags and agent group's tags (editing tags before agent provision)"},{"location":"integration/agent_unsubscription_to_group_with_policies_after_editing_agent%27s_tags_and_agent_group%27s_tags_editing_tags_before_agent_provision.html#steps","text":"Create an agent with tags Create a group with another tag Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit orb tags on agent using the same tag as the group Edit groups' tags using a different one Provision the agent","title":"Steps:"},{"location":"integration/agent_unsubscription_to_group_with_policies_after_editing_agent%27s_tags_and_agent_group%27s_tags_editing_tags_before_agent_provision.html#expected-result","text":"Agent heartbeat must show just one group matching Agent logs must show that agent is unsubscribed to the group","title":"Expected result:"},{"location":"integration/agent_unsubscription_to_group_with_policies_after_editing_agent_group%27s_tags_editing_tags_after_agent_provision.html","text":"Scenario: Agent unsubscription to group with policies after editing agent group's tags (editing tags after agent provision) Steps: Provision an agent with tags Create a group with same tags as the agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit groups' tags changing the value Expected result: Agent heartbeat must show just one group matching Agent logs must show that agent is unsubscribed to the group","title":"Agent unsubscription to group with policies after editing agent group's tags (editing tags after agent provision)"},{"location":"integration/agent_unsubscription_to_group_with_policies_after_editing_agent_group%27s_tags_editing_tags_after_agent_provision.html#scenario-agent-unsubscription-to-group-with-policies-after-editing-agent-groups-tags-editing-tags-after-agent-provision","text":"","title":"Scenario: Agent unsubscription to group with policies after editing agent group's tags (editing tags after agent provision)"},{"location":"integration/agent_unsubscription_to_group_with_policies_after_editing_agent_group%27s_tags_editing_tags_after_agent_provision.html#steps","text":"Provision an agent with tags Create a group with same tags as the agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit groups' tags changing the value","title":"Steps:"},{"location":"integration/agent_unsubscription_to_group_with_policies_after_editing_agent_group%27s_tags_editing_tags_after_agent_provision.html#expected-result","text":"Agent heartbeat must show just one group matching Agent logs must show that agent is unsubscribed to the group","title":"Expected result:"},{"location":"integration/agent_unsubscription_to_group_with_policies_after_editing_agent_group%27s_tags_editing_tags_before_agent_provision.html","text":"Scenario: Agent unsubscription to group with policies after editing agent group's tags (editing tags before agent provision) Steps: Create an agent with tags Create a group with same tags as the agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit groups' tags changing the value Provision the agent Expected result: Agent heartbeat must show just one group matching Agent logs must show that agent is unsubscribed to the group","title":"Agent unsubscription to group with policies after editing agent group's tags (editing tags before agent provision)"},{"location":"integration/agent_unsubscription_to_group_with_policies_after_editing_agent_group%27s_tags_editing_tags_before_agent_provision.html#scenario-agent-unsubscription-to-group-with-policies-after-editing-agent-groups-tags-editing-tags-before-agent-provision","text":"","title":"Scenario: Agent unsubscription to group with policies after editing agent group's tags (editing tags before agent provision)"},{"location":"integration/agent_unsubscription_to_group_with_policies_after_editing_agent_group%27s_tags_editing_tags_before_agent_provision.html#steps","text":"Create an agent with tags Create a group with same tags as the agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit groups' tags changing the value Provision the agent","title":"Steps:"},{"location":"integration/agent_unsubscription_to_group_with_policies_after_editing_agent_group%27s_tags_editing_tags_before_agent_provision.html#expected-result","text":"Agent heartbeat must show just one group matching Agent logs must show that agent is unsubscribed to the group","title":"Expected result:"},{"location":"integration/apply_multiple_policies.html","text":"1- Scenario: apply multiple advanced policies to agents subscribed to a group Steps: Provision an agent with tags Create a group with same tags as agent Create a sink Create multiple advanced policies (with filters, source pcap) Create a dataset linking the group, the sink and one of the policies Create another dataset linking the same group, sink and the other policy Expected result: All the policies must be applied to the agent (orb-agent API response) The container logs contain the message \"policy applied successfully\" referred to each policy The container logs that were output after all policies have been applied contain the message \"scraped metrics for policy\" referred to each applied policy Referred sink must have active state on response Datasets related to all existing policies have validity valid 2- Scenario: apply multiple simple policies to agents subscribed to a group Steps: Provision an agent with tags Create a group with same tags as agent Create a sink Create 2 policies Create a dataset linking the group, the sink and one of the policies Create another dataset linking the same group, sink and the other policy Expected result: All the policies must be applied to the agent (orb-agent API response) The container logs contain the message \"policy applied successfully\" referred to each policy The container logs that were output after all policies have been applied contain the message \"scraped metrics for policy\" referred to each applied policy Referred sink must have active state on response Datasets related to all existing policies have validity valid","title":"Apply multiple policies to a group"},{"location":"integration/apply_multiple_policies.html#1-scenario-apply-multiple-advanced-policies-to-agents-subscribed-to-a-group","text":"","title":"1- Scenario: apply multiple advanced policies to agents subscribed to a group"},{"location":"integration/apply_multiple_policies.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create a sink Create multiple advanced policies (with filters, source pcap) Create a dataset linking the group, the sink and one of the policies Create another dataset linking the same group, sink and the other policy","title":"Steps:"},{"location":"integration/apply_multiple_policies.html#expected-result","text":"All the policies must be applied to the agent (orb-agent API response) The container logs contain the message \"policy applied successfully\" referred to each policy The container logs that were output after all policies have been applied contain the message \"scraped metrics for policy\" referred to each applied policy Referred sink must have active state on response Datasets related to all existing policies have validity valid","title":"Expected result:"},{"location":"integration/apply_multiple_policies.html#2-scenario-apply-multiple-simple-policies-to-agents-subscribed-to-a-group","text":"","title":"2- Scenario: apply multiple simple policies to agents subscribed to a group"},{"location":"integration/apply_multiple_policies.html#steps_1","text":"Provision an agent with tags Create a group with same tags as agent Create a sink Create 2 policies Create a dataset linking the group, the sink and one of the policies Create another dataset linking the same group, sink and the other policy","title":"Steps:"},{"location":"integration/apply_multiple_policies.html#expected-result_1","text":"All the policies must be applied to the agent (orb-agent API response) The container logs contain the message \"policy applied successfully\" referred to each policy The container logs that were output after all policies have been applied contain the message \"scraped metrics for policy\" referred to each applied policy Referred sink must have active state on response Datasets related to all existing policies have validity valid","title":"Expected result:"},{"location":"integration/apply_policy_twice.html","text":"Scenario: apply twice the same policy to agents subscribed to a group Steps: Provision an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Create another dataset linking the same group and policy (sink can be the same or a different one) Expected result: The policy must be applied to the agent (orb-agent API response) and two datasets must be listed linked to the policy The container logs contain the message \"policy applied successfully\" referred to the policy The container logs contain the message \"scraped metrics for policy\" referred to the policy All sinks linked must have active state on response Both datasets have validity valid","title":"Apply the same policy twice to the agent"},{"location":"integration/apply_policy_twice.html#scenario-apply-twice-the-same-policy-to-agents-subscribed-to-a-group","text":"","title":"Scenario: apply twice the same policy to agents subscribed to a group"},{"location":"integration/apply_policy_twice.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Create another dataset linking the same group and policy (sink can be the same or a different one)","title":"Steps:"},{"location":"integration/apply_policy_twice.html#expected-result","text":"The policy must be applied to the agent (orb-agent API response) and two datasets must be listed linked to the policy The container logs contain the message \"policy applied successfully\" referred to the policy The container logs contain the message \"scraped metrics for policy\" referred to the policy All sinks linked must have active state on response Both datasets have validity valid","title":"Expected result:"},{"location":"integration/change_sink_on_dataset.html","text":"Scenario: edit sink on dataset Steps: Provision an agent with tags Create a group with same tags as agent Create 2 sinks Create 1 policy Create a dataset linking the group, one of the sinks and the policy Wait for scraping metrics for policy Edit the dataset changing the sink Expected result: The policy must be applied to the agent (orb-agent API response) The container logs contain the message \"policy applied successfully\" referred to the policy The container logs contain the message \"scraped metrics for policy\" referred to the policy Datasets have validity valid First applied sink must stop to receive data after the edition Second applied sink must start to receive data after the edition","title":"Delete sink linked to a dataset, create another one and edit dataset using new sink"},{"location":"integration/change_sink_on_dataset.html#scenario-edit-sink-on-dataset","text":"","title":"Scenario: edit sink on dataset"},{"location":"integration/change_sink_on_dataset.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create 2 sinks Create 1 policy Create a dataset linking the group, one of the sinks and the policy Wait for scraping metrics for policy Edit the dataset changing the sink","title":"Steps:"},{"location":"integration/change_sink_on_dataset.html#expected-result","text":"The policy must be applied to the agent (orb-agent API response) The container logs contain the message \"policy applied successfully\" referred to the policy The container logs contain the message \"scraped metrics for policy\" referred to the policy Datasets have validity valid First applied sink must stop to receive data after the edition Second applied sink must start to receive data after the edition","title":"Expected result:"},{"location":"integration/edit_agent_name_and_apply_policies_to_then.html","text":"Scenario: Edit agent name and apply policies to then Steps: Provision an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit agent name Expected result: Agent heartbeat must show just one group matching Agent logs must show that agent is subscribed to the group The container logs contain the message \"policy applied successfully\" referred to the policy applied to the second group The container logs that were output after all policies have been applied contains the message \"scraped metrics for policy\" referred to each applied policy","title":"Edit agent name and apply policies to then"},{"location":"integration/edit_agent_name_and_apply_policies_to_then.html#scenario-edit-agent-name-and-apply-policies-to-then","text":"","title":"Scenario: Edit agent name and apply policies to then"},{"location":"integration/edit_agent_name_and_apply_policies_to_then.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit agent name","title":"Steps:"},{"location":"integration/edit_agent_name_and_apply_policies_to_then.html#expected-result","text":"Agent heartbeat must show just one group matching Agent logs must show that agent is subscribed to the group The container logs contain the message \"policy applied successfully\" referred to the policy applied to the second group The container logs that were output after all policies have been applied contains the message \"scraped metrics for policy\" referred to each applied policy","title":"Expected result:"},{"location":"integration/insert_tags_in_agents_created_without_tags_and_apply_policies_to_group_matching_new_tags.html","text":"Scenario: Insert tags in agents created without tags and apply policies to group matching new tags Steps: Provision an agent without tags Create a group with tags Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit agent name and tags, using the same tag as the group Expected result: Agent heartbeat must show just one group matching Agent logs must show that agent is subscribed to the group The container logs contain the message \"policy applied successfully\" referred to the policy applied to the second group The container logs that were output after all policies have been applied contains the message \"scraped metrics for policy\" referred to each applied policy","title":"Insert tags in agents created without tags and apply policies to group matching new tags.md"},{"location":"integration/insert_tags_in_agents_created_without_tags_and_apply_policies_to_group_matching_new_tags.html#scenario-insert-tags-in-agents-created-without-tags-and-apply-policies-to-group-matching-new-tags","text":"","title":"Scenario: Insert tags in agents created without tags and apply policies to group matching new tags"},{"location":"integration/insert_tags_in_agents_created_without_tags_and_apply_policies_to_group_matching_new_tags.html#steps","text":"Provision an agent without tags Create a group with tags Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Edit agent name and tags, using the same tag as the group","title":"Steps:"},{"location":"integration/insert_tags_in_agents_created_without_tags_and_apply_policies_to_group_matching_new_tags.html#expected-result","text":"Agent heartbeat must show just one group matching Agent logs must show that agent is subscribed to the group The container logs contain the message \"policy applied successfully\" referred to the policy applied to the second group The container logs that were output after all policies have been applied contains the message \"scraped metrics for policy\" referred to each applied policy","title":"Expected result:"},{"location":"integration/multiple_agents_subscribed_to_a_group.html","text":"Scenario: multiple agents subscribed to a group Steps: Provision an agent with tags Provision another agent with same tags (use var env ORB_BACKENDS_PKTVISOR_API_PORT to change pktvisor port) Create a group with same tags as agents Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Expected result: The policy must be applied to both agents (orb-agent API response) The container logs contain the message \"policy applied successfully\" referred to the policy The container logs contain the message \"scraped metrics for policy\" referred to the policy Referred sink must have active state on response Dataset must have validity valid","title":"Provision agent with tag matching existing group linked to a valid dataset"},{"location":"integration/multiple_agents_subscribed_to_a_group.html#scenario-multiple-agents-subscribed-to-a-group","text":"","title":"Scenario: multiple agents subscribed to a group"},{"location":"integration/multiple_agents_subscribed_to_a_group.html#steps","text":"Provision an agent with tags Provision another agent with same tags (use var env ORB_BACKENDS_PKTVISOR_API_PORT to change pktvisor port) Create a group with same tags as agents Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy","title":"Steps:"},{"location":"integration/multiple_agents_subscribed_to_a_group.html#expected-result","text":"The policy must be applied to both agents (orb-agent API response) The container logs contain the message \"policy applied successfully\" referred to the policy The container logs contain the message \"scraped metrics for policy\" referred to the policy Referred sink must have active state on response Dataset must have validity valid","title":"Expected result:"},{"location":"integration/provision_agent_after_group.html","text":"Scenario: provision an agent after create an agent group Steps: Create a group with tags Provision an agent with same tags as group Expected result: The orb-agent container logs contain the message \"completed RPC subscription to group\" Group has one agent matching Agent status is online","title":"Provision agent after group (check if agent subscribes to the group)"},{"location":"integration/provision_agent_after_group.html#scenario-provision-an-agent-after-create-an-agent-group","text":"","title":"Scenario: provision an agent after create an agent group"},{"location":"integration/provision_agent_after_group.html#steps","text":"Create a group with tags Provision an agent with same tags as group","title":"Steps:"},{"location":"integration/provision_agent_after_group.html#expected-result","text":"The orb-agent container logs contain the message \"completed RPC subscription to group\" Group has one agent matching Agent status is online","title":"Expected result:"},{"location":"integration/provision_agent_before_group.html","text":"Scenario: provision an agent before create an agent group Steps: Provision an agent with tags Create a group with same tags as the agent Expected result: The orb-agent container logs contain the message \"completed RPC subscription to group\" Group has one agent matching Agent status is online","title":"Provision agent before group (check if agent subscribes to the group)"},{"location":"integration/provision_agent_before_group.html#scenario-provision-an-agent-before-create-an-agent-group","text":"","title":"Scenario: provision an agent before create an agent group"},{"location":"integration/provision_agent_before_group.html#steps","text":"Provision an agent with tags Create a group with same tags as the agent","title":"Steps:"},{"location":"integration/provision_agent_before_group.html#expected-result","text":"The orb-agent container logs contain the message \"completed RPC subscription to group\" Group has one agent matching Agent status is online","title":"Expected result:"},{"location":"integration/remove_agent.html","text":"Scenario: Remove agent Steps: Provision an agent with tags Create a group with same tags as agent Create a sink Create a policy Create a dataset linking the group, the sink and the policy Remove agent from orb Expected result: Orb-agent logs should not have any error Group must match 0 agents","title":"Remove agent (logs, agent groups matches)"},{"location":"integration/remove_agent.html#scenario-remove-agent","text":"","title":"Scenario: Remove agent"},{"location":"integration/remove_agent.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create a sink Create a policy Create a dataset linking the group, the sink and the policy Remove agent from orb","title":"Steps:"},{"location":"integration/remove_agent.html#expected-result","text":"Orb-agent logs should not have any error Group must match 0 agents","title":"Expected result:"},{"location":"integration/remove_agent_container.html","text":"Scenario: Remove agent container Steps: Provision an agent with tags Create a group with same tags as agent Create a sink Create a policy Create a dataset linking the group, the sink and the policy Stop and remove orb-agent container Expected result: The orb-agent container logs contain: {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:390\",\"msg\":\"pktvisor stopping\"} {\"l/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"Shutting down\"} {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"policy [policy_name]\": \"stopping\"} {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"policy [policy_name]\": \"stopping input instance: \"} {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"policy [policy_name]\": \"stopping handler instance: \"} {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"exit with success\"} Logs should not have any error","title":"Remove agent container (logs, agent groups matches)"},{"location":"integration/remove_agent_container.html#scenario-remove-agent-container","text":"","title":"Scenario: Remove agent container"},{"location":"integration/remove_agent_container.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create a sink Create a policy Create a dataset linking the group, the sink and the policy Stop and remove orb-agent container","title":"Steps:"},{"location":"integration/remove_agent_container.html#expected-result","text":"The orb-agent container logs contain: {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:390\",\"msg\":\"pktvisor stopping\"} {\"l/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"Shutting down\"} {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"policy [policy_name]\": \"stopping\"} {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"policy [policy_name]\": \"stopping input instance: \"} {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"policy [policy_name]\": \"stopping handler instance: \"} {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"exit with success\"} Logs should not have any error","title":"Expected result:"},{"location":"integration/remove_agent_container_force.html","text":"Scenario: Remove agent container without stop Steps: Provision an agent with tags Create a group with same tags as agent Create a sink Create a policy Create a dataset linking the group, the sink and the policy Remove orb-agent container Expected result: The orb-agent container logs contain: {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:390\",\"msg\":\"pktvisor stopping\"} {\"l/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"Shutting down\"} {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"policy [policy_name]\": \"stopping\"} {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"policy [policy_name]\": \"stopping input instance: \"} {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"policy [policy_name]\": \"stopping handler instance: \"} {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"exit with success\"} Logs should not have any error","title":"Remove agent container force (logs, agent groups matches)"},{"location":"integration/remove_agent_container_force.html#scenario-remove-agent-container-without-stop","text":"","title":"Scenario: Remove agent container without stop"},{"location":"integration/remove_agent_container_force.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create a sink Create a policy Create a dataset linking the group, the sink and the policy Remove orb-agent container","title":"Steps:"},{"location":"integration/remove_agent_container_force.html#expected-result","text":"The orb-agent container logs contain: {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:390\",\"msg\":\"pktvisor stopping\"} {\"l/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"Shutting down\"} {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"policy [policy_name]\": \"stopping\"} {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"policy [policy_name]\": \"stopping input instance: \"} {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"policy [policy_name]\": \"stopping handler instance: \"} {\"level\":\"info\",\"ts\":\"time\",\"caller\":\"pktvisor/pktvisor.go:253\",\"msg\":\"pktvisor stdout\",\"log\": \"exit with success\"} Logs should not have any error","title":"Expected result:"},{"location":"integration/remove_all_datasets.html","text":"Scenario: remove all datasets from an agent Steps: Provision an agent with tags Create a group with same tags as agent Create a sink Create 2 policies Create a dataset linking the group, the sink and one of the policies Create another dataset linking the same group, sink and the other policy Create third dataset applying one of the policies again Remove all datasets Expected result: The agent's heartbeat shows that 0 policies are applied Container logs should inform that removed policy was stopped and removed Container logs that were output after removing dataset does not contain the message \"scraped metrics for policy\" referred to deleted policies anymore","title":"Apply multiple policies to a group and remove all datasets"},{"location":"integration/remove_all_datasets.html#scenario-remove-all-datasets-from-an-agent","text":"","title":"Scenario: remove all datasets from an agent"},{"location":"integration/remove_all_datasets.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create a sink Create 2 policies Create a dataset linking the group, the sink and one of the policies Create another dataset linking the same group, sink and the other policy Create third dataset applying one of the policies again Remove all datasets","title":"Steps:"},{"location":"integration/remove_all_datasets.html#expected-result","text":"The agent's heartbeat shows that 0 policies are applied Container logs should inform that removed policy was stopped and removed Container logs that were output after removing dataset does not contain the message \"scraped metrics for policy\" referred to deleted policies anymore","title":"Expected result:"},{"location":"integration/remove_all_policies.html","text":"Scenario: remove all policies from an agent Steps: Provision an agent with tags Create a group with same tags as agent Create a sink Create 2 policies Create a dataset linking the group, the sink and one of the policies Create another dataset linking the same group, sink and the other policy Remove both policies Expected result: The agent's heartbeat shows that 0 policies are applied Container logs should inform that removed policy was stopped and removed Container logs that were output after removing policies does not contain the message \"scraped metrics for policy\" referred to deleted policies anymore Datasets became \"invalid\"","title":"Apply multiple policies to a group and remove all of them"},{"location":"integration/remove_all_policies.html#scenario-remove-all-policies-from-an-agent","text":"","title":"Scenario: remove all policies from an agent"},{"location":"integration/remove_all_policies.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create a sink Create 2 policies Create a dataset linking the group, the sink and one of the policies Create another dataset linking the same group, sink and the other policy Remove both policies","title":"Steps:"},{"location":"integration/remove_all_policies.html#expected-result","text":"The agent's heartbeat shows that 0 policies are applied Container logs should inform that removed policy was stopped and removed Container logs that were output after removing policies does not contain the message \"scraped metrics for policy\" referred to deleted policies anymore Datasets became \"invalid\"","title":"Expected result:"},{"location":"integration/remove_dataset.html","text":"Scenario: remove dataset from an agent Steps: Provision an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Remove the dataset Expected result: The agent's heartbeat shows that 0 policies are applied Container logs should inform that removed policy was stopped and removed Container logs that were output after removing dataset does not contain the message \"scraped metrics for policy\" referred to deleted policy anymore","title":"Remove dataset (check agent logs, heartbeat)"},{"location":"integration/remove_dataset.html#scenario-remove-dataset-from-an-agent","text":"","title":"Scenario: remove dataset from an agent"},{"location":"integration/remove_dataset.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Remove the dataset","title":"Steps:"},{"location":"integration/remove_dataset.html#expected-result","text":"The agent's heartbeat shows that 0 policies are applied Container logs should inform that removed policy was stopped and removed Container logs that were output after removing dataset does not contain the message \"scraped metrics for policy\" referred to deleted policy anymore","title":"Expected result:"},{"location":"integration/remove_group.html","text":"","title":"Remove group (invalid dataset, agent logs)"},{"location":"integration/remove_one_dataset_of_multiples_with_same_policy.html","text":"Scenario: remove one of multiple datasets with same policy Steps: Provision an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Create another dataset linking the same group and policy (sink can be the same or a different one) Remove one of the datasets Expected result: The agent's heartbeat shows that 1 policies are applied The orb agent container logs that were output after removing dataset contain the message \"scraped metrics for policy\" referred to the applied policy","title":"Remove one of multiples datasets that apply the same policy to the agent"},{"location":"integration/remove_one_dataset_of_multiples_with_same_policy.html#scenario-remove-one-of-multiple-datasets-with-same-policy","text":"","title":"Scenario: remove one of multiple datasets with same policy"},{"location":"integration/remove_one_dataset_of_multiples_with_same_policy.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and the policy Create another dataset linking the same group and policy (sink can be the same or a different one) Remove one of the datasets","title":"Steps:"},{"location":"integration/remove_one_dataset_of_multiples_with_same_policy.html#expected-result","text":"The agent's heartbeat shows that 1 policies are applied The orb agent container logs that were output after removing dataset contain the message \"scraped metrics for policy\" referred to the applied policy","title":"Expected result:"},{"location":"integration/remove_one_of_multiple_datasets.html","text":"Scenario: remove one of multiple datasets Steps: Provision an agent with tags Create a group with same tags as agent Create a sink Create 2 policies Create a dataset linking the group, the sink and one of the policies Create another dataset linking the same group, sink and the other policy Remove one of the datasets Expected result: The agent's heartbeat shows that 1 policies are applied The orb-agent container logs should inform that removed policy was stopped and removed The orb-agent container logs that were output after removing dataset contain the message \"scraped metrics for policy\" referred to applied policy The orb-agent container logs that were output after removing dataset does not contain the message \"scraped metrics for policy\" referred to deleted policy anymore","title":"Apply multiple policies to a group and remove one dataset"},{"location":"integration/remove_one_of_multiple_datasets.html#scenario-remove-one-of-multiple-datasets","text":"","title":"Scenario: remove one of multiple datasets"},{"location":"integration/remove_one_of_multiple_datasets.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create a sink Create 2 policies Create a dataset linking the group, the sink and one of the policies Create another dataset linking the same group, sink and the other policy Remove one of the datasets","title":"Steps:"},{"location":"integration/remove_one_of_multiple_datasets.html#expected-result","text":"The agent's heartbeat shows that 1 policies are applied The orb-agent container logs should inform that removed policy was stopped and removed The orb-agent container logs that were output after removing dataset contain the message \"scraped metrics for policy\" referred to applied policy The orb-agent container logs that were output after removing dataset does not contain the message \"scraped metrics for policy\" referred to deleted policy anymore","title":"Expected result:"},{"location":"integration/remove_one_of_multiple_policies.html","text":"Scenario: remove one of multiple policies from an agent Steps: Provision an agent with tags Create a group with same tags as agent Create a sink Create 2 policies Create a dataset linking the group, the sink and one of the policies Create another dataset linking the same group, sink and the other policy Remove 1 policy Expected result: The agent's heartbeat shows that 1 policies are applied Container logs should inform that removed policy was stopped and removed Container logs that were output after removing policies does not contain the message \"scraped metrics for policy\" referred to deleted policy anymore The orb agent container logs that were output after removing policy contain the message \"scraped metrics for policy\" referred to the remained policy Dataset referred to removed policy became \"invalid\" Dataset referred to remained policy remains \"valid\"","title":"Apply multiple policies to a group and remove one policy"},{"location":"integration/remove_one_of_multiple_policies.html#scenario-remove-one-of-multiple-policies-from-an-agent","text":"","title":"Scenario: remove one of multiple policies from an agent"},{"location":"integration/remove_one_of_multiple_policies.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create a sink Create 2 policies Create a dataset linking the group, the sink and one of the policies Create another dataset linking the same group, sink and the other policy Remove 1 policy","title":"Steps:"},{"location":"integration/remove_one_of_multiple_policies.html#expected-result","text":"The agent's heartbeat shows that 1 policies are applied Container logs should inform that removed policy was stopped and removed Container logs that were output after removing policies does not contain the message \"scraped metrics for policy\" referred to deleted policy anymore The orb agent container logs that were output after removing policy contain the message \"scraped metrics for policy\" referred to the remained policy Dataset referred to removed policy became \"invalid\" Dataset referred to remained policy remains \"valid\"","title":"Expected result:"},{"location":"integration/remove_policy.html","text":"Scenario: remove policy from an agent Steps: Provision an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and one of the policies Remove the policy Expected result: The agent's heartbeat shows that 0 policies are applied Container logs should inform that removed policy was stopped and removed Container logs that were output after removing policies does not contain the message \"scraped metrics for policy\" referred to deleted policy anymore Datasets became \"invalid\"","title":"Remove policy (invalid dataset, agent logs, heartbeat)"},{"location":"integration/remove_policy.html#scenario-remove-policy-from-an-agent","text":"","title":"Scenario: remove policy from an agent"},{"location":"integration/remove_policy.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and one of the policies Remove the policy","title":"Steps:"},{"location":"integration/remove_policy.html#expected-result","text":"The agent's heartbeat shows that 0 policies are applied Container logs should inform that removed policy was stopped and removed Container logs that were output after removing policies does not contain the message \"scraped metrics for policy\" referred to deleted policy anymore Datasets became \"invalid\"","title":"Expected result:"},{"location":"integration/remove_sink.html","text":"","title":"Remove sink (invalid dataset, agent logs)"},{"location":"integration/reset_agent_remotely.html","text":"Scenario: Reset agent remotely Agent with policies applied: Steps: Provision an orb-agent and apply 2 policies to them Restart the agent through a POST request on /agents/{agent_id}/rpc/reset endpoint Check the logs and agent's view page Expected Result: this agent's heartbeat shows that 2 policies are successfully applied and has status running the container logs should contain the message \"restarting all backends\" within 5 seconds the container logs that were output after reset the agent contain the message \"removing policies\" within 5 seconds the container logs that were output after reset the agent contain the message \"resetting backend\" within 5 seconds the container logs that were output after reset the agent contain the message \"pktvisor process stopped\" within 5 seconds the container logs that were output after reset the agent contain the message \"reapplying policies\" within 5 seconds the container logs that were output after reset the agent contain the message \"all backends were restarted\" within 5 seconds the container logs that were output after reset the agent contain the message \"completed RPC subscription to group\" within 10 seconds the container logs that were output after reset the agent contain the message \"policy applied successfully\" referred to each applied policy within 10 seconds the container logs that were output after reset the agent contain the message \"scraped metrics for policy\" referred to each applied policy within 180 seconds Agent without policies applied: Steps: Provision an agent and subscribe them to a group Restart the agent through a POST request on /agents/{agent_id}/rpc/reset endpoint Apply 2 policies to this agent Check the logs and agent's view page Expected Result: the container logs should contain the message \"restarting all backends\" within 5 seconds the container logs that were output after reset the agent contain the message \"resetting backend\" within 5 seconds the container logs that were output after reset the agent contain the message \"pktvisor process stopped\" within 5 seconds the container logs that were output after reset the agent contain the message \"reapplying policies\" within 5 seconds the container logs that were output after reset the agent contain the message \"all backends were restarted\" within 5 seconds the container logs that were output after reset the agent contain the message \"completed RPC subscription to group\" within 10 seconds the container logs that were output after reset the agent contain the message \"policy applied successfully\" referred to each applied policy within 10 seconds the container logs that were output after reset the agent contain the message \"scraped metrics for policy\" referred to each applied policy within 180 seconds this agent's heartbeat shows that 2 policies are successfully applied and has status running","title":"Reset agent remotely"},{"location":"integration/reset_agent_remotely.html#scenario-reset-agent-remotely","text":"","title":"Scenario: Reset agent remotely"},{"location":"integration/reset_agent_remotely.html#agent-with-policies-applied","text":"","title":"Agent with policies applied:"},{"location":"integration/reset_agent_remotely.html#steps","text":"Provision an orb-agent and apply 2 policies to them Restart the agent through a POST request on /agents/{agent_id}/rpc/reset endpoint Check the logs and agent's view page","title":"Steps:"},{"location":"integration/reset_agent_remotely.html#expected-result","text":"this agent's heartbeat shows that 2 policies are successfully applied and has status running the container logs should contain the message \"restarting all backends\" within 5 seconds the container logs that were output after reset the agent contain the message \"removing policies\" within 5 seconds the container logs that were output after reset the agent contain the message \"resetting backend\" within 5 seconds the container logs that were output after reset the agent contain the message \"pktvisor process stopped\" within 5 seconds the container logs that were output after reset the agent contain the message \"reapplying policies\" within 5 seconds the container logs that were output after reset the agent contain the message \"all backends were restarted\" within 5 seconds the container logs that were output after reset the agent contain the message \"completed RPC subscription to group\" within 10 seconds the container logs that were output after reset the agent contain the message \"policy applied successfully\" referred to each applied policy within 10 seconds the container logs that were output after reset the agent contain the message \"scraped metrics for policy\" referred to each applied policy within 180 seconds","title":"Expected Result:"},{"location":"integration/reset_agent_remotely.html#agent-without-policies-applied","text":"","title":"Agent without policies applied:"},{"location":"integration/reset_agent_remotely.html#steps_1","text":"Provision an agent and subscribe them to a group Restart the agent through a POST request on /agents/{agent_id}/rpc/reset endpoint Apply 2 policies to this agent Check the logs and agent's view page","title":"Steps:"},{"location":"integration/reset_agent_remotely.html#expected-result_1","text":"the container logs should contain the message \"restarting all backends\" within 5 seconds the container logs that were output after reset the agent contain the message \"resetting backend\" within 5 seconds the container logs that were output after reset the agent contain the message \"pktvisor process stopped\" within 5 seconds the container logs that were output after reset the agent contain the message \"reapplying policies\" within 5 seconds the container logs that were output after reset the agent contain the message \"all backends were restarted\" within 5 seconds the container logs that were output after reset the agent contain the message \"completed RPC subscription to group\" within 10 seconds the container logs that were output after reset the agent contain the message \"policy applied successfully\" referred to each applied policy within 10 seconds the container logs that were output after reset the agent contain the message \"scraped metrics for policy\" referred to each applied policy within 180 seconds this agent's heartbeat shows that 2 policies are successfully applied and has status running","title":"Expected Result:"},{"location":"integration/sink_active_while_scraping_metrics.html","text":"Scenario: sink has active status while scraping metrics Steps: Provision an agent with tags Create a group with same tags as agent Create a sink with valid credentials Create 1 policy Create a dataset linking the group, the sink and one of the policies Wait 1 minute Expected result: The container logs contain the message \"scraped metrics for policy\" referred to the applied policy Sink status must be \"active\" Advanced Scenario: sink has active status while scraping metrics Steps: Provision an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and one of the policies Keep sending data for 24 hours Expected result: The container logs contain the message \"scraped metrics for policy\" referred to the applied policy Check if even after this time, sink status remains active","title":"Check if sink is active while scraping metrics"},{"location":"integration/sink_active_while_scraping_metrics.html#scenario-sink-has-active-status-while-scraping-metrics","text":"","title":"Scenario: sink has active status while scraping metrics"},{"location":"integration/sink_active_while_scraping_metrics.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create a sink with valid credentials Create 1 policy Create a dataset linking the group, the sink and one of the policies Wait 1 minute","title":"Steps:"},{"location":"integration/sink_active_while_scraping_metrics.html#expected-result","text":"The container logs contain the message \"scraped metrics for policy\" referred to the applied policy Sink status must be \"active\"","title":"Expected result:"},{"location":"integration/sink_active_while_scraping_metrics.html#_1","text":"","title":""},{"location":"integration/sink_active_while_scraping_metrics.html#advanced-scenario-sink-has-active-status-while-scraping-metrics","text":"","title":"Advanced Scenario: sink has active status while scraping metrics"},{"location":"integration/sink_active_while_scraping_metrics.html#steps_1","text":"Provision an agent with tags Create a group with same tags as agent Create a sink Create 1 policy Create a dataset linking the group, the sink and one of the policies Keep sending data for 24 hours","title":"Steps:"},{"location":"integration/sink_active_while_scraping_metrics.html#expected-result_1","text":"The container logs contain the message \"scraped metrics for policy\" referred to the applied policy Check if even after this time, sink status remains active","title":"Expected result:"},{"location":"integration/sink_error_invalid_credentials.html","text":"Scenario: sink has error status if credentials are invalid Steps: Provision an agent with tags Create a group with same tags as agent Create a sink with invalid credentials Create 1 policy Create a dataset linking the group, the sink and one of the policies Wait 1 minute Expected result: The container logs contain the message \"scraped metrics for policy\" referred to the applied policy Sink status must be \"error\"","title":"Check if sink with invalid credentials becomes active"},{"location":"integration/sink_error_invalid_credentials.html#scenario-sink-has-error-status-if-credentials-are-invalid","text":"","title":"Scenario: sink has error status if credentials are invalid"},{"location":"integration/sink_error_invalid_credentials.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create a sink with invalid credentials Create 1 policy Create a dataset linking the group, the sink and one of the policies Wait 1 minute","title":"Steps:"},{"location":"integration/sink_error_invalid_credentials.html#expected-result","text":"The container logs contain the message \"scraped metrics for policy\" referred to the applied policy Sink status must be \"error\"","title":"Expected result:"},{"location":"integration/sink_idle_30_minutes.html","text":"Scenario: sink has idle status after 30 minutes without data Steps: Provision an agent with tags Create a group with same tags as agent Create a sink with invalid credentials Create 1 policy Create a dataset linking the group, the sink and one of the policies Wait 1 minute Remove the dataset to which sink is linked Wait 30 minutes Expected result: Sink status must be \"idle\"","title":"Check if after 30 minutes without data sink becomes idle"},{"location":"integration/sink_idle_30_minutes.html#scenario-sink-has-idle-status-after-30-minutes-without-data","text":"","title":"Scenario: sink has idle status after 30 minutes without data"},{"location":"integration/sink_idle_30_minutes.html#steps","text":"Provision an agent with tags Create a group with same tags as agent Create a sink with invalid credentials Create 1 policy Create a dataset linking the group, the sink and one of the policies Wait 1 minute Remove the dataset to which sink is linked Wait 30 minutes","title":"Steps:"},{"location":"integration/sink_idle_30_minutes.html#expected-result","text":"Sink status must be \"idle\"","title":"Expected result:"},{"location":"integration/subscribe_an_agent_to_multiple_groups_created_after_agent_provisioning.html","text":"Scenario: Subscribe an agent to multiple groups created after agent provisioning Steps: Provision an agent with tags Create a group with at least one tag equal to agent Create another group with at least one tag equal to agent Check agent's logs and agent's heartbeat Expected Result: 1 - Logs must display the message \"completed RPC subscription to group\" referred to both groups 2 - Agent's heartbeat must have 2 groups linked","title":"Subscribe an agent to multiple groups created after agent provisioning"},{"location":"integration/subscribe_an_agent_to_multiple_groups_created_after_agent_provisioning.html#scenario-subscribe-an-agent-to-multiple-groups-created-after-agent-provisioning","text":"","title":"Scenario: Subscribe an agent to multiple groups created after agent provisioning"},{"location":"integration/subscribe_an_agent_to_multiple_groups_created_after_agent_provisioning.html#steps","text":"Provision an agent with tags Create a group with at least one tag equal to agent Create another group with at least one tag equal to agent Check agent's logs and agent's heartbeat","title":"Steps:"},{"location":"integration/subscribe_an_agent_to_multiple_groups_created_after_agent_provisioning.html#expected-result","text":"1 - Logs must display the message \"completed RPC subscription to group\" referred to both groups 2 - Agent's heartbeat must have 2 groups linked","title":"Expected Result:"},{"location":"integration/subscribe_an_agent_to_multiple_groups_created_before_agent_provisioning.html","text":"Scenario: Subscribe an agent to multiple groups created before agent provisioning Steps: Create a group with one tag Create another group with 2 tags Provision an agent with the same tags as the two groups Check agent's logs and agent's heartbeat Expected Result: 1 - Logs must display the message \"completed RPC subscription to group\" referred to both groups 2 - Agent's heartbeat must have 2 groups linked","title":"Subscribe an agent to multiple groups created before agent provisioning"},{"location":"integration/subscribe_an_agent_to_multiple_groups_created_before_agent_provisioning.html#scenario-subscribe-an-agent-to-multiple-groups-created-before-agent-provisioning","text":"","title":"Scenario: Subscribe an agent to multiple groups created before agent provisioning"},{"location":"integration/subscribe_an_agent_to_multiple_groups_created_before_agent_provisioning.html#steps","text":"Create a group with one tag Create another group with 2 tags Provision an agent with the same tags as the two groups Check agent's logs and agent's heartbeat","title":"Steps:"},{"location":"integration/subscribe_an_agent_to_multiple_groups_created_before_agent_provisioning.html#expected-result","text":"1 - Logs must display the message \"completed RPC subscription to group\" referred to both groups 2 - Agent's heartbeat must have 2 groups linked","title":"Expected Result:"},{"location":"login/check_if_email_and_password_are_required_fields.html","text":"Scenario: Check if email and password are required fields Sub Scenarios: I - Check if email is a required field Steps: 1 - Request an account registration without email field REST API Method: POST endpoint: /users body: {\"password\":\"password\", \"metadata\":{\"company\":\"company\",\"fullName\":\"name\"}} Expected Result: The request must fail with bad request (error 400) and no account must be registered II - Check if password is a required field Steps: 1- Request an account registration without password field REST API Method: POST endpoint: /users body: {\"email\":\"email\", \"metadata\":{\"company\":\"company\",\"fullName\":\"name\"}} Expected Result: The request must fail with bad request (error 400) and no account must be registered III - Check if password and email are required fields Steps: 1 - Request an account registration using just metadata REST API Method: POST endpoint: /users body: {\"metadata\":{\"company\":\"company\",\"fullName\":\"name\"}} Expected Result: The request must fail with bad request (error 400) and no account must be registered","title":"Check if email and password are required fields"},{"location":"login/check_if_email_and_password_are_required_fields.html#scenario-check-if-email-and-password-are-required-fields","text":"","title":"Scenario: Check if email and password are required fields"},{"location":"login/check_if_email_and_password_are_required_fields.html#sub-scenarios","text":"","title":"Sub Scenarios:"},{"location":"login/check_if_email_and_password_are_required_fields.html#i-check-if-email-is-a-required-field","text":"","title":"I - Check if email is a required field"},{"location":"login/check_if_email_and_password_are_required_fields.html#steps","text":"1 - Request an account registration without email field REST API Method: POST endpoint: /users body: {\"password\":\"password\", \"metadata\":{\"company\":\"company\",\"fullName\":\"name\"}}","title":"Steps:"},{"location":"login/check_if_email_and_password_are_required_fields.html#expected-result","text":"The request must fail with bad request (error 400) and no account must be registered","title":"Expected Result:"},{"location":"login/check_if_email_and_password_are_required_fields.html#ii-check-if-password-is-a-required-field","text":"","title":"II - Check if password is a required field"},{"location":"login/check_if_email_and_password_are_required_fields.html#steps_1","text":"1- Request an account registration without password field REST API Method: POST endpoint: /users body: {\"email\":\"email\", \"metadata\":{\"company\":\"company\",\"fullName\":\"name\"}}","title":"Steps:"},{"location":"login/check_if_email_and_password_are_required_fields.html#expected-result_1","text":"The request must fail with bad request (error 400) and no account must be registered","title":"Expected Result:"},{"location":"login/check_if_email_and_password_are_required_fields.html#iii-check-if-password-and-email-are-required-fields","text":"","title":"III - Check if password and email are required fields"},{"location":"login/check_if_email_and_password_are_required_fields.html#steps_2","text":"1 - Request an account registration using just metadata REST API Method: POST endpoint: /users body: {\"metadata\":{\"company\":\"company\",\"fullName\":\"name\"}}","title":"Steps:"},{"location":"login/check_if_email_and_password_are_required_fields.html#expected-result_2","text":"The request must fail with bad request (error 400) and no account must be registered","title":"Expected Result:"},{"location":"login/login_with_invalid_credentials.html","text":"Scenario: Login with invalid credentials Sub Scenarios: I - Login with invalid email Steps: 1- Request authentication token using unregistered email and some registered password REST API Method: POST endpoint: /tokens body: {\"email\": \"invalid_email\", \"password\": \"password\"} Expected Result: The request must fail with forbidden (error 403) and no token must be generated II - Login with invalid password Steps: 1- Request authentication token using registered email and wrong password REST API Method: POST endpoint: /tokens body: {\"email\": \"email\", \"password\": \"wrong_password\"} Expected Result: The request must fail with forbidden (error 403) and no token must be generated III - Login with invalid email and invalid password Steps: 1- Request authentication token using unregistered email and unregistered password REST API Method: POST endpoint: /tokens body: {\"email\": \"invalid_email\", \"password\": \"invalid_password\"} Expected Result: The request must fail with forbidden (error 403) and no token must be generated","title":"Login with invalid credentials"},{"location":"login/login_with_invalid_credentials.html#scenario-login-with-invalid-credentials","text":"","title":"Scenario: Login with invalid credentials"},{"location":"login/login_with_invalid_credentials.html#sub-scenarios","text":"","title":"Sub Scenarios:"},{"location":"login/login_with_invalid_credentials.html#i-login-with-invalid-email","text":"","title":"I - Login with invalid email"},{"location":"login/login_with_invalid_credentials.html#steps","text":"1- Request authentication token using unregistered email and some registered password REST API Method: POST endpoint: /tokens body: {\"email\": \"invalid_email\", \"password\": \"password\"}","title":"Steps:"},{"location":"login/login_with_invalid_credentials.html#expected-result","text":"The request must fail with forbidden (error 403) and no token must be generated","title":"Expected Result:"},{"location":"login/login_with_invalid_credentials.html#ii-login-with-invalid-password","text":"","title":"II - Login with invalid password"},{"location":"login/login_with_invalid_credentials.html#steps_1","text":"1- Request authentication token using registered email and wrong password REST API Method: POST endpoint: /tokens body: {\"email\": \"email\", \"password\": \"wrong_password\"}","title":"Steps:"},{"location":"login/login_with_invalid_credentials.html#expected-result_1","text":"The request must fail with forbidden (error 403) and no token must be generated","title":"Expected Result:"},{"location":"login/login_with_invalid_credentials.html#iii-login-with-invalid-email-and-invalid-password","text":"","title":"III - Login with invalid email and invalid password"},{"location":"login/login_with_invalid_credentials.html#steps_2","text":"1- Request authentication token using unregistered email and unregistered password REST API Method: POST endpoint: /tokens body: {\"email\": \"invalid_email\", \"password\": \"invalid_password\"}","title":"Steps:"},{"location":"login/login_with_invalid_credentials.html#expected-result_2","text":"The request must fail with forbidden (error 403) and no token must be generated","title":"Expected Result:"},{"location":"login/login_with_valid_credentials.html","text":"Scenario: Login with valid credentials Steps: 1- Request authentication token using registered email referred password REST API Method: POST endpoint: /tokens body: {\"email\": \"email\", \"password\": \"password\"} Expected Result: Status code must be 200 and a token must be returned on response","title":"Login with valid credentials"},{"location":"login/login_with_valid_credentials.html#scenario-login-with-valid-credentials","text":"","title":"Scenario: Login with valid credentials"},{"location":"login/login_with_valid_credentials.html#steps","text":"1- Request authentication token using registered email referred password REST API Method: POST endpoint: /tokens body: {\"email\": \"email\", \"password\": \"password\"}","title":"Steps:"},{"location":"login/login_with_valid_credentials.html#expected-result","text":"Status code must be 200 and a token must be returned on response","title":"Expected Result:"},{"location":"login/request_password_with_registered_email_address.html","text":"Scenario: Request password with registered email address Steps: 1- On Orb auth page ( http://localhost/auth/login ) click in \"Forgot Password?\" 2- On Orb request password page ( https://orb.live/auth/request-password ) insert a registered email on \"Email address\" field 3- Click on \"REQUEST PASSWORD\" button Expected Result: UI must inform that an email was sent to enable user to change the password User must receive an email with valid link to reset account password","title":"Request password with registered email address"},{"location":"login/request_password_with_registered_email_address.html#scenario-request-password-with-registered-email-address","text":"","title":"Scenario: Request password with registered email address"},{"location":"login/request_password_with_registered_email_address.html#steps","text":"1- On Orb auth page ( http://localhost/auth/login ) click in \"Forgot Password?\" 2- On Orb request password page ( https://orb.live/auth/request-password ) insert a registered email on \"Email address\" field 3- Click on \"REQUEST PASSWORD\" button","title":"Steps:"},{"location":"login/request_password_with_registered_email_address.html#expected-result","text":"UI must inform that an email was sent to enable user to change the password User must receive an email with valid link to reset account password","title":"Expected Result:"},{"location":"login/request_password_with_unregistered_email_address.html","text":"Scenario: Request password with unregistered email address Steps: 1- On Orb auth page ( http://localhost/auth/login ) click in \"Forgot Password?\" 2- On Orb request password page ( https://orb.live/auth/request-password ) insert a unregistered email on \"Email address\" field 3- Click on \"REQUEST PASSWORD\" button Expected Result: UI must inform that an error has occurred No email must be sent","title":"Request password with unregistered email address"},{"location":"login/request_password_with_unregistered_email_address.html#scenario-request-password-with-unregistered-email-address","text":"","title":"Scenario: Request password with unregistered email address"},{"location":"login/request_password_with_unregistered_email_address.html#steps","text":"1- On Orb auth page ( http://localhost/auth/login ) click in \"Forgot Password?\" 2- On Orb request password page ( https://orb.live/auth/request-password ) insert a unregistered email on \"Email address\" field 3- Click on \"REQUEST PASSWORD\" button","title":"Steps:"},{"location":"login/request_password_with_unregistered_email_address.html#expected-result","text":"UI must inform that an error has occurred No email must be sent","title":"Expected Result:"},{"location":"login/request_registration_of_a_registered_account_using_registered_password.html","text":"Scenario: Request registration of a registered account using registered password Steps: 1 - Request an account registration using an already registered email and same registered password REST API Method: POST endpoint: /users body: {\"email\":\"already_registered_email\", \"password\":\"registered_password\"} Expected Result: The request must fail with conflict (error 409), response message must be \"email already taken\" No changes should be made to the previously registered account (name, company and password must be the ones registered for the first time)","title":"Request registration of a registered account using registered password"},{"location":"login/request_registration_of_a_registered_account_using_registered_password.html#scenario-request-registration-of-a-registered-account-using-registered-password","text":"","title":"Scenario: Request registration of a registered account using registered password"},{"location":"login/request_registration_of_a_registered_account_using_registered_password.html#steps","text":"1 - Request an account registration using an already registered email and same registered password REST API Method: POST endpoint: /users body: {\"email\":\"already_registered_email\", \"password\":\"registered_password\"}","title":"Steps:"},{"location":"login/request_registration_of_a_registered_account_using_registered_password.html#expected-result","text":"The request must fail with conflict (error 409), response message must be \"email already taken\" No changes should be made to the previously registered account (name, company and password must be the ones registered for the first time)","title":"Expected Result:"},{"location":"login/request_registration_of_a_registered_account_using_registered_password_and_company.html","text":"Scenario: Request registration of a registered account using registered password and company Steps: 1 - Request an account registration using an already registered email, same registered password and company field filled REST API Method: POST endpoint: /users body: {\"email\":\"already_registered_email\", \"password\":\"registered_password\", \"metadata\":{\"company\":\"company\"}} Expected Result: The request must fail with conflict (error 409), response message must be \"email already taken\" No changes should be made to the previously registered account (name, company and password must be the ones registered for the first time)","title":"Request registration of a registered account using registered password and company"},{"location":"login/request_registration_of_a_registered_account_using_registered_password_and_company.html#scenario-request-registration-of-a-registered-account-using-registered-password-and-company","text":"","title":"Scenario: Request registration of a registered account using registered password and company"},{"location":"login/request_registration_of_a_registered_account_using_registered_password_and_company.html#steps","text":"1 - Request an account registration using an already registered email, same registered password and company field filled REST API Method: POST endpoint: /users body: {\"email\":\"already_registered_email\", \"password\":\"registered_password\", \"metadata\":{\"company\":\"company\"}}","title":"Steps:"},{"location":"login/request_registration_of_a_registered_account_using_registered_password_and_company.html#expected-result","text":"The request must fail with conflict (error 409), response message must be \"email already taken\" No changes should be made to the previously registered account (name, company and password must be the ones registered for the first time)","title":"Expected Result:"},{"location":"login/request_registration_of_a_registered_account_using_registered_password_and_username.html","text":"Scenario: Request registration of a registered account using registered password and username Steps: 1 - Request an account registration using an already registered email, same registered password and fullname field filled REST API Method: POST endpoint: /users body: {\"email\":\"already_registered_email\", \"password\":\"registered_password\", \"metadata\":{\"fullName\":\"name\"}} Expected Result: The request must fail with conflict (error 409), response message must be \"email already taken\" No changes should be made to the previously registered account (name, company and password must be the ones registered for the first time)","title":"Request registration of a registered account using registered password and username"},{"location":"login/request_registration_of_a_registered_account_using_registered_password_and_username.html#scenario-request-registration-of-a-registered-account-using-registered-password-and-username","text":"","title":"Scenario: Request registration of a registered account using registered password and username"},{"location":"login/request_registration_of_a_registered_account_using_registered_password_and_username.html#steps","text":"1 - Request an account registration using an already registered email, same registered password and fullname field filled REST API Method: POST endpoint: /users body: {\"email\":\"already_registered_email\", \"password\":\"registered_password\", \"metadata\":{\"fullName\":\"name\"}}","title":"Steps:"},{"location":"login/request_registration_of_a_registered_account_using_registered_password_and_username.html#expected-result","text":"The request must fail with conflict (error 409), response message must be \"email already taken\" No changes should be made to the previously registered account (name, company and password must be the ones registered for the first time)","title":"Expected Result:"},{"location":"login/request_registration_of_a_registered_account_using_registered_password_username_and_company.html","text":"Scenario: Request registration of a registered account using registered password, username and company Steps: 1 - Request an account registration using an already registered email, registered password and fullname and company field filled REST API Method: POST endpoint: /users body: {\"email\":\"already_registered_email\", \"password\":\"registered_password\", \"metadata\":{\"company\":\"company\",\"fullName\":\"name\"}} Expected Result: The request must fail with conflict (error 409), response message must be \"email already taken\" No changes should be made to the previously registered account (name, company and password must be the ones registered for the first time)","title":"Request registration of a registered account using registered password username and company"},{"location":"login/request_registration_of_a_registered_account_using_registered_password_username_and_company.html#scenario-request-registration-of-a-registered-account-using-registered-password-username-and-company","text":"","title":"Scenario: Request registration of a registered account using registered password, username and company"},{"location":"login/request_registration_of_a_registered_account_using_registered_password_username_and_company.html#steps","text":"1 - Request an account registration using an already registered email, registered password and fullname and company field filled REST API Method: POST endpoint: /users body: {\"email\":\"already_registered_email\", \"password\":\"registered_password\", \"metadata\":{\"company\":\"company\",\"fullName\":\"name\"}}","title":"Steps:"},{"location":"login/request_registration_of_a_registered_account_using_registered_password_username_and_company.html#expected-result","text":"The request must fail with conflict (error 409), response message must be \"email already taken\" No changes should be made to the previously registered account (name, company and password must be the ones registered for the first time)","title":"Expected Result:"},{"location":"login/request_registration_of_a_registered_account_using_unregistered_password.html","text":"Scenario: Request registration of a registered account using unregistered password Steps: 1 - Request an account registration using an already registered email and password different from registered REST API Method: POST endpoint: /users body: {\"email\":\"already_registered_email\", \"password\":\"unregistered_password\"} Expected Result: The request must fail with conflict (error 409), response message must be \"email already taken\" No changes should be made to the previously registered account (name, company and password must be the ones registered for the first time and the new password should not give access to the account)","title":"Request registration of a registered account using unregistered password"},{"location":"login/request_registration_of_a_registered_account_using_unregistered_password.html#scenario-request-registration-of-a-registered-account-using-unregistered-password","text":"","title":"Scenario: Request registration of a registered account using unregistered password"},{"location":"login/request_registration_of_a_registered_account_using_unregistered_password.html#steps","text":"1 - Request an account registration using an already registered email and password different from registered REST API Method: POST endpoint: /users body: {\"email\":\"already_registered_email\", \"password\":\"unregistered_password\"}","title":"Steps:"},{"location":"login/request_registration_of_a_registered_account_using_unregistered_password.html#expected-result","text":"The request must fail with conflict (error 409), response message must be \"email already taken\" No changes should be made to the previously registered account (name, company and password must be the ones registered for the first time and the new password should not give access to the account)","title":"Expected Result:"},{"location":"login/request_registration_of_a_registered_account_using_unregistered_password_and_company.html","text":"Scenario: Request registration of a registered account using unregistered password and company Steps: 1 - Request an account registration using an already registered email, password different from registered and company field filled REST API Method: POST endpoint: /users body: {\"email\":\"already_registered_email\", \"password\":\"unregistered_password\", \"metadata\":{\"company\":\"company\"}} Expected Result: The request must fail with conflict (error 409), response message must be \"email already taken\" No changes should be made to the previously registered account (name, company and password must be the ones registered for the first time and the new password should not give access to the account)","title":"Request registration of a registered account using unregistered password and company"},{"location":"login/request_registration_of_a_registered_account_using_unregistered_password_and_company.html#scenario-request-registration-of-a-registered-account-using-unregistered-password-and-company","text":"","title":"Scenario: Request registration of a registered account using unregistered password and company"},{"location":"login/request_registration_of_a_registered_account_using_unregistered_password_and_company.html#steps","text":"1 - Request an account registration using an already registered email, password different from registered and company field filled REST API Method: POST endpoint: /users body: {\"email\":\"already_registered_email\", \"password\":\"unregistered_password\", \"metadata\":{\"company\":\"company\"}}","title":"Steps:"},{"location":"login/request_registration_of_a_registered_account_using_unregistered_password_and_company.html#expected-result","text":"The request must fail with conflict (error 409), response message must be \"email already taken\" No changes should be made to the previously registered account (name, company and password must be the ones registered for the first time and the new password should not give access to the account)","title":"Expected Result:"},{"location":"login/request_registration_of_a_registered_account_using_unregistered_password_and_username.html","text":"Scenario: Request registration of a registered account using unregistered password and username Steps: 1 - Request an account registration using an already registered email, password different from registered and fullname field filled REST API Method: POST endpoint: /users body: {\"email\":\"already_registered_email\", \"password\":\"unregistered_password\", \"metadata\":{\"fullName\":\"name\"}} Expected Result: The request must fail with conflict (error 409), response message must be \"email already taken\" No changes should be made to the previously registered account (name, company and password must be the ones registered for the first time and the new password should not give access to the account )","title":"Request registration of a registered account using unregistered password and username"},{"location":"login/request_registration_of_a_registered_account_using_unregistered_password_and_username.html#scenario-request-registration-of-a-registered-account-using-unregistered-password-and-username","text":"","title":"Scenario: Request registration of a registered account using unregistered password and username"},{"location":"login/request_registration_of_a_registered_account_using_unregistered_password_and_username.html#steps","text":"1 - Request an account registration using an already registered email, password different from registered and fullname field filled REST API Method: POST endpoint: /users body: {\"email\":\"already_registered_email\", \"password\":\"unregistered_password\", \"metadata\":{\"fullName\":\"name\"}}","title":"Steps:"},{"location":"login/request_registration_of_a_registered_account_using_unregistered_password_and_username.html#expected-result","text":"The request must fail with conflict (error 409), response message must be \"email already taken\" No changes should be made to the previously registered account (name, company and password must be the ones registered for the first time and the new password should not give access to the account )","title":"Expected Result:"},{"location":"login/request_registration_of_a_registered_account_using_unregistered_password_username_and_company.html","text":"Scenario: Request registration of a registered account using unregistered password, username and company Steps: 1 - Request an account registration using an already registered email, unregistered password and fullname and company field filled REST API Method: POST endpoint: /users body: {\"email\":\"already_registered_email\", \"password\":\"unregistered_password\", \"metadata\":{\"company\":\"company\",\"fullName\":\"name\"}} Expected Result: The request must fail with conflict (error 409), response message must be \"email already taken\" No changes should be made to the previously registered account (name, company and password must be the ones registered for the first time and the new password should not give access to the account)","title":"Request registration of a registered account using unregistered password username and company"},{"location":"login/request_registration_of_a_registered_account_using_unregistered_password_username_and_company.html#scenario-request-registration-of-a-registered-account-using-unregistered-password-username-and-company","text":"","title":"Scenario: Request registration of a registered account using unregistered password, username and company"},{"location":"login/request_registration_of_a_registered_account_using_unregistered_password_username_and_company.html#steps","text":"1 - Request an account registration using an already registered email, unregistered password and fullname and company field filled REST API Method: POST endpoint: /users body: {\"email\":\"already_registered_email\", \"password\":\"unregistered_password\", \"metadata\":{\"company\":\"company\",\"fullName\":\"name\"}}","title":"Steps:"},{"location":"login/request_registration_of_a_registered_account_using_unregistered_password_username_and_company.html#expected-result","text":"The request must fail with conflict (error 409), response message must be \"email already taken\" No changes should be made to the previously registered account (name, company and password must be the ones registered for the first time and the new password should not give access to the account)","title":"Expected Result:"},{"location":"login/request_registration_of_an_unregistered_account_with_invalid_password_and_invalid_email.html","text":"Scenario: Request registration of an unregistered account with invalid password and invalid email Steps: 1 - Request an account registration using an email without @server and password with length less than 8 REST API Method: POST endpoint: /users body: {\"email\":\"invalid_email\", \"password\":\"invalid_password\"} Expected Result: The request must fail with bad request (error 400) No account must be registered","title":"Request registration of an unregistered account with invalid password and invalid email"},{"location":"login/request_registration_of_an_unregistered_account_with_invalid_password_and_invalid_email.html#scenario-request-registration-of-an-unregistered-account-with-invalid-password-and-invalid-email","text":"","title":"Scenario: Request registration of an unregistered account with invalid password and invalid email"},{"location":"login/request_registration_of_an_unregistered_account_with_invalid_password_and_invalid_email.html#steps","text":"1 - Request an account registration using an email without @server and password with length less than 8 REST API Method: POST endpoint: /users body: {\"email\":\"invalid_email\", \"password\":\"invalid_password\"}","title":"Steps:"},{"location":"login/request_registration_of_an_unregistered_account_with_invalid_password_and_invalid_email.html#expected-result","text":"The request must fail with bad request (error 400) No account must be registered","title":"Expected Result:"},{"location":"login/request_registration_of_an_unregistered_account_with_invalid_password_and_valid_email.html","text":"Scenario: Request registration of an unregistered account with invalid password and valid email Steps: 1 - Request an account registration using a valid email and password with length less than 8 REST API Method: POST endpoint: /users body: {\"email\":\"email\", \"password\":\"invalid_password\"} Expected Result: The request must fail with bad request (error 400) and response message must be \"password does not meet the requirements\" No account must be registered","title":"Request registration of an unregistered account with invalid password and valid email"},{"location":"login/request_registration_of_an_unregistered_account_with_invalid_password_and_valid_email.html#scenario-request-registration-of-an-unregistered-account-with-invalid-password-and-valid-email","text":"","title":"Scenario: Request registration of an unregistered account with invalid password and valid email"},{"location":"login/request_registration_of_an_unregistered_account_with_invalid_password_and_valid_email.html#steps","text":"1 - Request an account registration using a valid email and password with length less than 8 REST API Method: POST endpoint: /users body: {\"email\":\"email\", \"password\":\"invalid_password\"}","title":"Steps:"},{"location":"login/request_registration_of_an_unregistered_account_with_invalid_password_and_valid_email.html#expected-result","text":"The request must fail with bad request (error 400) and response message must be \"password does not meet the requirements\" No account must be registered","title":"Expected Result:"},{"location":"login/request_registration_of_an_unregistered_account_with_valid_password_and_invalid_email.html","text":"Scenario: Request registration of an unregistered account with valid password and invalid email Steps: 1 - Request an account registration using an email without @server and password with length greater than or equal to 8 REST API Method: POST endpoint: /users body: {\"email\":\"invalid_email\", \"password\":\"password\"} Expected Result: The request must fail with bad request (error 400) No account must be registered","title":"Request registration of an unregistered account with valid password and invalid email"},{"location":"login/request_registration_of_an_unregistered_account_with_valid_password_and_invalid_email.html#scenario-request-registration-of-an-unregistered-account-with-valid-password-and-invalid-email","text":"","title":"Scenario: Request registration of an unregistered account with valid password and invalid email"},{"location":"login/request_registration_of_an_unregistered_account_with_valid_password_and_invalid_email.html#steps","text":"1 - Request an account registration using an email without @server and password with length greater than or equal to 8 REST API Method: POST endpoint: /users body: {\"email\":\"invalid_email\", \"password\":\"password\"}","title":"Steps:"},{"location":"login/request_registration_of_an_unregistered_account_with_valid_password_and_invalid_email.html#expected-result","text":"The request must fail with bad request (error 400) No account must be registered","title":"Expected Result:"},{"location":"login/request_registration_of_an_unregistered_account_with_valid_password_and_valid_email.html","text":"Scenario: Request registration of an unregistered account with valid password and valid email Steps: 1 - Request an account registration using a valid email and valid password REST API Method: POST endpoint: /users body: {\"email\":\"email\", \"password\":\"password\"} Expected Result: The request must be processed successfully (status code 201) The new account must be registered User must be able to access orb using email and password registered","title":"Request registration of an unregistered account with valid password and valid email"},{"location":"login/request_registration_of_an_unregistered_account_with_valid_password_and_valid_email.html#scenario-request-registration-of-an-unregistered-account-with-valid-password-and-valid-email","text":"","title":"Scenario: Request registration of an unregistered account with valid password and valid email"},{"location":"login/request_registration_of_an_unregistered_account_with_valid_password_and_valid_email.html#steps","text":"1 - Request an account registration using a valid email and valid password REST API Method: POST endpoint: /users body: {\"email\":\"email\", \"password\":\"password\"}","title":"Steps:"},{"location":"login/request_registration_of_an_unregistered_account_with_valid_password_and_valid_email.html#expected-result","text":"The request must be processed successfully (status code 201) The new account must be registered User must be able to access orb using email and password registered","title":"Expected Result:"},{"location":"policies/check_if_is_possible_cancel_operations_with_no_change.html","text":"Scenario: Check if is possible cancel operations with no change Steps: 1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - On policies' page ( orb.live/pages/datasets/policies ) click on edit button 3 - Change policy's name 4 - Change policy's description and click \"next\" 5 - Change policy's tap configuration options and filter and click \"next\" 6 - Change policy's handler 7 - Click \"back\" until return to policies' page Expected Result: No changes must have been applied to the policy","title":"Check if is possible cancel operations with no change"},{"location":"policies/check_if_is_possible_cancel_operations_with_no_change.html#scenario-check-if-is-possible-cancel-operations-with-no-change","text":"","title":"Scenario: Check if is possible cancel operations with no change"},{"location":"policies/check_if_is_possible_cancel_operations_with_no_change.html#steps","text":"1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - On policies' page ( orb.live/pages/datasets/policies ) click on edit button 3 - Change policy's name 4 - Change policy's description and click \"next\" 5 - Change policy's tap configuration options and filter and click \"next\" 6 - Change policy's handler 7 - Click \"back\" until return to policies' page","title":"Steps:"},{"location":"policies/check_if_is_possible_cancel_operations_with_no_change.html#expected-result","text":"No changes must have been applied to the policy","title":"Expected Result:"},{"location":"policies/check_if_total_policies_on_policies%27_page_is_correct.html","text":"Scenario: Check if total policies on policies' page is correct Steps: 1 - Create multiple policies REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - Get all existing policies REST API Method: GET endpoint: /policies/agent/ 3 - On policies' page ( orb.live/pages/datasets/policies ) check the total number of policies at the end of the policies table 4 - Count the number of existing policies Expected Result: Total policies on API response, policies page and the real number must be the same","title":"Check if total policies on policies' page is correct"},{"location":"policies/check_if_total_policies_on_policies%27_page_is_correct.html#scenario-check-if-total-policies-on-policies-page-is-correct","text":"","title":"Scenario: Check if total policies on policies' page is correct"},{"location":"policies/check_if_total_policies_on_policies%27_page_is_correct.html#steps","text":"1 - Create multiple policies REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - Get all existing policies REST API Method: GET endpoint: /policies/agent/ 3 - On policies' page ( orb.live/pages/datasets/policies ) check the total number of policies at the end of the policies table 4 - Count the number of existing policies","title":"Steps:"},{"location":"policies/check_if_total_policies_on_policies%27_page_is_correct.html#expected-result","text":"Total policies on API response, policies page and the real number must be the same","title":"Expected Result:"},{"location":"policies/check_policies_details.html","text":"Scenario: Check policies details Steps: 1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - Get a policy REST API Method: GET endpoint: /policies/agent/ Expected Result: Status code must be 200 and policy name, description, backend, input details and handler must be returned on response","title":"Check policies details"},{"location":"policies/check_policies_details.html#scenario-check-policies-details","text":"","title":"Scenario: Check policies details"},{"location":"policies/check_policies_details.html#steps","text":"1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - Get a policy REST API Method: GET endpoint: /policies/agent/","title":"Steps:"},{"location":"policies/check_policies_details.html#expected-result","text":"Status code must be 200 and policy name, description, backend, input details and handler must be returned on response","title":"Expected Result:"},{"location":"policies/create_3_duplicated_dns_policy_without_insert_new_name_and_1_with_new_name.html","text":"Scenario: Create 3 duplicated dns policy without insert new name and 1 with new name Steps: 1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - Duplicate this policy 3 times REST API Method: POST endpoint: /policies/agent/{policy_id}/duplicate header: {authorization:token} 3 - Duplicate this policy 1 more time inserting new name REST API Method: POST endpoint: /policies/agent/{policy_id}/duplicate header: {authorization:token} body: {\"name\": \"new name\"} Expected Result: All requests must have status code 201 (created) and the policies must be created","title":"Create 3 duplicated dns policy without insert new name and 1 with new name"},{"location":"policies/create_3_duplicated_dns_policy_without_insert_new_name_and_1_with_new_name.html#scenario-create-3-duplicated-dns-policy-without-insert-new-name-and-1-with-new-name","text":"","title":"Scenario: Create 3 duplicated dns policy without insert new name and 1 with new name"},{"location":"policies/create_3_duplicated_dns_policy_without_insert_new_name_and_1_with_new_name.html#steps","text":"1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - Duplicate this policy 3 times REST API Method: POST endpoint: /policies/agent/{policy_id}/duplicate header: {authorization:token} 3 - Duplicate this policy 1 more time inserting new name REST API Method: POST endpoint: /policies/agent/{policy_id}/duplicate header: {authorization:token} body: {\"name\": \"new name\"}","title":"Steps:"},{"location":"policies/create_3_duplicated_dns_policy_without_insert_new_name_and_1_with_new_name.html#expected-result","text":"All requests must have status code 201 (created) and the policies must be created","title":"Expected Result:"},{"location":"policies/create_4_duplicated_policy_with_new_name.html","text":"Scenario: Create 4 duplicated policy with new name Steps: 1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - Duplicate this policy 4 times inserting new name REST API Method: POST endpoint: /policies/agent/{policy_id}/duplicate header: {authorization:token} body: {\"name\": \"new name\"} Expected Result: All requests must have status code 201 (created) and the policies must be created","title":"Create 4 duplicated policy with new name"},{"location":"policies/create_4_duplicated_policy_with_new_name.html#scenario-create-4-duplicated-policy-with-new-name","text":"","title":"Scenario: Create 4 duplicated policy with new name"},{"location":"policies/create_4_duplicated_policy_with_new_name.html#steps","text":"1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - Duplicate this policy 4 times inserting new name REST API Method: POST endpoint: /policies/agent/{policy_id}/duplicate header: {authorization:token} body: {\"name\": \"new name\"}","title":"Steps:"},{"location":"policies/create_4_duplicated_policy_with_new_name.html#expected-result","text":"All requests must have status code 201 (created) and the policies must be created","title":"Expected Result:"},{"location":"policies/create_duplicated_dhcp_policy_without_insert_new_name.html","text":"Scenario: Create duplicated dhcp policy without insert new name Steps: 1 - Create a dhcp policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - Duplicate this policy REST API Method: POST endpoint: /policies/agent/{policy_id}/duplicate header: {authorization:token} Expected Result: 3 request must have status code 201 (created) and the policy must be created From the 4th order, it must fail by conflict","title":"Create duplicated dhcp policy without insert new name"},{"location":"policies/create_duplicated_dhcp_policy_without_insert_new_name.html#scenario-create-duplicated-dhcp-policy-without-insert-new-name","text":"","title":"Scenario: Create duplicated dhcp policy without insert new name"},{"location":"policies/create_duplicated_dhcp_policy_without_insert_new_name.html#steps","text":"1 - Create a dhcp policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - Duplicate this policy REST API Method: POST endpoint: /policies/agent/{policy_id}/duplicate header: {authorization:token}","title":"Steps:"},{"location":"policies/create_duplicated_dhcp_policy_without_insert_new_name.html#expected-result","text":"3 request must have status code 201 (created) and the policy must be created From the 4th order, it must fail by conflict","title":"Expected Result:"},{"location":"policies/create_duplicated_dns_policy_without_insert_new_name.html","text":"Scenario: Create duplicated dns policy without insert new name Steps: 1 - Create a dns policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - Duplicate this policy REST API Method: POST endpoint: /policies/agent/{policy_id}/duplicate header: {authorization:token} Expected Result: 3 request must have status code 201 (created) and the policy must be created From the 4th order, it must fail by conflict","title":"Create duplicated dns policy without insert new name"},{"location":"policies/create_duplicated_dns_policy_without_insert_new_name.html#scenario-create-duplicated-dns-policy-without-insert-new-name","text":"","title":"Scenario: Create duplicated dns policy without insert new name"},{"location":"policies/create_duplicated_dns_policy_without_insert_new_name.html#steps","text":"1 - Create a dns policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - Duplicate this policy REST API Method: POST endpoint: /policies/agent/{policy_id}/duplicate header: {authorization:token}","title":"Steps:"},{"location":"policies/create_duplicated_dns_policy_without_insert_new_name.html#expected-result","text":"3 request must have status code 201 (created) and the policy must be created From the 4th order, it must fail by conflict","title":"Expected Result:"},{"location":"policies/create_duplicated_net_policy_without_insert_new_name.html","text":"Scenario: Create duplicated net policy without insert new name Steps: 1 - Create a net policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - Duplicate this policy REST API Method: POST endpoint: /policies/agent/{policy_id}/duplicate header: {authorization:token} Expected Result: 3 request must have status code 201 (created) and the policy must be created From the 4th order, it must fail by conflict","title":"Create duplicated net policy without insert new name"},{"location":"policies/create_duplicated_net_policy_without_insert_new_name.html#scenario-create-duplicated-net-policy-without-insert-new-name","text":"","title":"Scenario: Create duplicated net policy without insert new name"},{"location":"policies/create_duplicated_net_policy_without_insert_new_name.html#steps","text":"1 - Create a net policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - Duplicate this policy REST API Method: POST endpoint: /policies/agent/{policy_id}/duplicate header: {authorization:token}","title":"Steps:"},{"location":"policies/create_duplicated_net_policy_without_insert_new_name.html#expected-result","text":"3 request must have status code 201 (created) and the policy must be created From the 4th order, it must fail by conflict","title":"Expected Result:"},{"location":"policies/create_policy_with_description.html","text":"Scenario: Create policy with description Steps: 1 - Create a policy with description REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} Expected Result: Request must have status code 201 (created) and the policy must be created","title":"Create policy with description"},{"location":"policies/create_policy_with_description.html#scenario-create-policy-with-description","text":"","title":"Scenario: Create policy with description"},{"location":"policies/create_policy_with_description.html#steps","text":"1 - Create a policy with description REST API Method: POST endpoint: /policies/agent/ header: {authorization:token}","title":"Steps:"},{"location":"policies/create_policy_with_description.html#expected-result","text":"Request must have status code 201 (created) and the policy must be created","title":"Expected Result:"},{"location":"policies/create_policy_with_dhcp_handler.html","text":"Scenario: Create policy with dhcp handler 1 - Create a policy with dhcp handler, description, host specification, bpf filter and pcap source REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} Expected Result: Request must have status code 201 (created) and the policy must be created","title":"Create policy with dhcp handler"},{"location":"policies/create_policy_with_dhcp_handler.html#scenario-create-policy-with-dhcp-handler","text":"","title":"Scenario: Create policy with dhcp handler"},{"location":"policies/create_policy_with_dhcp_handler.html#1-create-a-policy-with-dhcp-handler-description-host-specification-bpf-filter-and-pcap-source","text":"REST API Method: POST endpoint: /policies/agent/ header: {authorization:token}","title":"1 - Create a policy with dhcp handler, description, host specification, bpf filter and pcap source"},{"location":"policies/create_policy_with_dhcp_handler.html#expected-result","text":"Request must have status code 201 (created) and the policy must be created","title":"Expected Result:"},{"location":"policies/create_policy_with_dns_handler.html","text":"Scenario: Create policy with dns handler 1 - Create a policy with dns handler, description, host specification, bpf filter, pcap source, only qname suffix and only rcode REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} Expected Result: Request must have status code 201 (created) and the policy must be created 2 - Create a policy with dns handler, host specification, bpf filter, pcap source, only qname suffix and only rcode REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} Expected Result: Request must have status code 201 (created) and the policy must be created 3 - Scenario: Create a policy with dns handler, bpf filter, pcap source, only qname suffix and only rcode REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} Expected Result: Request must have status code 201 (created) and the policy must be created 4 - Scenario: Create a policy with dns handler, pcap source, only qname suffix and only rcode REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} Expected Result: Request must have status code 201 (created) and the policy must be created 5 - Scenario: Create a policy with dns handler, only qname suffix REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} Expected Result: Request must have status code 201 (created) and the policy must be created","title":"Create policy with dns handler"},{"location":"policies/create_policy_with_dns_handler.html#scenario-create-policy-with-dns-handler","text":"","title":"Scenario: Create policy with dns handler"},{"location":"policies/create_policy_with_dns_handler.html#1-create-a-policy-with-dns-handler-description-host-specification-bpf-filter-pcap-source-only-qname-suffix-and-only-rcode","text":"REST API Method: POST endpoint: /policies/agent/ header: {authorization:token}","title":"1 - Create a policy with dns handler, description, host specification, bpf filter, pcap source, only qname suffix and only rcode"},{"location":"policies/create_policy_with_dns_handler.html#expected-result","text":"Request must have status code 201 (created) and the policy must be created","title":"Expected Result:"},{"location":"policies/create_policy_with_dns_handler.html#2-create-a-policy-with-dns-handler-host-specification-bpf-filter-pcap-source-only-qname-suffix-and-only-rcode","text":"REST API Method: POST endpoint: /policies/agent/ header: {authorization:token}","title":"2 - Create a policy with dns handler, host specification, bpf filter, pcap source, only qname suffix and only rcode"},{"location":"policies/create_policy_with_dns_handler.html#expected-result_1","text":"Request must have status code 201 (created) and the policy must be created","title":"Expected Result:"},{"location":"policies/create_policy_with_dns_handler.html#3-scenario-create-a-policy-with-dns-handler-bpf-filter-pcap-source-only-qname-suffix-and-only-rcode","text":"REST API Method: POST endpoint: /policies/agent/ header: {authorization:token}","title":"3 - Scenario: Create a policy with dns handler, bpf filter, pcap source, only qname suffix and only rcode"},{"location":"policies/create_policy_with_dns_handler.html#expected-result_2","text":"Request must have status code 201 (created) and the policy must be created","title":"Expected Result:"},{"location":"policies/create_policy_with_dns_handler.html#4-scenario-create-a-policy-with-dns-handler-pcap-source-only-qname-suffix-and-only-rcode","text":"REST API Method: POST endpoint: /policies/agent/ header: {authorization:token}","title":"4 - Scenario: Create a policy with dns handler, pcap source, only qname suffix and only rcode"},{"location":"policies/create_policy_with_dns_handler.html#expected-result_3","text":"Request must have status code 201 (created) and the policy must be created","title":"Expected Result:"},{"location":"policies/create_policy_with_dns_handler.html#5-scenario-create-a-policy-with-dns-handler-only-qname-suffix","text":"REST API Method: POST endpoint: /policies/agent/ header: {authorization:token}","title":"5 - Scenario: Create a policy with dns handler, only qname suffix"},{"location":"policies/create_policy_with_dns_handler.html#expected-result_4","text":"Request must have status code 201 (created) and the policy must be created","title":"Expected Result:"},{"location":"policies/create_policy_with_duplicate_name.html","text":"Scenario: Create policy with duplicate name Steps: 1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - Create another policy using the same policy name Expected Result: First request must have status code 201 (created) and one policy must be created on orb Second request must fail with status code 409 (conflict) and no other policy must be created (make sure that first policy has not been modified)","title":"Create policy with duplicate name"},{"location":"policies/create_policy_with_duplicate_name.html#scenario-create-policy-with-duplicate-name","text":"","title":"Scenario: Create policy with duplicate name"},{"location":"policies/create_policy_with_duplicate_name.html#steps","text":"1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - Create another policy using the same policy name","title":"Steps:"},{"location":"policies/create_policy_with_duplicate_name.html#expected-result","text":"First request must have status code 201 (created) and one policy must be created on orb Second request must fail with status code 409 (conflict) and no other policy must be created (make sure that first policy has not been modified)","title":"Expected Result:"},{"location":"policies/create_policy_with_invalid_name_%28regex%29.html","text":"Scenario: Create policy with invalid name (regex) Steps: 1 - Create an policy using an invalid regex to policy name REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} example of invalid regex: name starting with non-alphabetic characters name with just 1 letter space-separated composite name Expected Result: Request must fail with status code 400 (bad request) and no policy must be created","title":"Create policy with invalid name (regex)"},{"location":"policies/create_policy_with_invalid_name_%28regex%29.html#scenario-create-policy-with-invalid-name-regex","text":"","title":"Scenario: Create policy with invalid name (regex)"},{"location":"policies/create_policy_with_invalid_name_%28regex%29.html#steps","text":"1 - Create an policy using an invalid regex to policy name REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} example of invalid regex: name starting with non-alphabetic characters name with just 1 letter space-separated composite name","title":"Steps:"},{"location":"policies/create_policy_with_invalid_name_%28regex%29.html#expected-result","text":"Request must fail with status code 400 (bad request) and no policy must be created","title":"Expected Result:"},{"location":"policies/create_policy_with_multiple_handlers.html","text":"Scenario: Create policy with multiple handlers Steps: 1 - Create a policy with dns, net and dhcp handler REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} Expected Result: Request must have status code 201 (created) and the policy must be created","title":"Create policy with multiple handlers"},{"location":"policies/create_policy_with_multiple_handlers.html#scenario-create-policy-with-multiple-handlers","text":"","title":"Scenario: Create policy with multiple handlers"},{"location":"policies/create_policy_with_multiple_handlers.html#steps","text":"1 - Create a policy with dns, net and dhcp handler REST API Method: POST endpoint: /policies/agent/ header: {authorization:token}","title":"Steps:"},{"location":"policies/create_policy_with_multiple_handlers.html#expected-result","text":"Request must have status code 201 (created) and the policy must be created","title":"Expected Result:"},{"location":"policies/create_policy_with_net_handler.html","text":"Scenario: Create policy with net handler 1 - Create a policy with net handler, description, host specification, bpf filter and pcap source REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} Expected Result: Request must have status code 201 (created) and the policy must be created","title":"Create policy with net handler"},{"location":"policies/create_policy_with_net_handler.html#scenario-create-policy-with-net-handler","text":"","title":"Scenario: Create policy with net handler"},{"location":"policies/create_policy_with_net_handler.html#1-create-a-policy-with-net-handler-description-host-specification-bpf-filter-and-pcap-source","text":"REST API Method: POST endpoint: /policies/agent/ header: {authorization:token}","title":"1 - Create a policy with net handler, description, host specification, bpf filter and pcap source"},{"location":"policies/create_policy_with_net_handler.html#expected-result","text":"Request must have status code 201 (created) and the policy must be created","title":"Expected Result:"},{"location":"policies/create_policy_with_no_agent_provisioned.html","text":"Scenario: Create policy with no agent provisioned Steps: Without provision any agent go to policies page ( https://orb.live/pages/datasets/policies ) 1 - Click in \"+ NEW POLICY\" 2- Insert a policy label 3 - Click on \"NEXT' button Expected Result: Alert message should be displayed informing that there is no agents available","title":"Create policy with no agent provisioned"},{"location":"policies/create_policy_with_no_agent_provisioned.html#scenario-create-policy-with-no-agent-provisioned","text":"","title":"Scenario: Create policy with no agent provisioned"},{"location":"policies/create_policy_with_no_agent_provisioned.html#steps","text":"Without provision any agent go to policies page ( https://orb.live/pages/datasets/policies ) 1 - Click in \"+ NEW POLICY\" 2- Insert a policy label 3 - Click on \"NEXT' button","title":"Steps:"},{"location":"policies/create_policy_with_no_agent_provisioned.html#expected-result","text":"Alert message should be displayed informing that there is no agents available","title":"Expected Result:"},{"location":"policies/create_policy_without_description.html","text":"Scenario: Create policy without description Steps: 1 - Create a policy without description REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} Expected Result: Request must have status code 201 (created) and the policy must be created","title":"Create policy without description"},{"location":"policies/create_policy_without_description.html#scenario-create-policy-without-description","text":"","title":"Scenario: Create policy without description"},{"location":"policies/create_policy_without_description.html#steps","text":"1 - Create a policy without description REST API Method: POST endpoint: /policies/agent/ header: {authorization:token}","title":"Steps:"},{"location":"policies/create_policy_without_description.html#expected-result","text":"Request must have status code 201 (created) and the policy must be created","title":"Expected Result:"},{"location":"policies/edit_a_policy_through_the_details_modal.html","text":"Scenario: Edit a policy through the details modal Steps: 1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - On policies' page ( orb.live/pages/datasets/policies ) click on details button 3 - Click on \"edit\" button Expected Result: User should be redirected to this policy's edit page and should be able to make changes","title":"Edit a policy through the details modal"},{"location":"policies/edit_a_policy_through_the_details_modal.html#scenario-edit-a-policy-through-the-details-modal","text":"","title":"Scenario: Edit a policy through the details modal"},{"location":"policies/edit_a_policy_through_the_details_modal.html#steps","text":"1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - On policies' page ( orb.live/pages/datasets/policies ) click on details button 3 - Click on \"edit\" button","title":"Steps:"},{"location":"policies/edit_a_policy_through_the_details_modal.html#expected-result","text":"User should be redirected to this policy's edit page and should be able to make changes","title":"Expected Result:"},{"location":"policies/edit_policy_bpf_filter_expression.html","text":"Scenario: Edit policy bpf_filter_expression Steps: 1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2- Edit this policy bpf_filter_expression REST API Method: PUT endpoint: /policies/agent/policy_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit policy bpf_filter_expression"},{"location":"policies/edit_policy_bpf_filter_expression.html#scenario-edit-policy-bpf_filter_expression","text":"","title":"Scenario: Edit policy bpf_filter_expression"},{"location":"policies/edit_policy_bpf_filter_expression.html#steps","text":"1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2- Edit this policy bpf_filter_expression REST API Method: PUT endpoint: /policies/agent/policy_id header: {authorization:token}","title":"Steps:"},{"location":"policies/edit_policy_bpf_filter_expression.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"policies/edit_policy_description.html","text":"Scenario: Edit policy description Steps: 1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2- Edit this policy description REST API Method: PUT endpoint: /policies/agent/policy_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit policy description"},{"location":"policies/edit_policy_description.html#scenario-edit-policy-description","text":"","title":"Scenario: Edit policy description"},{"location":"policies/edit_policy_description.html#steps","text":"1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2- Edit this policy description REST API Method: PUT endpoint: /policies/agent/policy_id header: {authorization:token}","title":"Steps:"},{"location":"policies/edit_policy_description.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"policies/edit_policy_handler.html","text":"Scenario: Edit policy handler Step: 1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2- Edit this policy handler REST API Method: PUT endpoint: /policies/agent/policy_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit policy handler"},{"location":"policies/edit_policy_handler.html#scenario-edit-policy-handler","text":"","title":"Scenario: Edit policy handler"},{"location":"policies/edit_policy_handler.html#step","text":"1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2- Edit this policy handler REST API Method: PUT endpoint: /policies/agent/policy_id header: {authorization:token}","title":"Step:"},{"location":"policies/edit_policy_handler.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"policies/edit_policy_host_specification.html","text":"Scenario: Edit policy host_specification Steps: 1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2- Edit this policy host_specification REST API Method: PUT endpoint: /policies/agent/policy_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit policy host_specification"},{"location":"policies/edit_policy_host_specification.html#scenario-edit-policy-host_specification","text":"","title":"Scenario: Edit policy host_specification"},{"location":"policies/edit_policy_host_specification.html#steps","text":"1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2- Edit this policy host_specification REST API Method: PUT endpoint: /policies/agent/policy_id header: {authorization:token}","title":"Steps:"},{"location":"policies/edit_policy_host_specification.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"policies/edit_policy_name.html","text":"Scenario: Edit policy name Steps: 1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2- Edit this policy name REST API Method: PUT endpoint: /policies/agent/policy_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit policy name"},{"location":"policies/edit_policy_name.html#scenario-edit-policy-name","text":"","title":"Scenario: Edit policy name"},{"location":"policies/edit_policy_name.html#steps","text":"1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2- Edit this policy name REST API Method: PUT endpoint: /policies/agent/policy_id header: {authorization:token}","title":"Steps:"},{"location":"policies/edit_policy_name.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"policies/edit_policy_only_qname_suffix.html","text":"Scenario: Edit policy only_qname_suffix Steps: 1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2- Edit this policy only_qname_suffix REST API Method: PUT endpoint: /policies/agent/policy_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit policy only_qname_suffix"},{"location":"policies/edit_policy_only_qname_suffix.html#scenario-edit-policy-only_qname_suffix","text":"","title":"Scenario: Edit policy only_qname_suffix"},{"location":"policies/edit_policy_only_qname_suffix.html#steps","text":"1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2- Edit this policy only_qname_suffix REST API Method: PUT endpoint: /policies/agent/policy_id header: {authorization:token}","title":"Steps:"},{"location":"policies/edit_policy_only_qname_suffix.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"policies/edit_policy_only_rcode.html","text":"Scenario: Edit policy only_rcode Steps: 1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2- Edit this policy only_rcode REST API Method: PUT endpoint: /policies/agent/policy_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit policy only_rcode"},{"location":"policies/edit_policy_only_rcode.html#scenario-edit-policy-only_rcode","text":"","title":"Scenario: Edit policy only_rcode"},{"location":"policies/edit_policy_only_rcode.html#steps","text":"1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2- Edit this policy only_rcode REST API Method: PUT endpoint: /policies/agent/policy_id header: {authorization:token}","title":"Steps:"},{"location":"policies/edit_policy_only_rcode.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"policies/edit_policy_pcap_source.html","text":"Scenario: Edit policy pcap_source Steps: 1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2- Edit this policy pcap_source REST API Method: PUT endpoint: /policies/agent/policy_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit policy pcap_source"},{"location":"policies/edit_policy_pcap_source.html#scenario-edit-policy-pcap_source","text":"","title":"Scenario: Edit policy pcap_source"},{"location":"policies/edit_policy_pcap_source.html#steps","text":"1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2- Edit this policy pcap_source REST API Method: PUT endpoint: /policies/agent/policy_id header: {authorization:token}","title":"Steps:"},{"location":"policies/edit_policy_pcap_source.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"policies/remove_policy_using_correct_name.html","text":"Scenario: Remove policy using correct name Steps: 1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - On policies' page ( orb.live/pages/datasets/policies ) click on remove button 3 - Insert the name of the policy correctly on delete modal 4 - Confirm the operation by clicking on \"I UNDERSTAND, DELETE THIS POLICY\" button Expected Result: Policy must be deleted","title":"Remove policy using correct name"},{"location":"policies/remove_policy_using_correct_name.html#scenario-remove-policy-using-correct-name","text":"","title":"Scenario: Remove policy using correct name"},{"location":"policies/remove_policy_using_correct_name.html#steps","text":"1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - On policies' page ( orb.live/pages/datasets/policies ) click on remove button 3 - Insert the name of the policy correctly on delete modal 4 - Confirm the operation by clicking on \"I UNDERSTAND, DELETE THIS POLICY\" button","title":"Steps:"},{"location":"policies/remove_policy_using_correct_name.html#expected-result","text":"Policy must be deleted","title":"Expected Result:"},{"location":"policies/remove_policy_using_incorrect_name.html","text":"Scenario: Remove policy using incorrect name Steps: 1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - On policies' page ( orb.live/pages/datasets/policies ) click on remove button 3 - Insert the name of the policy incorrectly on delete modal Expected Result: \"I UNDERSTAND, DELETE THIS POLICY\" button must not be enabled After user close the deletion modal, policy must not be deleted","title":"Remove policy using incorrect name"},{"location":"policies/remove_policy_using_incorrect_name.html#scenario-remove-policy-using-incorrect-name","text":"","title":"Scenario: Remove policy using incorrect name"},{"location":"policies/remove_policy_using_incorrect_name.html#steps","text":"1 - Create a policy REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - On policies' page ( orb.live/pages/datasets/policies ) click on remove button 3 - Insert the name of the policy incorrectly on delete modal","title":"Steps:"},{"location":"policies/remove_policy_using_incorrect_name.html#expected-result","text":"\"I UNDERSTAND, DELETE THIS POLICY\" button must not be enabled After user close the deletion modal, policy must not be deleted","title":"Expected Result:"},{"location":"policies/test_policy_filters.html","text":"Scenario: Test policy filters Steps: 1 - Create multiple policies REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - On policies' page ( orb.live/pages/datasets/policies ) use the filter: Name Description Version Search by Expected Result: All filters must be working properly","title":"Test policy filters"},{"location":"policies/test_policy_filters.html#scenario-test-policy-filters","text":"","title":"Scenario: Test policy filters"},{"location":"policies/test_policy_filters.html#steps","text":"1 - Create multiple policies REST API Method: POST endpoint: /policies/agent/ header: {authorization:token} 2 - On policies' page ( orb.live/pages/datasets/policies ) use the filter: Name Description Version Search by","title":"Steps:"},{"location":"policies/test_policy_filters.html#expected-result","text":"All filters must be working properly","title":"Expected Result:"},{"location":"sinks/check_if_is_possible_cancel_operations_with_no_change.html","text":"Scenario: Check if is possible cancel operations with no change Steps: 1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2 - On sinks' page ( orb.live/pages/sinks ) click on edit button 3 - Change sinks' name 4 - Change sink's description and click \"next\" 5 - Change sink's remote host 6 - Change sink's username 7 - Change sink's password 8 - Click \"back\" until return to sinks' page Expected Result: No changes must have been applied to the sink","title":"Check if is possible cancel operations with no change"},{"location":"sinks/check_if_is_possible_cancel_operations_with_no_change.html#scenario-check-if-is-possible-cancel-operations-with-no-change","text":"","title":"Scenario: Check if is possible cancel operations with no change"},{"location":"sinks/check_if_is_possible_cancel_operations_with_no_change.html#steps","text":"1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2 - On sinks' page ( orb.live/pages/sinks ) click on edit button 3 - Change sinks' name 4 - Change sink's description and click \"next\" 5 - Change sink's remote host 6 - Change sink's username 7 - Change sink's password 8 - Click \"back\" until return to sinks' page","title":"Steps:"},{"location":"sinks/check_if_is_possible_cancel_operations_with_no_change.html#expected-result","text":"No changes must have been applied to the sink","title":"Expected Result:"},{"location":"sinks/check_if_remote_host%2C_username_and_password_are_required_to_create_a_sink.html","text":"Scenario: Check if remote host, username and password are required to create a sink Without remote host Steps: 1 - Create a sink without remote host REST API Method: POST endpoint: /sinks header: {authorization:token} Expected Result: Request must fail with status code 400 (bad request) Without username Steps: 1 - Create a sink without username REST API Method: POST endpoint: /sinks header: {authorization:token} Expected Result: Request must fail with status code 400 (bad request) Without password Steps: 1 - Create a sink without password REST API Method: POST endpoint: /sinks header: {authorization:token} Expected Result: Request must fail with status code 400 (bad request)","title":"Check if remote host, username and password are required to create a sink"},{"location":"sinks/check_if_remote_host%2C_username_and_password_are_required_to_create_a_sink.html#scenario-check-if-remote-host-username-and-password-are-required-to-create-a-sink","text":"","title":"Scenario: Check if remote host, username and password are required to create a sink"},{"location":"sinks/check_if_remote_host%2C_username_and_password_are_required_to_create_a_sink.html#without-remote-host","text":"","title":"Without remote host"},{"location":"sinks/check_if_remote_host%2C_username_and_password_are_required_to_create_a_sink.html#steps","text":"1 - Create a sink without remote host REST API Method: POST endpoint: /sinks header: {authorization:token}","title":"Steps:"},{"location":"sinks/check_if_remote_host%2C_username_and_password_are_required_to_create_a_sink.html#expected-result","text":"Request must fail with status code 400 (bad request)","title":"Expected Result:"},{"location":"sinks/check_if_remote_host%2C_username_and_password_are_required_to_create_a_sink.html#without-username","text":"","title":"Without username"},{"location":"sinks/check_if_remote_host%2C_username_and_password_are_required_to_create_a_sink.html#steps_1","text":"1 - Create a sink without username REST API Method: POST endpoint: /sinks header: {authorization:token}","title":"Steps:"},{"location":"sinks/check_if_remote_host%2C_username_and_password_are_required_to_create_a_sink.html#expected-result_1","text":"Request must fail with status code 400 (bad request)","title":"Expected Result:"},{"location":"sinks/check_if_remote_host%2C_username_and_password_are_required_to_create_a_sink.html#without-password","text":"","title":"Without password"},{"location":"sinks/check_if_remote_host%2C_username_and_password_are_required_to_create_a_sink.html#steps_2","text":"1 - Create a sink without password REST API Method: POST endpoint: /sinks header: {authorization:token}","title":"Steps:"},{"location":"sinks/check_if_remote_host%2C_username_and_password_are_required_to_create_a_sink.html#expected-result_2","text":"Request must fail with status code 400 (bad request)","title":"Expected Result:"},{"location":"sinks/check_if_total_sinks_on_sinks%27_page_is_correct.html","text":"Scenario: Check if total sinks on sinks' page is correct Steps: 1 - Create multiple sinks REST API Method: POST endpoint: /sinks header: {authorization:token} 2 - Get all existing sinks REST API Method: GET endpoint: /sinks 3 - On sinks' page ( orb.live/pages/sinks ) check the total number of sinks at the end of the sinks table 4 - Count the number of existing sinks Expected Result: Total sinks on API response, sinks page and the real number must be the same","title":"Check if total sinks on sinks' page is correct"},{"location":"sinks/check_if_total_sinks_on_sinks%27_page_is_correct.html#scenario-check-if-total-sinks-on-sinks-page-is-correct","text":"","title":"Scenario: Check if total sinks on sinks' page is correct"},{"location":"sinks/check_if_total_sinks_on_sinks%27_page_is_correct.html#steps","text":"1 - Create multiple sinks REST API Method: POST endpoint: /sinks header: {authorization:token} 2 - Get all existing sinks REST API Method: GET endpoint: /sinks 3 - On sinks' page ( orb.live/pages/sinks ) check the total number of sinks at the end of the sinks table 4 - Count the number of existing sinks","title":"Steps:"},{"location":"sinks/check_if_total_sinks_on_sinks%27_page_is_correct.html#expected-result","text":"Total sinks on API response, sinks page and the real number must be the same","title":"Expected Result:"},{"location":"sinks/check_sink_details.html","text":"Scenario: Check sink details Steps: 1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2 - Get a sink REST API Method: GET endpoint: /sinks/sink_id Expected Result: Status code must be 200 and sink name, description, service type, remote host, status, username and tags must be returned on response If a sink never received data, status must be new If a sink is receiving data, status must be active If a sink has not received data for more than 30 minutes, status must be idle","title":"Check sink details"},{"location":"sinks/check_sink_details.html#scenario-check-sink-details","text":"","title":"Scenario: Check sink details"},{"location":"sinks/check_sink_details.html#steps","text":"1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2 - Get a sink REST API Method: GET endpoint: /sinks/sink_id","title":"Steps:"},{"location":"sinks/check_sink_details.html#expected-result","text":"Status code must be 200 and sink name, description, service type, remote host, status, username and tags must be returned on response If a sink never received data, status must be new If a sink is receiving data, status must be active If a sink has not received data for more than 30 minutes, status must be idle","title":"Expected Result:"},{"location":"sinks/create_sink_with_description.html","text":"Scenario: Create sink with description Steps: 1 - Create a sink with description REST API Method: POST endpoint: /sinks header: {authorization:token} Expected Result: Request must have status code 201 (created) and the sink must be created","title":"Create sink with description"},{"location":"sinks/create_sink_with_description.html#scenario-create-sink-with-description","text":"","title":"Scenario: Create sink with description"},{"location":"sinks/create_sink_with_description.html#steps","text":"1 - Create a sink with description REST API Method: POST endpoint: /sinks header: {authorization:token}","title":"Steps:"},{"location":"sinks/create_sink_with_description.html#expected-result","text":"Request must have status code 201 (created) and the sink must be created","title":"Expected Result:"},{"location":"sinks/create_sink_with_duplicate_name.html","text":"Scenario: Create sink with duplicate name Steps: 1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2 - Create another sink using the same sink name Expected Result: First request must have status code 201 (created) and one sink must be created on orb Second request must fail with status code 409 (conflict) and no other sink must be created (make sure that first sink has not been modified)","title":"Create sink with duplicate name"},{"location":"sinks/create_sink_with_duplicate_name.html#scenario-create-sink-with-duplicate-name","text":"","title":"Scenario: Create sink with duplicate name"},{"location":"sinks/create_sink_with_duplicate_name.html#steps","text":"1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2 - Create another sink using the same sink name","title":"Steps:"},{"location":"sinks/create_sink_with_duplicate_name.html#expected-result","text":"First request must have status code 201 (created) and one sink must be created on orb Second request must fail with status code 409 (conflict) and no other sink must be created (make sure that first sink has not been modified)","title":"Expected Result:"},{"location":"sinks/create_sink_with_invalid_name_%28regex%29.html","text":"Scenario: Create sink with invalid name (regex) Steps: 1 - Create a sink using an invalid regex to sink name REST API Method: POST endpoint: /sinks header: {authorization:token} example of invalid regex: name starting with non-alphabetic characters name with just 1 letter space-separated composite name Expected Result: Request must fail with status code 400 (bad request) and no sink must be created","title":"Create sink with invalid name (regex)"},{"location":"sinks/create_sink_with_invalid_name_%28regex%29.html#scenario-create-sink-with-invalid-name-regex","text":"","title":"Scenario: Create sink with invalid name (regex)"},{"location":"sinks/create_sink_with_invalid_name_%28regex%29.html#steps","text":"1 - Create a sink using an invalid regex to sink name REST API Method: POST endpoint: /sinks header: {authorization:token} example of invalid regex: name starting with non-alphabetic characters name with just 1 letter space-separated composite name","title":"Steps:"},{"location":"sinks/create_sink_with_invalid_name_%28regex%29.html#expected-result","text":"Request must fail with status code 400 (bad request) and no sink must be created","title":"Expected Result:"},{"location":"sinks/create_sink_with_multiple_tags.html","text":"Scenario: Create sink with multiple tags Steps: 1 - Create a sink with more than one pair (key:value) of tags REST API Method: POST endpoint: /sinks header: {authorization:token} Expected Result: Request must have status code 201 (created) and the sink must be created Tags for sink just serve to filter the sinks","title":"Create sink with multiple tags"},{"location":"sinks/create_sink_with_multiple_tags.html#scenario-create-sink-with-multiple-tags","text":"","title":"Scenario: Create sink with multiple tags"},{"location":"sinks/create_sink_with_multiple_tags.html#steps","text":"1 - Create a sink with more than one pair (key:value) of tags REST API Method: POST endpoint: /sinks header: {authorization:token}","title":"Steps:"},{"location":"sinks/create_sink_with_multiple_tags.html#expected-result","text":"Request must have status code 201 (created) and the sink must be created Tags for sink just serve to filter the sinks","title":"Expected Result:"},{"location":"sinks/create_sink_with_tags.html","text":"Scenario: Create sink with tags Steps: 1 - Create a sink with one pair (key:value) of tags REST API Method: POST endpoint: /sinks header: {authorization:token} Expected Result: Request must have status code 201 (created) and the sink must be created Tags for sink just serve to filter the sinks","title":"Create sink with tags"},{"location":"sinks/create_sink_with_tags.html#scenario-create-sink-with-tags","text":"","title":"Scenario: Create sink with tags"},{"location":"sinks/create_sink_with_tags.html#steps","text":"1 - Create a sink with one pair (key:value) of tags REST API Method: POST endpoint: /sinks header: {authorization:token}","title":"Steps:"},{"location":"sinks/create_sink_with_tags.html#expected-result","text":"Request must have status code 201 (created) and the sink must be created Tags for sink just serve to filter the sinks","title":"Expected Result:"},{"location":"sinks/create_sink_without_description.html","text":"Scenario: Create sink without description Steps: 1 - Create a sink without description REST API Method: POST endpoint: /sinks header: {authorization:token} Expected Result: Request must have status code 201 (created) and the sink must be created Tags for sink just serve to filter the sinks","title":"Create sink without description"},{"location":"sinks/create_sink_without_description.html#scenario-create-sink-without-description","text":"","title":"Scenario: Create sink without description"},{"location":"sinks/create_sink_without_description.html#steps","text":"1 - Create a sink without description REST API Method: POST endpoint: /sinks header: {authorization:token}","title":"Steps:"},{"location":"sinks/create_sink_without_description.html#expected-result","text":"Request must have status code 201 (created) and the sink must be created Tags for sink just serve to filter the sinks","title":"Expected Result:"},{"location":"sinks/create_sink_without_tags.html","text":"Scenario: Create sink without tags Steps: 1 - Create a sink without any pair (key:value) of tags REST API Method: POST endpoint: /sinks header: {authorization:token} Expected Result: Request must have status code 201 (created) and the sink must be created Tags for sink just serve to filter the sinks","title":"Create sink without tags"},{"location":"sinks/create_sink_without_tags.html#scenario-create-sink-without-tags","text":"","title":"Scenario: Create sink without tags"},{"location":"sinks/create_sink_without_tags.html#steps","text":"1 - Create a sink without any pair (key:value) of tags REST API Method: POST endpoint: /sinks header: {authorization:token}","title":"Steps:"},{"location":"sinks/create_sink_without_tags.html#expected-result","text":"Request must have status code 201 (created) and the sink must be created Tags for sink just serve to filter the sinks","title":"Expected Result:"},{"location":"sinks/edit_a_sink_through_the_details_modal.html","text":"Scenario: Edit a sink through the details modal Steps: 1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2 - On sinks' page ( orb.live/pages/sinks ) click on details button 3 - Click on \"edit\" button Expected Result: User should be redirected to this sink's edit page and should be able to make changes","title":"Edit a sink through the details modal"},{"location":"sinks/edit_a_sink_through_the_details_modal.html#scenario-edit-a-sink-through-the-details-modal","text":"","title":"Scenario: Edit a sink through the details modal"},{"location":"sinks/edit_a_sink_through_the_details_modal.html#steps","text":"1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2 - On sinks' page ( orb.live/pages/sinks ) click on details button 3 - Click on \"edit\" button","title":"Steps:"},{"location":"sinks/edit_a_sink_through_the_details_modal.html#expected-result","text":"User should be redirected to this sink's edit page and should be able to make changes","title":"Expected Result:"},{"location":"sinks/edit_sink_description.html","text":"Scenario: Edit sink description Steps: 1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2- Edit this sink description REST API Method: PUT endpoint: /sinks/sink_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit sink description"},{"location":"sinks/edit_sink_description.html#scenario-edit-sink-description","text":"","title":"Scenario: Edit sink description"},{"location":"sinks/edit_sink_description.html#steps","text":"1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2- Edit this sink description REST API Method: PUT endpoint: /sinks/sink_id header: {authorization:token}","title":"Steps:"},{"location":"sinks/edit_sink_description.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"sinks/edit_sink_name.html","text":"Scenario: Edit sink name Steps: 1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2- Edit this sink name REST API Method: PUT endpoint: /sinks/sink_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit sink name"},{"location":"sinks/edit_sink_name.html#scenario-edit-sink-name","text":"","title":"Scenario: Edit sink name"},{"location":"sinks/edit_sink_name.html#steps","text":"1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2- Edit this sink name REST API Method: PUT endpoint: /sinks/sink_id header: {authorization:token}","title":"Steps:"},{"location":"sinks/edit_sink_name.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"sinks/edit_sink_password.html","text":"Scenario: Edit sink password Steps: 1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2- Edit this sink password REST API Method: PUT endpoint: /sinks/sink_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit sink password"},{"location":"sinks/edit_sink_password.html#scenario-edit-sink-password","text":"","title":"Scenario: Edit sink password"},{"location":"sinks/edit_sink_password.html#steps","text":"1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2- Edit this sink password REST API Method: PUT endpoint: /sinks/sink_id header: {authorization:token}","title":"Steps:"},{"location":"sinks/edit_sink_password.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"sinks/edit_sink_remote_host.html","text":"Scenario: Edit sink remote host Steps: 1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2- Edit this sink remote host REST API Method: PUT endpoint: /sinks/sink_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit sink remote host"},{"location":"sinks/edit_sink_remote_host.html#scenario-edit-sink-remote-host","text":"","title":"Scenario: Edit sink remote host"},{"location":"sinks/edit_sink_remote_host.html#steps","text":"1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2- Edit this sink remote host REST API Method: PUT endpoint: /sinks/sink_id header: {authorization:token}","title":"Steps:"},{"location":"sinks/edit_sink_remote_host.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"sinks/edit_sink_tags.html","text":"Scenario: Edit sink tags Steps: 1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2- Edit this sink tags REST API Method: PUT endpoint: /sinks/sink_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit sink tags"},{"location":"sinks/edit_sink_tags.html#scenario-edit-sink-tags","text":"","title":"Scenario: Edit sink tags"},{"location":"sinks/edit_sink_tags.html#steps","text":"1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2- Edit this sink tags REST API Method: PUT endpoint: /sinks/sink_id header: {authorization:token}","title":"Steps:"},{"location":"sinks/edit_sink_tags.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"sinks/edit_sink_username.html","text":"Scenario: Edit sink username Steps: 1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2- Edit this sink username REST API Method: PUT endpoint: /sinks/sink_id header: {authorization:token} Expected Result: Request must have status code 200 (ok) and changes must be applied","title":"Edit sink username"},{"location":"sinks/edit_sink_username.html#scenario-edit-sink-username","text":"","title":"Scenario: Edit sink username"},{"location":"sinks/edit_sink_username.html#steps","text":"1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2- Edit this sink username REST API Method: PUT endpoint: /sinks/sink_id header: {authorization:token}","title":"Steps:"},{"location":"sinks/edit_sink_username.html#expected-result","text":"Request must have status code 200 (ok) and changes must be applied","title":"Expected Result:"},{"location":"sinks/remove_sink_using_correct_name.html","text":"Scenario: Remove sink using correct name Steps: 1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2 - On agent groups' page ( orb.live/pages/sinks ) click on remove button 3 - Insert the name of the sink correctly on delete modal 4 - Confirm the operation by clicking on \"I UNDERSTAND, DELETE THIS SINK\" button Expected Result: Sink must be deleted","title":"Remove sink using correct name"},{"location":"sinks/remove_sink_using_correct_name.html#scenario-remove-sink-using-correct-name","text":"","title":"Scenario: Remove sink using correct name"},{"location":"sinks/remove_sink_using_correct_name.html#steps","text":"1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2 - On agent groups' page ( orb.live/pages/sinks ) click on remove button 3 - Insert the name of the sink correctly on delete modal 4 - Confirm the operation by clicking on \"I UNDERSTAND, DELETE THIS SINK\" button","title":"Steps:"},{"location":"sinks/remove_sink_using_correct_name.html#expected-result","text":"Sink must be deleted","title":"Expected Result:"},{"location":"sinks/remove_sink_using_incorrect_name.html","text":"Scenario: Remove sink using incorrect name Steps: 1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2 - On agent groups' page ( orb.live/pages/sinks ) click on remove button 3 - Insert the name of the sink correctly on delete modal Expected Result: Sink must be deleted \"I UNDERSTAND, DELETE THIS SINK\" button must not be enabled After user close the deletion modal, sink must not be deleted","title":"Remove sink using incorrect name"},{"location":"sinks/remove_sink_using_incorrect_name.html#scenario-remove-sink-using-incorrect-name","text":"","title":"Scenario: Remove sink using incorrect name"},{"location":"sinks/remove_sink_using_incorrect_name.html#steps","text":"1 - Create a sink REST API Method: POST endpoint: /sinks header: {authorization:token} 2 - On agent groups' page ( orb.live/pages/sinks ) click on remove button 3 - Insert the name of the sink correctly on delete modal","title":"Steps:"},{"location":"sinks/remove_sink_using_incorrect_name.html#expected-result","text":"Sink must be deleted \"I UNDERSTAND, DELETE THIS SINK\" button must not be enabled After user close the deletion modal, sink must not be deleted","title":"Expected Result:"},{"location":"sinks/test_sink_filters.html","text":"Scenario: Test sink filters Steps: 1 - Create multiple sinks REST API Method: POST endpoint: /sinks header: {authorization:token} 2 - On sinks' page ( orb.live/pages/sinks ) use the filter: Name Description Type Status Tags Search by Expected Result: All filters must be working properly","title":"Test sink filters"},{"location":"sinks/test_sink_filters.html#scenario-test-sink-filters","text":"","title":"Scenario: Test sink filters"},{"location":"sinks/test_sink_filters.html#steps","text":"1 - Create multiple sinks REST API Method: POST endpoint: /sinks header: {authorization:token} 2 - On sinks' page ( orb.live/pages/sinks ) use the filter: Name Description Type Status Tags Search by","title":"Steps:"},{"location":"sinks/test_sink_filters.html#expected-result","text":"All filters must be working properly","title":"Expected Result:"}]}